var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/ActionAbstract.html",[0,0.611,1,0.948]],["body/classes/ActionAbstract.html",[0,0.921,1,1.335,2,0.493,3,0.144,4,0.336,5,0.126,6,0.441,7,0.738,8,0.557,9,0.52,10,0.918,11,0.39,12,1.582,13,1.582,14,1.582,15,1.73,16,1.73,17,2.422,18,1.228,19,1.599,20,1.599,21,1.83,22,1.85,23,2.216,24,1.498,25,0.769,26,0.861,27,0.351,28,1.582,29,0.558,30,0.042,31,0.905,32,0.649,33,1.582,34,1.94,35,1.878,36,0.937,37,1.83,38,3.362,39,2.976,40,0.649,41,1.228,42,2.71,43,0.905,44,1.582,45,4.72,46,3.782,47,3.782,48,3.029,49,1.776,50,1.582,51,1.555,52,0.577,53,1.776,54,1.52,55,2.527,56,1.299,57,1.148,58,1.582,59,1.112,60,1.582,61,1.112,62,1.112,63,1.112,64,1.921,65,1.112,66,1.582,67,2.216,68,2.952,69,1.582,70,1.299,71,2.318,72,1.582,73,1.582,74,0.091,75,1.338,76,2.346,77,0.769,78,2.533,79,2.533,80,1.554,81,2.388,82,2.388,83,1.776,84,1.776,85,1.776,86,1.776,87,2.218,88,1.776,89,1.776,90,1.776,91,1.776,92,1.776,93,1.776,94,1.776,95,1.112,96,1.112,97,1.112,98,2.533,99,0.896,100,2.573,101,1.582,102,0.973,103,1.335,104,1.228,105,2.356,106,2.107,107,3.397,108,1.582,109,1.765,110,1.582,111,1.125,112,1.228,113,1.228,114,0.572,115,0.493,116,0.905,117,1.776,118,1.776,119,0.803,120,1.114,121,1.112,122,1.112,123,2.866,124,1.112,125,1.85,126,1.112,127,0.905,128,2.769,129,3.098,130,0.905,131,0.905,132,0.905,133,2.088,134,2.287,135,0.905,136,0.905,137,2.218,138,0.905,139,2.902,140,1.776,141,1.776,142,0.905,143,0.905,144,2.06,145,1.481,146,0.905,147,1.776,148,1.776,149,0.905,150,0.905,151,2.585,152,1.296,153,1.554,154,1.112,155,0.973,156,1.296,157,0.62,158,1.296,159,2.088,160,0.905,161,1.914,162,0.905,163,2.952,164,0.737,165,0.905,166,0.905,167,1.112,168,1.776,169,0.905,170,1.706,171,2.493,172,1.995,173,1.481,174,0.905,175,2.017,176,0.905,177,0.905,178,0.905,179,0.905,180,1.776,181,0.905,182,1.112,183,0.905,184,2.769,185,1.112,186,0.905,187,1.112,188,0.905,189,1.112,190,0.905,191,0.905,192,1.112,193,0.398,194,0.355,195,3.347,196,1.299,197,0.557,198,2.107,199,0.905,200,0.905,201,0.905,202,0.636,203,0.185,204,0.208,205,0.208,206,0.319,207,0.355,208,0.394,209,0.288,210,1.376,211,1.112,212,0.743,213,1.376,214,0.905,215,0.743,216,0.208,217,0.905,218,0.743,219,0.743,220,0.905,221,2.958,222,0.905,223,2.107,224,0.905,225,0.905,226,2.87,227,0.905,228,0.905,229,0.905,230,0.905,231,1.914,232,0.905,233,1.582,234,0.905,235,1.582,236,0.905,237,1.582,238,0.905,239,1.582,240,0.905,241,1.582,242,0.905,243,0.905,244,1.582,245,0.905,246,0.905,247,0.905,248,0.905,249,0.905,250,0.905,251,1.582,252,3.603,253,1.582,254,1.582,255,0.394,256,0.743,257,1.582,258,1.582,259,2.87,260,1.582,261,1.582,262,0.905,263,0.905,264,0.905,265,0.905,266,0.905,267,0.905,268,0.905,269,1.582,270,0.743,271,0.905,272,0.905,273,0.743,274,0.905,275,0.905,276,1.582,277,0.905,278,0.905,279,0.905,280,0.905,281,2.107,282,0.905,283,0.905,284,0.905,285,0.905,286,0.905,287,0.905,288,0.905,289,1.582,290,0.905,291,0.905,292,1.582,293,2.527,294,0.905,295,0.905,296,0.905,297,0.905,298,0.905,299,0.905,300,0.905,301,0.905,302,0.905,303,0.905,304,0.006,305,0.011,306,0.006]],["title/interfaces/ActionAbstractComponentImpl.html",[203,0.611,307,0.199]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.709,3,0.552,4,0.552,5,0.481,6,0.288,7,0.481,9,0.628,10,1.509,11,0.403,19,1.419,20,1.419,21,1.509,22,1.749,24,1.276,27,0.685,30,0.042,31,0.895,32,1.146,35,2.483,36,0.796,37,1.101,40,0.889,41,2.535,43,0.628,51,1.757,52,0.413,64,1.509,74,0.349,75,1.386,99,0.809,102,3.037,114,0.946,152,1.101,157,1.749,161,2.169,170,1.419,193,0.481,203,0.914,204,0.796,205,0.796,209,1.101,216,1.135,255,1.509,304,0.024,305,0.03,306,0.024,307,0.383,308,0.99,309,2.129,310,3.667,311,1.146,312,3.137,313,3.137,314,3.037,315,1.575,316,1.509,317,2.84,318,1.57,319,2.129,320,1.101,321,2.434,322,2.434,323,2.434,324,2.434]],["title/interfaces/ActionAbstractEvent.html",[204,0.685,307,0.199]],["body/interfaces/ActionAbstractEvent.html",[0,0.708,3,0.551,4,0.551,5,0.48,6,0.288,7,0.48,9,0.627,10,1.507,11,0.401,19,1.417,20,1.417,21,1.507,22,1.747,24,1.275,27,0.685,30,0.042,31,0.808,32,1.145,35,2.408,36,1.024,37,1.417,40,1.145,41,2.167,43,0.808,51,1.569,52,0.412,64,1.507,74,0.349,75,1.385,99,0.808,102,3.034,114,0.945,152,1.417,157,1.355,161,2.167,170,1.417,193,0.48,203,0.708,204,1.024,205,0.794,209,1.417,216,1.134,255,1.943,304,0.024,305,0.03,306,0.024,307,0.383,308,0.989,309,2.126,310,3.134,311,0.888,312,2.431,313,2.431,314,2.741,315,1.84,316,1.507,317,2.839,318,1.756,319,2.741,320,1.417,321,3.134,322,3.134,323,3.134,324,3.134]],["title/interfaces/ActionAbstractOptions.html",[205,0.685,307,0.199]],["body/interfaces/ActionAbstractOptions.html",[0,0.885,3,0.526,4,0.526,5,0.458,6,0.275,7,0.458,9,0.598,10,1.885,11,0.4,19,1.734,20,1.734,21,1.885,22,2.138,24,1.464,27,0.67,30,0.042,31,0.875,32,1.11,35,2.377,36,0.758,37,1.049,40,0.847,41,2.102,43,0.598,51,1.534,52,0.611,64,2.232,74,0.333,75,1.365,99,0.929,102,2.659,114,1.077,152,1.049,157,1.293,161,2.651,170,1.734,193,0.458,203,0.675,204,0.758,205,0.994,209,1.049,216,0.994,255,1.438,304,0.022,305,0.029,306,0.022,307,0.37,308,0.943,309,2.028,310,3.04,311,0.847,312,2.319,313,2.319,314,2.659,315,1.526,316,1.438,317,3.071,318,1.534,319,2.028,320,1.049,321,2.319,322,2.319,323,2.319,324,2.319]],["title/classes/ActionButton.html",[0,0.611,325,0.853]],["body/classes/ActionButton.html",[0,0.755,1,1.843,2,0.898,3,0.263,4,0.263,5,0.229,6,0.335,7,0.229,9,0.729,10,0.719,11,0.385,17,1.994,18,0.802,19,1.681,20,1.589,21,1.864,22,1.821,23,1.014,24,1.368,25,1.793,26,2.53,27,0.229,29,0.922,30,0.042,31,0.889,32,0.671,34,1.014,35,1.413,36,1.149,37,1.801,38,3.629,39,1.606,40,0.423,41,0.802,42,2.472,43,0.775,48,1.16,49,1.836,51,1.641,52,0.648,53,1.836,54,1.477,56,1.354,57,0.898,59,1.16,61,1.16,62,1.16,63,1.16,64,1.864,65,1.16,67,1.606,68,3.576,70,1.354,71,0.719,74,0.166,75,1.413,76,2.53,77,1.269,78,2.593,79,2.593,80,1.994,81,2.593,82,2.593,83,2.28,84,2.28,85,2.28,86,2.28,87,2.593,88,2.28,89,2.28,90,2.28,91,2.28,92,2.28,93,2.28,94,2.28,95,1.836,96,1.836,97,1.836,98,2.826,99,0.812,100,2.817,103,0.582,104,1.269,109,1.014,111,0.646,112,1.793,113,1.793,114,0.775,115,0.898,117,1.836,118,1.836,119,0.83,120,1.145,121,1.16,122,2.28,123,2.593,124,2.28,125,0.898,126,1.16,128,3.15,129,3.515,133,1.014,134,2.009,137,2.28,139,2.472,140,1.836,141,1.836,144,1.766,145,1.16,147,1.836,148,1.836,151,2.705,152,1.173,153,1.606,154,1.16,155,1.014,156,1.014,157,0.646,158,1.014,159,1.606,161,2.078,163,1.16,164,0.423,167,1.16,168,1.836,170,1.712,171,2.44,172,1.953,173,1.16,175,1.16,180,1.16,182,1.16,184,2.28,185,1.16,187,1.16,189,1.16,192,1.16,193,0.558,194,0.646,197,1.014,202,1.16,210,2.44,231,1.269,270,2.144,304,0.011,305,0.018,306,0.011,320,1.031,325,1.43,326,1.576,327,1.16,328,2.612,329,2.382,330,3.028,331,2.612,332,2.612,333,1.576,334,1.649,335,2.144,336,1.649,337,1.836,338,1.649,339,2.612,340,4.711,341,1.354,342,1.354,343,1.354,344,1.354,345,1.354,346,1.354,347,1.354,348,1.354,349,1.649,350,2.144,351,1.836,352,2.144,353,2.612,354,1.354,355,1.354,356,1.354,357,1.354,358,1.354,359,1.354,360,1.354,361,1.354,362,1.354,363,1.354,364,1.354,365,1.354,366,1.354,367,1.354,368,1.354,369,1.354,370,1.354,371,1.354,372,1.354,373,1.354,374,1.354,375,1.354,376,1.16,377,1.354,378,0.802,379,0.898,380,1.16,381,2.28,382,1.354,383,1.354,384,1.354,385,1.354]],["title/interfaces/ActionButtonEvent.html",[307,0.199,379,1.625]],["body/interfaces/ActionButtonEvent.html",[3,0.594,4,0.594,5,0.517,6,0.31,7,0.517,9,0.676,11,0.375,27,0.744,29,1.804,30,0.042,31,0.676,32,1.312,36,1.231,37,1.184,40,1.2,43,0.676,52,0.639,74,0.376,75,1.2,99,0.848,114,0.676,119,1.184,120,1.315,193,0.649,203,0.957,204,1.174,205,1.074,206,1.315,216,1.074,304,0.025,305,0.032,306,0.025,307,0.357,308,1.066,311,0.957,318,1.755,320,1.486,325,1.69,326,1.46,329,1.811,333,1.46,378,1.811,379,2.783,386,2.291,387,2.272,388,2.272,389,2.272,390,2.029,391,2.029,392,2.227,393,3.287,394,2.029,395,1.811,396,2.291,397,2.291,398,2.291]],["title/interfaces/ActionButtonOptions.html",[307,0.199,333,1.169]],["body/interfaces/ActionButtonOptions.html",[3,0.587,4,0.587,5,0.511,6,0.307,7,0.511,9,0.668,11,0.339,27,0.741,29,1.794,30,0.042,31,0.842,32,1.37,36,1.226,37,1.476,40,1.37,43,0.668,52,0.637,74,0.372,75,1.192,99,0.968,114,0.968,119,1.171,120,1.639,193,0.644,203,0.95,204,1.067,205,1.168,206,1.3,216,0.846,304,0.025,305,0.032,306,0.025,307,0.339,308,1.054,311,0.946,318,1.616,320,1.171,325,1.65,326,1.444,329,1.79,333,1.82,378,1.79,379,2.528,386,2.265,387,1.79,388,1.79,389,1.79,390,2.006,391,2.006,392,2.485,393,3.752,394,2.006,395,2.256,396,2.855,397,2.855,398,2.855]],["title/interfaces/ActionGroupEvent.html",[307,0.199,399,1.834]],["body/interfaces/ActionGroupEvent.html",[3,0.593,4,0.593,5,0.516,6,0.31,7,0.516,9,0.675,11,0.381,27,0.709,29,1.802,30,0.042,31,0.675,32,1.311,36,1.073,40,1.199,43,0.675,52,0.609,74,0.375,75,1.311,99,0.847,114,0.675,119,1.182,120,1.313,164,1.508,170,1.485,171,2.026,172,1.621,193,0.709,203,0.956,204,1.173,205,1.073,206,1.313,207,1.458,208,2.036,209,1.182,216,1.073,304,0.025,305,0.032,306,0.025,307,0.357,308,1.064,311,0.955,315,1.313,316,1.621,318,1.702,320,1.485,387,2.27,388,2.27,389,2.27,395,1.808,399,2.872,400,2.287,401,2.026,402,1.621,403,2.615,404,3.054,405,2.872,406,3.054,407,2.615,408,2.615,409,2.872]],["title/interfaces/ActionGroupOptions.html",[307,0.199,402,1.3]],["body/interfaces/ActionGroupOptions.html",[3,0.575,4,0.575,5,0.501,6,0.301,7,0.501,9,0.654,11,0.353,27,0.699,29,1.777,30,0.042,31,0.831,32,1.36,36,0.829,40,1.36,43,0.654,52,0.632,74,0.364,75,1.293,99,0.961,114,0.961,119,1.147,120,1.617,164,1.457,170,1.738,171,2.495,172,1.997,193,0.699,203,0.938,204,1.053,205,1.157,206,1.274,207,1.415,208,2.195,209,1.457,216,0.829,304,0.025,305,0.031,306,0.025,307,0.335,308,1.032,311,0.927,315,1.274,316,1.573,318,1.457,320,1.147,387,1.754,388,1.754,389,1.754,395,2.227,399,2.219,400,2.219,401,1.965,402,1.997,403,3.222,404,3.762,405,3.436,406,4.134,407,3.222,408,3.222,409,3.436]],["title/interfaces/ActionOutlet.html",[307,0.199,410,1.45]],["body/interfaces/ActionOutlet.html",[1,1.235,2,2.116,3,0.449,4,0.449,5,0.391,6,0.4,7,0.539,9,0.87,11,0.368,18,1.889,27,0.539,30,0.042,31,0.705,34,3.345,51,1.898,52,0.695,54,1.656,71,2.27,74,0.284,77,1.889,99,1.065,100,2.163,103,2.08,104,2.531,112,2.163,113,2.163,114,0.807,115,2.836,151,2.163,164,1.449,193,0.766,194,1.103,204,0.647,205,0.647,206,0.994,207,1.523,208,1.227,216,1.197,231,2.531,304,0.019,305,0.026,306,0.019,307,0.297,308,0.805,315,1.372,325,1.579,326,1.523,329,1.368,333,1.881,378,1.368,380,1.979,401,1.533,402,2.092,410,2.333,411,1.979,412,3.191,413,2.116,414,3.191,415,3.191,416,3.191,417,3.191,418,2.815,419,4.002,420,3.191,421,2.815,422,3.191,423,1.881,424,2.815,425,1.579,426,2.311,427,1.368,428,1.523,429,1.979,430,1.368,431,2.311,432,1.979,433,1.979]],["title/directives/ActionOutletDirective.html",[111,1.169,434,1.625]],["body/directives/ActionOutletDirective.html",[0,0.741,1,0.95,3,0.313,4,0.313,5,0.272,6,0.398,7,0.415,9,0.657,11,0.399,18,2.118,19,1.287,20,1.287,24,0.561,25,1.452,26,2.205,27,0.272,30,0.042,31,0.356,35,1.302,43,0.983,51,1.833,52,0.624,54,1.385,57,1.972,71,1.899,74,0.198,76,2.501,77,1.452,80,1.206,100,2.232,103,0.692,105,3.578,109,1.838,111,1.171,112,1.76,113,1.76,114,0.657,125,1.972,134,1.627,139,1.838,144,2.205,151,1.76,152,1.46,153,3.027,155,1.838,157,1.419,158,3.439,159,2.936,164,1.226,172,1.302,193,0.562,194,0.769,196,1.61,203,0.401,206,0.692,208,1.302,209,1.287,210,1.627,213,1.627,216,1.055,218,2.453,219,2.453,221,2.972,231,1.968,255,0.855,256,1.61,304,0.013,305,0.02,306,0.013,311,0.767,314,3.101,315,1.737,316,0.855,319,1.838,325,1.366,329,1.452,351,2.846,392,1.302,394,1.627,405,1.838,410,2.392,412,2.453,425,0.855,430,1.452,434,2.6,435,1.961,436,1.61,437,2.989,438,2.989,439,2.989,440,2.989,441,4.358,442,2.989,443,2.989,444,3.621,445,4.14,446,3.77,447,2.989,448,2.453,449,2.453,450,2.453,451,2.989,452,2.101,453,3.621,454,1.961,455,2.989,456,2.989,457,2.989,458,3.621,459,2.989,460,1.961,461,4.775,462,4.922,463,1.961,464,2.453,465,2.989,466,2.989,467,2.989,468,2.989,469,2.989,470,2.989,471,3.621,472,2.972,473,4.049,474,3.621,475,4.049,476,3.621,477,3.621,478,3.621,479,3.621,480,3.621,481,1.961,482,2.989,483,2.989,484,2.989,485,2.989,486,2.989,487,2.989,488,1.961,489,4.358,490,4.049,491,2.989,492,2.989,493,1.961,494,1.961,495,2.989,496,1.961,497,3.621,498,1.961,499,4.049,500,2.989,501,4.775,502,2.989,503,1.961,504,1.961,505,1.961,506,1.961,507,1.961,508,1.961,509,1.961,510,1.961,511,1.961,512,1.961,513,1.961,514,2.989,515,1.961,516,1.961,517,1.961,518,1.961,519,1.961,520,1.961]],["title/injectables/ActionOutletFactory.html",[413,1.625,521,1.834]],["body/injectables/ActionOutletFactory.html",[0,0.477,3,0.372,4,0.372,5,0.323,6,0.367,9,0.8,11,0.352,19,1.646,20,1.402,25,2.517,26,2.923,27,0.323,30,0.042,51,1.877,52,0.662,54,1.729,67,2.467,71,2.302,74,0.235,77,1.652,99,1.04,100,1.95,103,2.025,104,2.517,112,1.95,113,1.95,114,0.727,115,2.665,151,1.95,156,2.09,164,1.356,193,0.719,194,0.913,207,1.332,208,1.748,209,1.08,210,2.923,213,2.401,216,1.125,231,2.379,304,0.016,305,0.023,306,0.016,316,1.016,325,1.555,326,1.332,329,1.95,330,2.79,333,1.728,378,1.133,380,1.638,392,1.481,401,1.269,402,1.922,409,2.09,410,1.652,413,2.401,414,3.294,415,3.294,416,3.294,417,2.79,419,3.866,420,2.79,422,2.79,423,1.728,425,1.511,426,1.913,427,1.133,428,1.332,429,1.638,430,1.95,432,2.389,446,2.79,449,2.79,452,1.638,472,2.79,521,2.09,522,2.331,523,1.913,524,3.399,525,3.399,526,2.79,527,3.399,528,3.399,529,3.399,530,2.389,531,3.399,532,4.41,533,3.399,534,3.399,535,3.399,536,3.399,537,2.331,538,3.399,539,2.331,540,2.79,541,2.331,542,3.399,543,1.851,544,2.331,545,2.331,546,2.331,547,2.331,548,2.331]],["title/modules/ActionOutletModule.html",[549,1.834,550,1.625]],["body/modules/ActionOutletModule.html",[0,0.855,3,0.666,4,0.666,5,0.58,6,0.348,11,0.278,27,0.58,30,0.041,111,2.361,193,0.746,194,1.638,304,0.028,305,0.034,306,0.028,549,2.57,550,3.189,551,2.938,552,2.57,553,3.431,554,4.414,555,3.431,556,2.938,557,4.414,558,3.431,559,3.431,560,3.431,561,4.119,562,3.431,563,2.938,564,4.179,565,4.119,566,5.017,567,3.431,568,4.179,569,3.431]],["title/classes/ActionToggle.html",[0,0.611,425,0.853]],["body/classes/ActionToggle.html",[0,0.687,1,1.81,2,0.764,3,0.224,4,0.224,5,0.195,6,0.377,7,0.195,9,0.671,10,0.611,11,0.381,17,1.788,18,1.413,19,1.516,20,1.516,21,1.732,22,1.715,23,0.862,24,1.438,25,2.443,26,2.808,27,0.195,29,0.809,30,0.042,31,0.844,32,0.589,34,0.862,35,1.267,36,1.04,37,1.76,38,3.481,39,1.41,40,0.36,41,0.681,42,0.862,43,0.671,48,0.986,49,1.611,51,1.574,52,0.628,53,1.611,54,1.391,57,1.583,59,0.986,61,0.986,62,0.986,63,0.986,64,1.732,65,0.986,67,2.277,68,3.183,71,1.614,74,0.141,75,1.373,76,2.382,77,1.114,78,2.361,79,2.361,80,1.788,81,2.361,82,2.361,83,2.044,84,2.044,85,2.044,86,2.044,87,2.361,88,2.044,89,2.044,90,2.044,91,2.044,92,2.044,93,2.044,94,2.044,95,1.611,96,1.611,97,1.611,98,2.603,99,0.76,100,2.794,103,0.495,104,1.114,109,0.862,111,0.55,112,1.632,113,1.632,114,0.721,115,0.764,117,1.611,118,2.044,119,0.729,120,1.026,121,0.986,122,2.044,123,2.361,124,2.044,125,1.583,126,0.986,128,2.948,129,3.353,133,0.862,134,1.829,137,2.044,139,2.69,140,1.611,141,2.794,144,2.284,145,0.986,147,1.611,148,1.611,151,2.713,152,1.067,153,1.41,154,0.986,155,0.862,156,0.862,157,0.55,158,0.862,159,1.41,161,1.931,163,0.986,164,0.36,167,0.986,168,1.611,170,1.751,171,2.597,172,2.078,173,0.986,175,0.986,180,0.986,182,0.986,184,1.611,185,0.986,187,0.986,189,0.986,192,0.986,193,0.514,194,0.55,195,2.387,197,0.862,202,0.986,210,2.597,213,2.164,231,1.114,304,0.01,305,0.016,306,0.01,335,1.882,337,1.611,340,4.617,341,1.151,342,1.151,343,1.151,344,1.151,345,1.151,346,1.151,347,1.151,348,1.151,350,1.882,351,1.611,352,1.882,354,1.151,355,1.151,356,1.151,357,1.151,358,1.151,359,1.151,360,1.151,361,1.151,362,1.151,363,1.151,364,1.151,365,1.151,366,1.151,367,1.151,368,1.151,369,1.151,370,1.151,371,1.151,372,1.151,373,1.151,374,1.151,375,1.151,376,0.986,377,1.151,382,1.151,383,1.151,384,1.151,385,1.151,423,1.451,425,1.364,427,0.681,428,1.774,429,0.986,430,2.365,464,1.882,543,2.951,570,0.986,571,2.292,572,2.292,573,2.292,574,2.292,575,2.292,576,3.039,577,4.194,578,4.375,579,3.702,580,1.402,581,1.402,582,1.402,583,1.402,584,3.358,585,3.358,586,3.358,587,3.358,588,2.292,589,1.402,590,2.292,591,1.402,592,3.358,593,2.292,594,1.402,595,2.292,596,1.402,597,2.292,598,0.764,599,2.044,600,1.402,601,1.402,602,1.402,603,1.402,604,1.402,605,1.402,606,1.402,607,1.402,608,2.292]],["title/interfaces/ActionToggleEvent.html",[307,0.199,598,1.625]],["body/interfaces/ActionToggleEvent.html",[3,0.566,4,0.566,5,0.492,6,0.296,7,0.492,9,0.643,11,0.381,24,1.429,27,0.731,29,1.763,30,0.042,31,0.643,32,1.283,36,1.209,37,1.128,40,1.164,43,0.643,52,0.649,54,1.441,74,0.358,75,1.351,99,0.822,114,0.822,119,1.128,120,1.252,170,1.673,193,0.629,203,0.928,204,1.148,205,1.042,206,1.252,216,1.042,304,0.024,305,0.031,306,0.024,307,0.351,308,1.015,311,0.911,317,1.932,318,1.729,320,1.441,387,2.203,388,2.203,389,2.203,390,1.932,391,1.932,392,2.177,394,1.932,395,1.724,396,2.182,397,2.182,398,2.182,423,1.391,425,1.677,427,1.724,428,1.391,430,1.724,543,3.118,598,2.72,609,2.182,610,3.187]],["title/interfaces/ActionToggleOptions.html",[307,0.199,423,1.169]],["body/interfaces/ActionToggleOptions.html",[3,0.558,4,0.558,5,0.486,6,0.292,7,0.486,9,0.635,11,0.349,24,1.419,27,0.727,29,1.752,30,0.042,31,0.815,32,1.345,36,1.203,37,1.428,40,1.345,43,0.635,52,0.646,54,1.112,74,0.353,75,1.345,99,0.95,114,1.035,119,1.112,120,1.586,170,1.665,193,0.624,203,0.92,204,1.032,205,1.14,206,1.235,216,0.804,304,0.024,305,0.031,306,0.024,307,0.331,308,1.001,311,0.898,317,2.447,318,1.578,320,1.112,387,1.701,388,1.701,389,1.701,390,1.906,391,1.906,392,2.457,394,1.906,395,2.184,396,2.763,397,2.763,398,2.763,423,1.761,425,1.633,427,1.701,428,1.372,430,1.701,543,3.109,598,2.447,609,2.152,610,3.682]],["title/coverage.html",[611,3.32]],["body/coverage.html",[0,1.073,1,1.114,5,0.486,6,0.504,7,0.752,8,2.766,30,0.041,52,0.418,54,1.114,111,1.374,164,0.9,203,0.717,204,0.805,205,0.805,207,2.124,211,2.464,304,0.024,305,0.031,306,0.024,307,0.387,309,3.054,325,1.002,326,2.054,327,3.162,333,1.374,379,1.908,381,2.464,386,2.766,399,2.155,400,2.766,402,1.527,410,1.703,411,2.464,413,1.908,423,1.374,425,1.002,428,2.054,434,1.908,436,2.877,521,2.155,523,2.877,570,3.162,598,1.908,599,2.464,609,2.766,611,2.877,612,2.877,613,3.505,614,3.505,615,6.048,616,5.419,617,4.498,618,3.505,619,5.419,620,5.419,621,3.505,622,4.967,623,4.077,624,3.505,625,2.877,626,2.877,627,4.498,628,3.505,629,3.505,630,3.505]],["title/dependencies.html",[552,2.202,631,2.505]],["body/dependencies.html",[30,0.042,194,1.7,197,2.666,304,0.03,305,0.035,306,0.03,552,2.666,567,3.56,632,4.337,633,5.944,634,4.337,635,5.129,636,4.337,637,4.337,638,4.337,639,5.129,640,4.211,641,3.56,642,4.337,643,4.337,644,4.337,645,4.337,646,4.337,647,4.337,648,4.337,649,4.337,650,4.337,651,4.337]],["title/miscellaneous/enumerations.html",[652,1.217,653,2.939]],["body/miscellaneous/enumerations.html",[6,0.383,7,0.638,8,3.263,11,0.306,23,3.263,24,1.314,30,0.036,74,0.464,133,3.263,134,2.889,215,4.356,304,0.031,305,0.036,306,0.031,652,2.234,653,3.773,654,3.231]],["title/index.html",[74,0.253,655,1.761,656,1.761]],["body/index.html",[0,1.142,1,0.938,11,0.391,17,2.469,18,1.951,19,1.276,20,0.938,21,1.287,22,1.157,24,0.844,25,2.38,27,0.68,30,0.042,39,1.815,43,0.535,51,1.718,103,1.417,104,2.218,125,2.667,144,1.608,152,0.938,157,1.157,164,1.257,193,0.783,208,1.287,209,1.718,255,1.287,273,2.423,304,0.02,305,0.027,306,0.02,311,0.758,325,1.305,407,2.075,408,2.075,410,2.218,413,2.187,419,2.823,425,1.465,433,2.075,434,1.608,445,2.423,448,2.423,450,2.423,452,2.075,526,3.296,530,3.601,540,2.423,549,1.815,550,2.789,556,3.208,565,3.746,569,3.296,576,2.423,641,2.423,655,2.075,656,2.075,657,2.952,658,2.952,659,5.122,660,2.952,661,2.952,662,2.952,663,4.015,664,2.952,665,2.952,666,2.952,667,2.952,668,2.423,669,2.952,670,2.952,671,2.952,672,4.015,673,2.423,674,2.952,675,2.952,676,2.952,677,2.952,678,2.952,679,2.952,680,2.952,681,5.284,682,2.423,683,4.015,684,5.406,685,4.563,686,4.563,687,4.563,688,2.952,689,2.952,690,2.952,691,2.952,692,2.952,693,2.952,694,5.284,695,2.952,696,2.952,697,4.015,698,2.952,699,2.952,700,2.952,701,2.952,702,4.015,703,2.952,704,4.015,705,2.952,706,4.015,707,2.952,708,4.897,709,2.423,710,2.952,711,2.952,712,2.952,713,2.952,714,2.952,715,2.952,716,4.015,717,2.952,718,4.015,719,2.952,720,2.952,721,2.952,722,2.952,723,2.952,724,2.952,725,2.952,726,2.952,727,2.952,728,2.952,729,2.952,730,2.952,731,2.952]],["title/license.html",[655,1.761,656,1.761,732,2.056]],["body/license.html",[11,0.266,30,0.033,42,2.458,152,1.271,172,1.742,304,0.027,305,0.033,306,0.027,318,1.271,337,2.81,376,2.81,530,3.433,563,2.81,612,3.282,668,3.282,673,3.282,732,3.282,733,3.998,734,5.274,735,3.998,736,3.998,737,3.998,738,3.998,739,4.884,740,3.998,741,3.998,742,3.998,743,3.998,744,3.998,745,4.884,746,5.902,747,3.998,748,3.998,749,3.998,750,5.274,751,3.998,752,4.884,753,3.998,754,3.998,755,3.998,756,3.998,757,3.998,758,3.998,759,3.998,760,3.998,761,4.884,762,3.998,763,3.998,764,3.998,765,3.998,766,3.998,767,4.884,768,4.884,769,3.998,770,3.998,771,3.998,772,3.998,773,3.998,774,3.998,775,3.998,776,3.998,777,3.998,778,3.998,779,3.998,780,3.998,781,3.998,782,3.998,783,3.998,784,3.998,785,3.998,786,3.998,787,3.998,788,3.998,789,3.998,790,3.998,791,3.998,792,3.998,793,3.998]],["title/modules.html",[551,2.843]],["body/modules.html",[30,0.037,304,0.032,305,0.037,306,0.032,550,2.564,551,3.31,640,3.866,794,4.709,795,4.709,796,4.709]],["title/overview.html",[797,3.32]],["body/overview.html",[2,2.402,30,0.039,111,2.32,304,0.03,305,0.035,306,0.03,308,1.261,434,2.402,521,2.712,549,3.186,550,3.151,552,2.712,553,3.621,554,3.621,555,3.621,556,3.101,557,3.621,558,3.621,559,3.621,560,3.621,561,4.253,562,3.621,563,3.101,682,4.516,709,3.621,797,3.621,798,4.411]],["title/miscellaneous/typealiases.html",[652,1.217,799,3.581]],["body/miscellaneous/typealiases.html",[1,1.302,6,0.462,11,0.273,30,0.034,31,0.743,36,1.139,43,0.967,52,0.688,74,0.413,103,1.446,119,1.694,164,1.052,203,1.091,207,1.606,304,0.028,305,0.034,306,0.028,311,1.369,315,1.882,325,1.418,326,1.606,378,2.409,386,3.278,390,2.7,391,2.7,392,2.161,393,3.485,400,3.048,401,2.7,411,3.485,425,1.418,427,2.409,428,1.606,431,3.364,432,2.88,433,2.88,609,3.278,610,3.485,652,1.991,654,4.053,800,4.097,801,4.958]],["title/miscellaneous/variables.html",[652,1.217,802,2.939]],["body/miscellaneous/variables.html",[1,1.194,6,0.448,7,0.521,8,2.89,10,2.342,11,0.358,15,3.084,16,3.084,19,1.194,20,1.194,22,1.472,30,0.042,52,0.641,54,1.194,57,2.793,64,1.637,71,1.637,74,0.379,76,2.927,99,1.05,103,2.061,152,1.708,164,0.964,207,1.472,209,1.494,211,3.304,212,3.084,213,2.045,255,2.412,304,0.026,305,0.032,306,0.026,315,1.326,325,1.074,326,1.472,327,3.304,333,1.472,381,3.304,402,1.637,403,2.641,405,2.89,409,2.31,423,1.472,425,1.074,428,1.472,543,2.045,570,3.304,599,3.304,623,4.211,625,3.858,626,4.211,652,1.826,654,3.89,802,3.084,803,3.756,804,3.756]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.9.1",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":682,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":798,"title":{},"body":{"overview.html":{}}}],["100",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":696,"title":{},"body":{"index.html":{}}}],["2.0.8",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":736,"title":{},"body":{"license.html":{}}}],["3",{"_index":698,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":709,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":719,"title":{},"body":{"index.html":{}}}],["5.0.11",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["58/58",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":727,"title":{},"body":{"index.html":{}}}],["6.4.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["8.1.4",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["8.2.4",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["_setparent(parent",{"_index":295,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_unsetparent",{"_index":301,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["above",{"_index":766,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":31,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":206,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":309,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":8,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract.ts:105",{"_index":130,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:111",{"_index":116,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:165",{"_index":101,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:205",{"_index":191,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:257",{"_index":138,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:270",{"_index":142,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:283",{"_index":143,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:292",{"_index":169,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:299",{"_index":179,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:306",{"_index":174,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:315",{"_index":186,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:323",{"_index":165,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:332",{"_index":183,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:340",{"_index":160,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:347",{"_index":190,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:355",{"_index":166,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:365",{"_index":188,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:373",{"_index":181,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:380",{"_index":178,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:387",{"_index":149,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:395",{"_index":146,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:403",{"_index":176,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:410",{"_index":177,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:419",{"_index":150,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:426",{"_index":162,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:81",{"_index":135,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:85",{"_index":131,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:90",{"_index":136,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:94",{"_index":127,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:99",{"_index":132,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":444,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessed",{"_index":721,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":459,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":479,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":11,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":519,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":1,"title":{"classes/ActionAbstract.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:105",{"_index":344,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:111",{"_index":341,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:165",{"_index":342,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:205",{"_index":375,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:257",{"_index":354,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:270",{"_index":355,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:283",{"_index":356,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:292",{"_index":364,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:299",{"_index":369,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:306",{"_index":365,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:315",{"_index":372,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:323",{"_index":362,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:332",{"_index":371,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:340",{"_index":360,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:347",{"_index":374,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:355",{"_index":363,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:365",{"_index":373,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:373",{"_index":370,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:380",{"_index":368,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:387",{"_index":358,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:395",{"_index":357,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:403",{"_index":366,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:410",{"_index":367,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:419",{"_index":359,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:426",{"_index":361,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:81",{"_index":347,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:85",{"_index":345,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:90",{"_index":348,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:94",{"_index":343,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:99",{"_index":346,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstractcomponentimpl",{"_index":203,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":204,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":205,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionbutton",{"_index":325,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":546,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":393,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":378,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":379,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":333,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actioncustom",{"_index":28,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actioncustomoptions",{"_index":50,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actionfactory.createbutton",{"_index":331,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":332,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createtoggle",{"_index":574,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actionfactory.createtoggle().check",{"_index":575,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actiongroup",{"_index":164,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":547,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":401,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":399,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":402,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":410,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(action",{"_index":498,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":458,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":111,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":413,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodule",{"_index":550,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":209,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":215,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":173,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.destroyed",{"_index":175,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.inactive",{"_index":180,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actiontoggle",{"_index":425,"title":{"classes/ActionToggle.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":548,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":610,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":427,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":598,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":423,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":78,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["active",{"_index":23,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":714,"title":{},"body":{"index.html":{}}}],["add",{"_index":695,"title":{},"body":{"index.html":{}}}],["again",{"_index":271,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["aliases",{"_index":800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":141,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["always",{"_index":443,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":759,"title":{},"body":{"license.html":{}}}],["angular",{"_index":157,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["angular/animations",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":567,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":194,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["anyaction",{"_index":315,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":661,"title":{},"body":{"index.html":{}}}],["application",{"_index":676,"title":{},"body":{"index.html":{}}}],["approach",{"_index":531,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropriate",{"_index":692,"title":{},"body":{"index.html":{}}}],["arising",{"_index":791,"title":{},"body":{"license.html":{}}}],["array",{"_index":403,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":108,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["assigned",{"_index":490,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associate",{"_index":701,"title":{},"body":{"index.html":{}}}],["associated",{"_index":747,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":440,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":782,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":484,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["available",{"_index":730,"title":{},"body":{"index.html":{}}}],["back",{"_index":273,"title":{},"body":{"classes/ActionAbstract.html":{},"index.html":{}}}],["based",{"_index":678,"title":{},"body":{"index.html":{}}}],["basic",{"_index":328,"title":{},"body":{"classes/ActionButton.html":{}}}],["behaviors",{"_index":14,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject",{"_index":195,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionToggle.html":{}}}],["behaviorsubject(!!this.options.checked",{"_index":600,"title":{},"body":{"classes/ActionToggle.html":{}}}],["behaviorsubject(actionstate.inactive",{"_index":242,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(disabled",{"_index":240,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(icon",{"_index":236,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(title",{"_index":234,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(visible",{"_index":238,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["belongs",{"_index":228,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["between",{"_index":16,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["bind",{"_index":728,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":170,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":555,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["bridge",{"_index":44,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["browse",{"_index":796,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":640,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":662,"title":{},"body":{"index.html":{}}}],["button",{"_index":329,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.component",{"_index":703,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":380,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":386,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":353,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":327,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:39",{"_index":338,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:44",{"_index":336,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:49",{"_index":334,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:87",{"_index":349,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":326,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":532,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":735,"title":{},"body":{"license.html":{}}}],["callback",{"_index":392,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":449,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":350,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["case",{"_index":671,"title":{},"body":{"index.html":{}}}],["change",{"_index":125,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["change/update",{"_index":478,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":38,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["charge",{"_index":673,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":576,"title":{},"body":{"classes/ActionToggle.html":{},"index.html":{}}}],["checkbox",{"_index":572,"title":{},"body":{"classes/ActionToggle.html":{}}}],["checkbox.component",{"_index":717,"title":{},"body":{"index.html":{}}}],["checked",{"_index":543,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":319,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":405,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":785,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{},"overview.html":{}}}],["clean",{"_index":529,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":516,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["click",{"_index":352,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["cluster_actionoutletmodule",{"_index":558,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":559,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":560,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":528,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["combination",{"_index":192,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["coming",{"_index":389,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":688,"title":{},"body":{"index.html":{}}}],["comming",{"_index":322,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":566,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":477,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":439,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":145,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["component",{"_index":51,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["component's",{"_index":474,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":508,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":462,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":497,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":311,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":765,"title":{},"body":{"license.html":{}}}],["connection",{"_index":792,"title":{},"body":{"license.html":{}}}],["const",{"_index":210,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":49,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["constructor(private",{"_index":723,"title":{},"body":{"index.html":{}}}],["constructor(viewcontainerref",{"_index":460,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":475,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":404,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["contract",{"_index":788,"title":{},"body":{"license.html":{}}}],["copies",{"_index":761,"title":{},"body":{"license.html":{}}}],["copy",{"_index":745,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":734,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":611,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":104,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["createbutton",{"_index":414,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":417,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":467,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":408,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["creategroup",{"_index":415,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":420,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":416,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":422,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":218,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["current",{"_index":139,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["currently",{"_index":294,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["custom",{"_index":39,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["cycle",{"_index":258,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["damages",{"_index":786,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":79,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deal",{"_index":749,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":793,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":554,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":103,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default's",{"_index":710,"title":{},"body":{"index.html":{}}}],["defaultabstractoptions",{"_index":211,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":381,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":599,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":433,"title":{},"body":{"interfaces/ActionOutlet.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":100,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["defines",{"_index":482,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":171,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{}}}],["demo",{"_index":680,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":552,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":465,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":189,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deploy",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["derived",{"_index":35,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["desabled",{"_index":222,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["descendant",{"_index":447,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":80,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["destroyed",{"_index":134,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":485,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":480,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinamically",{"_index":441,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":434,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":435,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":489,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disable",{"_index":81,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["disabled",{"_index":22,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distinctuntilchanged",{"_index":198,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["distribute",{"_index":757,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":612,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doen",{"_index":126,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["dom",{"_index":155,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["dropdown",{"_index":409,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":641,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":18,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["each",{"_index":17,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["easy",{"_index":660,"title":{},"body":{"index.html":{}}}],["enable",{"_index":82,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["enabled",{"_index":148,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["end",{"_index":672,"title":{},"body":{"index.html":{}}}],["enum",{"_index":214,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["enumerations",{"_index":653,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":505,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":476,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["event",{"_index":318,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":25,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["examplebuttoncomponent",{"_index":702,"title":{},"body":{"index.html":{}}}],["examplecheckboxcomponent",{"_index":716,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":718,"title":{},"body":{"index.html":{}}}],["examplegroupcomponent",{"_index":704,"title":{},"body":{"index.html":{}}}],["examplemodule",{"_index":697,"title":{},"body":{"index.html":{}}}],["exampletogglecomponent",{"_index":706,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["exports",{"_index":557,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["exposed",{"_index":513,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":774,"title":{},"body":{"license.html":{}}}],["extend",{"_index":102,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":10,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":395,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["extends",{"_index":29,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["factory",{"_index":412,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":57,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["false).pipe",{"_index":602,"title":{},"body":{"classes/ActionToggle.html":{}}}],["fetch",{"_index":491,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":748,"title":{},"body":{"license.html":{}}}],["filter",{"_index":199,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["filter(state",{"_index":245,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["finish",{"_index":227,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fire",{"_index":36,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":536,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["firecustom",{"_index":72,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fires",{"_index":224,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["first",{"_index":397,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":779,"title":{},"body":{"license.html":{}}}],["fly",{"_index":442,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":337,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["forced",{"_index":109,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["forcedcomponent",{"_index":220,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["free",{"_index":742,"title":{},"body":{"license.html":{}}}],["front",{"_index":675,"title":{},"body":{"index.html":{}}}],["function",{"_index":801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functional",{"_index":525,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["functionality",{"_index":571,"title":{},"body":{"classes/ActionToggle.html":{}}}],["furnished",{"_index":764,"title":{},"body":{"license.html":{}}}],["getactionoutlet",{"_index":493,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype",{"_index":456,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":487,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":83,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["geticon",{"_index":84,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getparent",{"_index":85,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getter",{"_index":495,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":655,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":86,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["goal",{"_index":658,"title":{},"body":{"index.html":{}}}],["going",{"_index":110,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["granted",{"_index":741,"title":{},"body":{"license.html":{}}}],["group",{"_index":208,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.component",{"_index":705,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":426,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":400,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":207,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hammerjs",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":252,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handleactivatestate(observable",{"_index":274,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handled",{"_index":219,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["handlelivecycle(observable",{"_index":265,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handlelivecycledistinct(observable",{"_index":262,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["happens",{"_index":667,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":740,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide",{"_index":87,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide/show",{"_index":677,"title":{},"body":{"index.html":{}}}],["holders",{"_index":783,"title":{},"body":{"license.html":{}}}],["holding",{"_index":118,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hook",{"_index":515,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["html",{"_index":451,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["icon",{"_index":20,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":119,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":41,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["implementations",{"_index":12,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["implemented",{"_index":34,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{}}}],["implementing",{"_index":313,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":452,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["implied",{"_index":775,"title":{},"body":{"license.html":{}}}],["import",{"_index":193,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["imports",{"_index":569,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["inactive",{"_index":133,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":769,"title":{},"body":{"license.html":{}}}],["including",{"_index":752,"title":{},"body":{"license.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":340,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["initial",{"_index":317,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":407,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["injectable",{"_index":521,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":522,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":466,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":158,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["injector.get(action.constructor",{"_index":520,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":314,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":457,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["install",{"_index":683,"title":{},"body":{"index.html":{}}}],["instance",{"_index":216,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":503,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instances",{"_index":720,"title":{},"body":{"index.html":{}}}],["instantiate",{"_index":335,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["instead",{"_index":156,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["interface",{"_index":307,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":308,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"overview.html":{}}}],["internal",{"_index":226,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["internally",{"_index":221,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":464,"title":{},"body":{"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["isactive",{"_index":88,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ischecked",{"_index":577,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isdestroyed",{"_index":89,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isdisabled",{"_index":90,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isenabled",{"_index":91,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ishidden",{"_index":92,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isinactive",{"_index":93,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isunchecked",{"_index":578,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isvisible",{"_index":94,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["it's",{"_index":120,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["keep",{"_index":527,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":773,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":737,"title":{},"body":{"license.html":{}}}],["legend",{"_index":553,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["leverage",{"_index":107,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["liability",{"_index":787,"title":{},"body":{"license.html":{}}}],["liable",{"_index":784,"title":{},"body":{"license.html":{}}}],["license",{"_index":732,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":753,"title":{},"body":{"license.html":{}}}],["limited",{"_index":776,"title":{},"body":{"license.html":{}}}],["line",{"_index":689,"title":{},"body":{"index.html":{}}}],["live",{"_index":257,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["livecycle",{"_index":223,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["manually",{"_index":486,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["map",{"_index":377,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["map(checked",{"_index":603,"title":{},"body":{"classes/ActionToggle.html":{}}}],["matches",{"_index":225,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["matching",{"_index":305,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":669,"title":{},"body":{"index.html":{}}}],["menus",{"_index":663,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":778,"title":{},"body":{"license.html":{}}}],["merge",{"_index":376,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["merged",{"_index":217,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["merging",{"_index":121,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["metadata",{"_index":454,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":67,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["miscellaneous",{"_index":652,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":733,"title":{},"body":{"license.html":{}}}],["modify",{"_index":755,"title":{},"body":{"license.html":{}}}],["module",{"_index":549,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["module,but",{"_index":713,"title":{},"body":{"index.html":{}}}],["modules",{"_index":551,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["more",{"_index":324,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":113,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["natural",{"_index":670,"title":{},"body":{"index.html":{}}}],["need",{"_index":33,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["needs",{"_index":69,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["never",{"_index":196,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["new",{"_index":54,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":391,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":684,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":657,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":565,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":514,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":724,"title":{},"body":{"index.html":{}}}],["nide",{"_index":167,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["non",{"_index":46,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["noninfringement",{"_index":781,"title":{},"body":{"license.html":{}}}],["notice",{"_index":767,"title":{},"body":{"license.html":{}}}],["notification",{"_index":587,"title":{},"body":{"classes/ActionToggle.html":{}}}],["notified",{"_index":666,"title":{},"body":{"index.html":{}}}],["notifies",{"_index":128,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notify",{"_index":184,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notifying",{"_index":124,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["npm",{"_index":686,"title":{},"body":{"index.html":{}}}],["observable",{"_index":37,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observable.pipe",{"_index":266,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["observables",{"_index":123,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["obtaining",{"_index":744,"title":{},"body":{"license.html":{}}}],["once",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":453,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":446,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["oninit",{"_index":722,"title":{},"body":{"index.html":{}}}],["optional",{"_index":114,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":99,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":526,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oservable",{"_index":387,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":738,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":790,"title":{},"body":{"license.html":{}}}],["out",{"_index":563,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":685,"title":{},"body":{"index.html":{}}}],["outlet.directive",{"_index":568,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":436,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:106",{"_index":463,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:143",{"_index":488,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":470,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:87",{"_index":494,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:95",{"_index":481,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":316,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":411,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":418,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":421,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":424,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":564,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":523,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":537,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":539,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":541,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/core",{"_index":694,"title":{},"body":{"index.html":{}}}],["over",{"_index":674,"title":{},"body":{"index.html":{}}}],["override",{"_index":419,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":323,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":797,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":631,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":231,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parent",{"_index":163,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["particular",{"_index":668,"title":{},"body":{"index.html":{},"license.html":{}}}],["pause",{"_index":261,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["paused",{"_index":254,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["pausing",{"_index":269,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["permission",{"_index":739,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":679,"title":{},"body":{"index.html":{}}}],["permit",{"_index":762,"title":{},"body":{"license.html":{}}}],["person",{"_index":743,"title":{},"body":{"license.html":{}}}],["persons",{"_index":763,"title":{},"body":{"license.html":{}}}],["pointing",{"_index":700,"title":{},"body":{"index.html":{}}}],["portions",{"_index":771,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":665,"title":{},"body":{"index.html":{}}}],["possible",{"_index":260,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["previously",{"_index":168,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["prevously",{"_index":147,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["private",{"_index":105,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["produce",{"_index":585,"title":{},"body":{"classes/ActionToggle.html":{}}}],["project",{"_index":693,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":492,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":32,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["property",{"_index":117,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["protected",{"_index":48,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["provide",{"_index":659,"title":{},"body":{"index.html":{}}}],["provided",{"_index":152,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":544,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":556,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":13,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["providing",{"_index":472,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":122,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["publish",{"_index":756,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":780,"title":{},"body":{"license.html":{}}}],["reactive",{"_index":45,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":406,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":388,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":731,"title":{},"body":{"index.html":{}}}],["reference",{"_index":256,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":396,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":445,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendered",{"_index":473,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renderer",{"_index":729,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":438,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering.provide",{"_index":699,"title":{},"body":{"index.html":{}}}],["renders",{"_index":229,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["represent",{"_index":154,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["required",{"_index":212,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":562,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":468,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":469,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":751,"title":{},"body":{"license.html":{}}}],["result",{"_index":304,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":306,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":151,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["rights",{"_index":754,"title":{},"body":{"license.html":{}}}],["root",{"_index":545,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["runtime",{"_index":664,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":197,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":202,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["same",{"_index":712,"title":{},"body":{"index.html":{}}}],["second",{"_index":586,"title":{},"body":{"classes/ActionToggle.html":{}}}],["selector",{"_index":455,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":760,"title":{},"body":{"license.html":{}}}],["service",{"_index":524,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":144,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["set(children",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":496,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["seticon",{"_index":95,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["seticon('icon",{"_index":535,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":182,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setter",{"_index":471,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settings",{"_index":711,"title":{},"body":{"index.html":{}}}],["settitle",{"_index":96,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["settitle('action",{"_index":534,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('example",{"_index":726,"title":{},"body":{"index.html":{}}}],["settitle(title",{"_index":185,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility",{"_index":97,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility(visibility",{"_index":187,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["shall",{"_index":768,"title":{},"body":{"license.html":{}}}],["shared",{"_index":15,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["shere",{"_index":312,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":431,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["shouldpause",{"_index":259,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["shouldpause).pipe",{"_index":264,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["show",{"_index":98,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["slider",{"_index":573,"title":{},"body":{"classes/ActionToggle.html":{}}}],["software",{"_index":746,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specific",{"_index":40,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["started",{"_index":656,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":24,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["state(`active",{"_index":253,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["statements",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":584,"title":{},"body":{"classes/ActionToggle.html":{}}}],["step",{"_index":681,"title":{},"body":{"index.html":{}}}],["string",{"_index":161,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["structural",{"_index":437,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":42,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["subjects",{"_index":106,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["sublicense",{"_index":758,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":398,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":320,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":390,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":129,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["substantial",{"_index":770,"title":{},"body":{"license.html":{}}}],["super",{"_index":382,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["support",{"_index":794,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":795,"title":{},"body":{"modules.html":{}}}],["switches",{"_index":272,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap",{"_index":200,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap(state",{"_index":275,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["table",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":201,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["takeuntil(this.finish",{"_index":267,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["template",{"_index":450,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":330,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":321,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.action",{"_index":501,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":512,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":502,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":518,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":538,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":540,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggle",{"_index":542,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":517,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":533,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.activate",{"_index":299,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.changes",{"_index":59,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":509,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":499,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance.action",{"_index":511,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.custom",{"_index":55,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom$.pipe(map(custom",{"_index":66,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom.next(math.random",{"_index":73,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.deactivate",{"_index":303,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disable",{"_index":297,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled",{"_index":239,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":65,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.disabled.getvalue",{"_index":292,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(false",{"_index":290,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(true",{"_index":291,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.enable",{"_index":302,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.finish",{"_index":243,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.fire",{"_index":53,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":385,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire.getvalue",{"_index":608,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next",{"_index":70,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.fire.next(!this.fire.getvalue",{"_index":605,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(false",{"_index":607,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(true",{"_index":606,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.pipe(map(checked",{"_index":604,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.forcedcomponent",{"_index":251,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.getcomponenttype(this.action",{"_index":506,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":448,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggle",{"_index":725,"title":{},"body":{"index.html":{}}}],["this.handleactivatestate(source",{"_index":268,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(merge",{"_index":383,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.handlelivecycle(observable",{"_index":263,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(observable.merge",{"_index":60,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.custom.asobservable",{"_index":58,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":56,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.handlelivecycledistinct(this.disabled.asobservable",{"_index":249,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.fire.asobservable",{"_index":601,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.handlelivecycledistinct(this.icon.asobservable",{"_index":247,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.title.asobservable",{"_index":246,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.visible.asobservable",{"_index":248,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon",{"_index":235,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon$.pipe(map(icon",{"_index":62,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.icon.getvalue",{"_index":285,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon.next(icon",{"_index":284,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.injector",{"_index":507,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.isdestroyed",{"_index":276,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options",{"_index":232,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options.callback",{"_index":384,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.parent",{"_index":293,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isactive",{"_index":298,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isdisabled",{"_index":296,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state",{"_index":241,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.asobservable().pipe",{"_index":250,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.complete",{"_index":280,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.getvalue",{"_index":281,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.active",{"_index":277,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.destroyed",{"_index":279,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.inactive",{"_index":278,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.pipe",{"_index":244,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title",{"_index":233,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title$.pipe(map(title",{"_index":61,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.title.getvalue",{"_index":283,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title.next(title",{"_index":282,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.viewcontainerref.clear",{"_index":500,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":510,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible",{"_index":237,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible$.pipe(map(visible",{"_index":63,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.visible.getvalue",{"_index":289,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(false",{"_index":287,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(true",{"_index":286,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(visibility",{"_index":288,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["throw",{"_index":504,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":19,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":430,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.check",{"_index":588,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.component",{"_index":707,"title":{},"body":{"index.html":{}}}],["toggle.ischecked",{"_index":590,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.isunchecked",{"_index":593,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.model",{"_index":429,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["toggle.model.ts",{"_index":609,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.trigger",{"_index":595,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts",{"_index":570,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle.ts:110",{"_index":583,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:126",{"_index":596,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:141",{"_index":589,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:155",{"_index":591,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:42",{"_index":582,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:47",{"_index":581,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:52",{"_index":580,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:94",{"_index":594,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.uncheck",{"_index":597,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle/action",{"_index":428,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":691,"title":{},"body":{"index.html":{}}}],["tool.choose",{"_index":690,"title":{},"body":{"index.html":{}}}],["tort",{"_index":789,"title":{},"body":{"license.html":{}}}],["travis",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["trigger",{"_index":68,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["triggered",{"_index":339,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":213,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":52,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":799,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":230,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["types",{"_index":310,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":26,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["uncheck",{"_index":579,"title":{},"body":{"classes/ActionToggle.html":{}}}],["unchecked",{"_index":592,"title":{},"body":{"classes/ActionToggle.html":{}}}],["undefined",{"_index":159,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["underlying",{"_index":483,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":140,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["unset",{"_index":300,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["use",{"_index":530,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":43,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["usevalue",{"_index":708,"title":{},"body":{"index.html":{}}}],["value",{"_index":255,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":802,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":153,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["view",{"_index":351,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["viewcontainerref",{"_index":461,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":21,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["visible",{"_index":64,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":394,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":777,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":772,"title":{},"body":{"license.html":{}}}],["way",{"_index":432,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":270,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["whether",{"_index":172,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["wish",{"_index":715,"title":{},"body":{"index.html":{}}}],["without",{"_index":750,"title":{},"body":{"license.html":{}}}],["world",{"_index":47,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["yarn",{"_index":687,"title":{},"body":{"index.html":{}}}],["yes",{"_index":115,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["zone.js",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":561,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActionAbstract.html":{"url":"classes/ActionAbstract.html","title":"class - ActionAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.ts\n        \n\n            \n                Description\n            \n            \n                ActionAbstract is extended by all action implementations\nProvides all the behaviors, shared between each action\ne.g. title, icon, visibility, disabled, active state\nExample\n```typescript\n\nexport class ActionCustom extends ActionAbstract {\n// Abstract properties need to be implemented by derived class\nfire$: Observable;\nchanges$: Observable;\n// A custom observable, specific to this action implementation\ncustom$: Observable;\n\n// A custom subject that is used to bridge reactive and non reactive world\nprotected custom: Subject;\n\nconstructor(options: ActionCustomOptions,\ncomponent?: Type) {\nthis.fire = new Subject();\nthis.custom = new Subject();\n\nthis.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\nthis.custom$ = this.handleLivecycle(this.custom.asObservable());\nthis.changes$ = this.handleLivecycle(Observable.merge(\nthis.title$.pipe(map(title => ({ title }))),\nthis.icon$.pipe(map(icon => ({ icon }))),\nthis.visible$.pipe(map(visible => ({ visible }))),\nthis.disabled$.pipe(map(disabled => ({ disabled }))),\nthis.custom$.pipe(map(custom => ({ custom })))\n));\n}\n\n// Abstract method trigger needs to be implemented by every derived class\ntrigger(): this {\nthis.fire.next({ action: this });\nreturn this;\n}\n\n// A custom method to trigger custom subject and custom$ observable\nfireCustom(): this {\nthis.custom.next(Math.random());\nreturn this;\n}\n}\n```\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: Options, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:165\n                            \n                        \n\n                \n                    \n                            Abstract action constructor. It will:\n\nExtend default options with derived default options and custom options\nCreate all private subjects that are used to leverage reactive world with non reactive\nCreate observable for each private subject\nAssign forced component, that is going to be used by ActionOutletDirective\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionAbstract\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:111\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:165\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:94\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:105\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:85\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:99\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:81\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:90\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:257\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:270\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:283\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:395\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:387\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:419\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:340\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:426\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:323\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:355\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:292\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:306\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:403\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:410\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:380\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:299\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:373\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:332\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:315\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:365\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:347\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:205\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, NEVER } from 'rxjs';\nimport { distinctUntilChanged , filter, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionGroup } from '../action-group/action-group';\n\n/**\n * Default options for `ActionAbstract` - shared between **all** actions\n * Extended by provided options in action `constructor`\n */\nconst defaultAbstractOptions: Required = {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n};\n\n/**\n * The state of the action\n * Can be `Active`, `Inactive` or `Destroyed`\n */\nexport const enum ActionState {\n    Active,\n    Inactive,\n    Destroyed,\n}\n\n/**\n * `ActionAbstract` is extended by **all** action implementations\n * Provides all the behaviors, shared between **each** action\n * *e.g. title, icon, visibility, disabled, active state*\n *\n * ## Example\n *\n * ```typescript\n * export class ActionCustom extends ActionAbstract {\n *     // Abstract properties need to be implemented by derived class\n *     fire$: Observable;\n *     changes$: Observable;\n *     // A custom observable, specific to this action implementation\n *     custom$: Observable;\n *\n *     // A custom subject that is used to bridge reactive and non reactive world\n *     protected custom: Subject;\n *\n *     constructor(options: ActionCustomOptions,\n *                 component?: Type) {\n *         this.fire = new Subject();\n *         this.custom = new Subject();\n *\n *         this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n *         this.custom$ = this.handleLivecycle(this.custom.asObservable());\n *         this.changes$ = this.handleLivecycle(Observable.merge(\n *             this.title$.pipe(map(title => ({ title }))),\n *             this.icon$.pipe(map(icon => ({ icon }))),\n *             this.visible$.pipe(map(visible => ({ visible }))),\n *             this.disabled$.pipe(map(disabled => ({ disabled }))),\n *             this.custom$.pipe(map(custom => ({ custom })))\n *         ));\n *     }\n *\n *     // Abstract method trigger needs to be implemented by every derived class\n *     trigger(): this {\n *         this.fire.next({ action: this });\n *         return this;\n *     }\n *\n *     // A custom method to trigger custom subject and custom$ observable\n *     fireCustom(): this {\n *         this.custom.next(Math.random());\n *         return this;\n *     }\n * }\n * ```\n */\nexport abstract class ActionAbstract {\n    /**\n     * `Observable` that notifies subscriptions when title changes\n     */\n    readonly title$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when icon changes\n     */\n    readonly icon$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when visibility state changes\n     * (visible or hidden)\n     */\n    readonly visible$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when disabled state changes\n     */\n    readonly disabled$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when action state changes\n     * e.g. `Active`, `Inactive`, `Destroyed`\n     */\n    readonly state$: Observable;\n    /**\n     * **Abstract** property, holding `Observable`\n     * Each derived class **should** implement it's own `fire$` observable,\n     * with it's own specific implementation\n     */\n    abstract readonly fire$: Observable;\n    /**\n     * **Abstract** property, holding `Observable`\n     * Each derived class **should** implement it's own `changes$` observable,\n     * merging all public observables, notifying for every change doen to action\n     */\n    abstract readonly changes$: Observable;\n\n    /**\n     * Options of action instance\n     * **Merged** default options from derived class, default options from abstract class,\n     * and options provided on action creation to `constructor`\n     */\n    protected readonly options: Options;\n    /**\n     * `Component`, provided to action `constructor`\n     * Should be forced and used instead of component in `Injector`\n     * That is handled by `ActionOutletDirective`\n     */\n    protected readonly forcedComponent?: Type;\n    /**\n     * Title `BehaviorSubject`, used **internally** to notify on title change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly title: BehaviorSubject;\n    /**\n     * Icon `BehaviorSubject`, used **internally** to notify on icon change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly icon: BehaviorSubject;\n    /**\n     * Visibility `BehaviorSubject`, used **internally** to notify on visibility state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly visible: BehaviorSubject;\n    /**\n     * Desabled state `BehaviorSubject`, used **internally** to notify on disabled state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly disabled: BehaviorSubject;\n    /**\n     * Action livecycle state `BehaviorSubject`, used **internally** to notify on action state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly state: BehaviorSubject;\n    /**\n     * `Observable` that fires, when state matches `ActionState.Destroyed`\n     * Used to complete all **internal** subjects\n     */\n    protected readonly finish: Observable;\n\n    /**\n     * Parent of current action. This is a parent action,\n     * to whom current action belongs to, and renders into\n     */\n    private parent?: ActionGroup;\n\n    /**\n     * `constructor` should be `ActionAbstract`\n     */\n    ['constructor']: typeof ActionAbstract;\n\n    /**\n     * Abstract action `constructor`. It will:\n     * - **Extend** default options with derived default options and custom options\n     * - **Create** all private subjects that are used to leverage reactive world with non reactive\n     * - **Create** observable for each private subject\n     * - **Assign** forced component, that is going to be used by `ActionOutletDirective`\n     *\n     * @param options Options for `ActionAbstract`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: Options,\n                component?: Type) {\n        const { title, icon, visible, disabled } = this.options = { ...defaultAbstractOptions, ...options };\n\n        this.title = new BehaviorSubject(title);\n        this.icon = new BehaviorSubject(icon);\n        this.visible = new BehaviorSubject(visible);\n        this.disabled = new BehaviorSubject(disabled);\n        this.state = new BehaviorSubject(ActionState.Inactive);\n        this.finish = this.state.pipe(\n          filter(state => state === ActionState.Destroyed)\n        );\n\n        this.title$ = this.handleLivecycleDistinct(this.title.asObservable());\n        this.icon$ = this.handleLivecycleDistinct(this.icon.asObservable());\n        this.visible$ = this.handleLivecycleDistinct(this.visible.asObservable());\n        this.disabled$ = this.handleLivecycleDistinct(this.disabled.asObservable());\n        this.state$ = this.state.asObservable().pipe(\n          distinctUntilChanged()\n        );\n\n        this.forcedComponent = component;\n    }\n\n    /**\n     * Abstract method trigger should be implemented by **each** derived class, in\n     * combination with `fire` subject and `fire$` observable\n     */\n    abstract trigger(): this;\n\n    /**\n     * Used **internally** to handle livecycle of observables\n     * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`),\n     * and will notify **only** when value or reference **changes**\n     *\n     * @param observable `Observable` to handle live cycle\n     * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n     */\n    protected handleLivecycleDistinct(observable: Observable, shouldPause?: boolean): Observable {\n        return this.handleLivecycle(observable, shouldPause).pipe(\n          distinctUntilChanged()\n        );\n    }\n\n    /**\n     * Used internally to handle livecycle of observables\n     * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`)\n     *\n     * @param observable `Observable` to handle live cycle\n     * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n     */\n    protected handleLivecycle(observable: Observable, shouldPause: boolean = true): Observable {\n        const source = observable.pipe(\n          takeUntil(this.finish)\n        );\n\n        if (!shouldPause) {\n            return source;\n        }\n\n        return this.handleActivateState(source);\n    }\n\n    /**\n     * Used **internally** to handle pausing of observables\n     * Will deactivate observable, whenever state of the action changes to `Inactive`,\n     * and will activate observable again, when it switches back to `Active`\n     *\n     * @param observable `Observable` to handle pausing\n     */\n    protected handleActivateState(observable: Observable): Observable {\n        return this.state.pipe(\n          switchMap(state => state === ActionState.Inactive ? (NEVER) : observable)\n        );\n    }\n\n    /**\n     * Will **activate** all observables in current action,\n     * **unless action is already destroyed**\n     */\n    activate(): this {\n        if (this.isDestroyed()) {\n            return this;\n        }\n\n        this.state.next(ActionState.Active);\n        return this;\n    }\n\n    /**\n     * Will **deactivate** all observables in current action,\n     * **unless action is already destroyed**\n     */\n    deactivate(): this {\n        if (this.isDestroyed()) {\n            return this;\n        }\n\n        this.state.next(ActionState.Inactive);\n        return this;\n    }\n\n    /**\n     * Will set action state to `Destroyed`, which will\n     * complete all observables\n     */\n    destroy(): this {\n        this.state.next(ActionState.Destroyed);\n        this.state.complete();\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Active`\n     */\n    isActive(): boolean {\n        return this.state.getValue() === ActionState.Active;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Inactive`\n     */\n    isInactive(): boolean {\n        return this.state.getValue() === ActionState.Inactive;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Destroyed`\n     */\n    isDestroyed(): boolean {\n        return this.state.getValue() === ActionState.Destroyed;\n    }\n\n    /**\n     * Will set the new title and notify all title subscriptions\n     *\n     * @param title The new action title\n     */\n    setTitle(title: string): this {\n        this.title.next(title);\n        return this;\n    }\n\n    /**\n     * Returns current action title\n     */\n    getTitle(): string {\n        return this.title.getValue();\n    }\n\n    /**\n     * Will set the new icon and notify all icon subscriptions\n     *\n     * @param icon The new action icon\n     */\n    setIcon(icon: string): this {\n        this.icon.next(icon);\n        return this;\n    }\n\n    /**\n     * Returns current action icon\n     */\n    getIcon(): string {\n        return this.icon.getValue();\n    }\n\n    /**\n     * Will show the action, **if previously hidden**\n     */\n    show(): this {\n        this.visible.next(true);\n        return this;\n    }\n\n    /**\n     * Will nide the action, **if previously visible**\n     */\n    hide(): this {\n        this.visible.next(false);\n        return this;\n    }\n\n    /**\n     * Will show or hide the action depending from the provided visibility boolean\n     *\n     * @param visibility The new visibility\n     */\n    setVisibility(visibility: boolean): this {\n        this.visible.next(visibility);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is visible\n     */\n    isVisible(): boolean {\n        return this.visible.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is hidden\n     */\n    isHidden(): boolean {\n        return !this.visible.getValue();\n    }\n\n    /**\n     * Will enable action, **if prevously disabled**\n     */\n    enable(): this {\n        this.disabled.next(false);\n        return this;\n    }\n\n    /**\n     * Will disable action, **if prevously enabled**\n     */\n    disable(): this {\n        this.disabled.next(true);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is disabled\n     */\n    isDisabled(): boolean {\n        return this.disabled.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is enabled\n     */\n    isEnabled(): boolean {\n        return !this.disabled.getValue();\n    }\n\n    /**\n     * Returns a `Component`, that is provided as forced component via action `constructor`\n     * This component should be used by `ActionOutletDirective`, to represent\n     * the action in DOM, instead the component, provided via Angular `Injector`\n     */\n    getForcedComponent(): Type | undefined {\n        return this.forcedComponent;\n    }\n\n    /**\n     * Returns current parent of the action\n     */\n    getParent(): ActionGroup | undefined {\n        return this.parent;\n    }\n\n    /**\n     * @internal\n     *\n     * **Internal** method to set parent of current action. It will:\n     * - **Set** parent, but only if currently not defined\n     * - **Disable** current action if parent is disabled\n     * - **Activate** current action if parent is active\n     */\n    _setParent(parent: ActionGroup): this {\n        if (this.parent === undefined) {\n            this.parent = parent;\n            if (this.parent.isDisabled()) {\n                this.disable();\n            }\n            if (this.parent.isActive()) {\n                this.activate();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @internal\n     *\n     * **Internal** method to unset parent of current action. It will:\n     * - **Set** parent to undefined\n     * - **Enable** current action\n     * - **Deactivate** current action\n     */\n    _unsetParent(): this {\n        this.parent = undefined;\n        this.enable();\n        this.deactivate();\n        return this;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\n```typescript\n\nconst button = new ActionButton({ title: 'Test' });\n\n\nOr\n```typescript\n\nconst button = actionFactory.createButton({ title: 'Test' });\n\n\nOr\n```typescript\n\nconst button = actionFactory.createButton().setTitle('Test');\n```\n\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:49\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:44\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:39\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions whenever button is triggered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:111\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:165\n\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:94\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:105\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:85\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:81\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:90\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-button/action-button.ts:87\n                \n            \n\n\n            \n                \n                    Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\ntypescript\n     * button.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:257\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:270\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:283\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:395\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:419\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:340\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:426\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:323\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:292\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:306\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:403\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:410\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:380\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:299\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:373\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:332\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:315\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:365\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:205\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = { };\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n * ```typescript\n * const button = new ActionButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton().setTitle('Test');\n * ```\n */\nexport class ActionButton extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions whenever button is triggered\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `Subject`, used to notify subscribers on action trigger\n     */\n    protected fire: Subject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionButton`\n     *\n     * @param options Options for `ActionButton`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionButtonOptions = defaultButtonOptions,\n                component?: Type) {\n        super({ ...defaultButtonOptions, ...options }, component);\n\n        this.fire = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * button.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n```typescript\n\nthis.group = new ActionGroup({\nchildren: [\nnew ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n})\n]\n});\n\n\nTemplate\n```html\n\n\n```\n\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:106\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:95\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentType(action: AnyAction, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.directive.ts:143\n                \n            \n\n\n            \n                \n                    Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                AnyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action to get Component for\n\n                                    \n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Injector from current directive instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:87\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :         AnyAction | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction | undefined) {\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action) {\n            this.action.destroy();\n        }\n\n        this.action = action;\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance.action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction | undefined {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef?: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action?: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(\n        private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector\n    ) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\n```typescript\n\nconst buttonAction = new ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n});\n\n\nCan do\n```typescript\n\nconst buttonAction = this.actionOutletFactory.createButton()\n.setTitle('Action Title')\n.setIcon('icon')\n.fire$.subscribe(callbackMethod);\n```\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionButton with default options and component\nExample:\ntypescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionGroup with default options and component\nExample:\ntypescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionToggle with default options and component\nExample:\ntypescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n  declarations: [ActionOutletDirective],\n  imports: [CommonModule],\n  exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionToggle.html":{"url":"classes/ActionToggle.html","title":"class - ActionToggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionToggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle used to create action with toggle functionality,\ne.g. checkbox, toggle slider\nExample\n```typescript\n\nconst toggle = new ActionToggle({ checked: true });\n\n\nOr\n```typescript\n\nconst toggle = actionFactory.createToggle({ checked: true });\n\n\nOr\n```typescript\n\nconst toggle = actionFactory.createToggle().check();\n```\n\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                isChecked\n                            \n                            \n                                isUnchecked\n                            \n                            \n                                trigger\n                            \n                            \n                                uncheck\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionToggleOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-toggle/action-toggle.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionToggle\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionToggleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:47\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled, checked\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:42\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions on the change of checked state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:111\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:165\n\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:94\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:105\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:85\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:81\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:90\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:110\n                \n            \n\n\n            \n                \n                    Will set checked status to true\nIt will not produce second notification if already checked\nExample:\ntypescript\n     * toggle.check();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:141\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is checked\nExample:\ntypescript\n     * const isChecked = toggle.isChecked();\n     *\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUnchecked\n                        \n                        \n                    \n                \n            \n            \n                \nisUnchecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:155\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is unchecked\nExample:\nconst isUnchecked = toggle.isUnchecked();\ntypescript\n     *\n\n\n                    \n                        Example :\n                        \n                            isUnchecked\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:94\n                \n            \n\n\n            \n                \n                    Will toggle current checked state when invoked\nShould be called in view component on click\nExample:\ntypescript\n     * toggle.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uncheck\n                        \n                        \n                    \n                \n            \n            \n                \nuncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:126\n                \n            \n\n\n            \n                \n                    Will set checked status to false\nIt will not produce second notification if already unchecked\nExample:\ntypescript\n     * toggle.uncheck();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:257\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:270\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:283\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:395\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:419\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:340\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:426\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:323\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:292\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:306\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:403\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:410\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:380\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:299\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:373\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:332\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:315\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:365\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:205\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionToggleComponentImpl, ActionToggleEvent, ActionToggleOptions } from './action-toggle.model';\n\n/**\n * Default options for `ActionToggle`\n * Extended by provided options in action `constructor`\n */\nconst defaultToggleOptions: ActionToggleOptions = {\n    checked: false,\n};\n\n/**\n * `ActionToggle` used to create action with toggle functionality,\n * *e.g. checkbox, toggle slider*\n *\n * ## Example\n *\n * ```typescript\n * const toggle = new ActionToggle({ checked: true });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const toggle = actionFactory.createToggle({ checked: true });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const toggle = actionFactory.createToggle().check();\n * ```\n */\nexport class ActionToggle extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions on the change of `checked` state\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled, checked*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `BehaviorSubject`, holding the current checked state\n     */\n    protected fire: BehaviorSubject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionToggle`\n     *\n     * @param options Options for `ActionToggle`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionToggleOptions = defaultToggleOptions,\n                component?: Type) {\n        super({ ...defaultToggleOptions, ...options }, component);\n\n        this.fire = new BehaviorSubject(!!this.options.checked);\n\n        this.fire$ = this.handleLivecycleDistinct(this.fire.asObservable(), false).pipe(\n          map(checked => ({ action: this, checked }))\n        );\n\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled }))),\n            this.fire.pipe(map(checked => ({ checked })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will toggle current checked state when invoked\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next(!this.fire.getValue());\n        return this;\n    }\n\n    /**\n     * Will set checked status to `true`\n     * It will **not** produce second notification if already checked\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.check();\n     * ```\n     *\n     * @method check\n     */\n    check(): this {\n        this.fire.next(true);\n        return this;\n    }\n\n    /**\n     * Will set checked status to `false`\n     * It will **not** produce second notification if already unchecked\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.uncheck();\n     * ```\n     *\n     * @method uncheck\n     */\n    uncheck(): this {\n        this.fire.next(false);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is checked\n     *\n     * #### Example:\n     * ```typescript\n     * const isChecked = toggle.isChecked();\n     * ```\n     *\n     * @method isChecked\n     */\n    isChecked(): boolean {\n        return this.fire.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is unchecked\n     *\n     * #### Example:\n     * const isUnchecked = toggle.isUnchecked();\n     * ```typescript\n     * ```\n     *\n     * @example isUnchecked\n     */\n    isUnchecked(): boolean {\n        return !this.fire.getValue();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.4\n        \n            @angular/cdk : ^8.1.4\n        \n            @angular/common : ^8.2.4\n        \n            @angular/compiler : ^8.2.4\n        \n            @angular/core : ^8.2.4\n        \n            @angular/forms : ^8.2.4\n        \n            @angular/material : ^8.1.4\n        \n            @angular/platform-browser : ^8.2.4\n        \n            @angular/platform-browser-dynamic : ^8.2.4\n        \n            @angular/router : ^8.2.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.4.0\n        \n            travis-deploy-once : ^5.0.11\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. hide/show actions based on permissions).\nDEMO\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                            ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Required\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
