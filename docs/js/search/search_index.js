var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionAbstractComponentImpl.html",[0,0.023,1,0.511]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.043,1,0.649,2,0.465,3,0.465,4,0.397,5,0.218,6,0.397,7,1.511,8,0.538,9,0.865,10,3,11,0.477,12,0.788,13,0.753,14,0.632,15,2.556,16,2.443,17,0.274,18,1.391,19,3.319,20,0.049,21,0.748,22,2.43,23,1.842,24,1.876,25,2.814,26,0.748,27,1.842,28,2.443,29,2.443,30,0.397,31,1.116,32,1.024,33,1.132,34,0.536,35,0.882,36,0.704,37,0.465,38,1.576,39,1.43,40,1.464,41,2.443,42,1.43,43,2.109,44,1.264,45,1.842,46,1.286,47,1.511,48,1.161,49,0.799,50,0.704,51,1.024,52,0.799,53,0.538,54,1.75,55,1.75,56,1.75,57,1.75,58,0.799,59,0.031,60,0.031]],["title/interfaces/ActionAbstractEvent.html",[0,0.023,53,0.591]],["body/interfaces/ActionAbstractEvent.html",[0,0.043,1,0.477,2,0.477,3,0.477,4,0.407,5,0.224,6,0.407,7,1.551,8,0.553,9,0.765,10,2.889,11,0.476,12,0.699,13,0.647,14,0.544,16,1.797,17,0.281,18,1.304,19,2.488,20,0.049,21,0.758,22,2.148,23,1.355,24,1.671,25,2.488,26,0.661,27,1.355,28,1.797,29,1.797,30,0.407,31,1.407,32,1.052,33,1.24,34,0.544,35,0.889,36,0.723,37,0.477,38,1.594,39,1.457,40,1.478,41,2.488,42,1.457,43,2.148,44,1.287,45,1.876,46,1.529,47,2.148,48,1.65,49,1.137,50,1.001,51,1.457,52,1.137,53,0.765,54,2.488,55,2.488,56,2.488,57,2.488,58,1.137,59,0.031,60,0.031,61,2.625,62,2.625]],["title/interfaces/ActionAbstractOptions.html",[0,0.023,37,0.511]],["body/interfaces/ActionAbstractOptions.html",[0,0.041,1,0.449,2,0.449,3,0.449,4,0.383,5,0.21,6,0.383,7,1.458,8,0.519,9,0.849,10,2.833,11,0.473,12,0.68,13,0.626,14,0.625,16,1.689,17,0.264,18,1.261,19,2.383,20,0.049,21,0.633,22,2.057,23,1.274,24,1.974,25,2.383,26,0.633,27,1.274,28,1.689,29,1.689,30,0.383,31,1.088,32,0.989,33,1.207,34,0.526,35,1.004,36,0.959,37,0.633,38,1.782,39,1.921,40,1.445,41,3.281,42,1.921,43,2.833,44,1.551,45,2.475,46,1.261,47,1.458,48,1.12,49,0.772,50,0.68,51,0.989,52,0.772,53,0.519,54,1.689,55,1.689,56,1.689,57,1.689,58,0.772,59,0.03,60,0.03]],["title/interfaces/ActionButtonEvent.html",[0,0.023,63,1.659]],["body/interfaces/ActionButtonEvent.html",[0,0.041,1,0.727,2,0.55,3,0.55,4,0.469,5,0.258,6,0.469,8,0.636,9,0.636,11,0.434,12,0.469,13,0.469,14,0.622,17,0.324,18,1.402,20,0.049,21,0.727,26,0.55,30,0.621,33,1.314,34,0.622,35,0.815,37,0.727,40,1.251,46,1.551,50,1.314,51,1.212,52,1.402,53,0.944,58,1.251,59,0.034,60,0.034,63,2.649,64,1.212,65,1.787,66,1.7,67,1.816,68,1.816,69,1.816,70,1.071,71,1.561,72,1.561,73,1.561,74,1.561,75,1.796,76,2.738,77,1.561,78,1.373,79,1.212,80,1.787,81,1.787]],["title/interfaces/ActionButtonOptions.html",[0,0.023,79,1.125]],["body/interfaces/ActionButtonOptions.html",[0,0.039,1,0.72,2,0.541,3,0.541,4,0.462,5,0.253,6,0.462,8,0.626,9,0.833,11,0.379,12,0.462,13,0.462,14,0.618,17,0.319,18,1.482,20,0.049,21,0.541,26,0.541,30,0.614,33,1.359,34,0.618,35,0.956,37,0.809,40,1.237,46,1.39,50,1.305,51,1.586,52,1.39,53,0.833,58,1.482,59,0.034,60,0.034,63,2.338,64,1.192,65,1.758,66,1.645,67,1.35,68,1.35,69,1.35,70,1.053,71,1.535,72,1.535,73,1.535,74,1.535,75,2.075,76,3.244,77,1.535,78,1.796,79,1.586,80,2.338,81,2.338]],["title/interfaces/ActionGroupEvent.html",[0,0.023,82,1.659]],["body/interfaces/ActionGroupEvent.html",[0,0.041,1,0.726,2,0.549,3,0.549,4,0.468,5,0.257,6,0.468,8,0.635,9,0.635,11,0.45,12,0.468,13,0.468,14,0.584,17,0.323,18,1.4,20,0.049,21,0.726,24,1.6,26,0.549,30,0.695,31,0.943,32,1.209,33,1.313,34,0.584,35,0.814,37,0.726,38,1.068,40,1.4,46,1.49,50,1.1,52,1.249,53,0.943,58,1.249,59,0.034,60,0.034,67,1.813,68,1.813,69,1.813,70,1.068,78,1.37,82,2.36,83,1.209,84,1.783,85,1.686,86,1.813,87,1.557,88,1.209,89,2.065,90,2.065,91,2.36,92,2.443,93,1.209,94,2.065,95,1.557,96,2.36]],["title/interfaces/ActionGroupOptions.html",[0,0.023,88,1.125]],["body/interfaces/ActionGroupOptions.html",[0,0.038,1,0.705,2,0.525,3,0.525,4,0.448,5,0.246,6,0.448,8,0.608,9,0.816,11,0.429,12,0.448,13,0.448,14,0.611,17,0.309,18,1.464,20,0.049,21,0.525,24,1.958,26,0.525,30,0.68,31,0.903,32,1.157,33,1.346,34,0.571,35,0.95,37,0.796,38,1.373,40,1.37,46,1.213,50,0.795,52,0.903,53,0.816,58,1.464,59,0.033,60,0.033,67,1.311,68,1.311,69,1.311,70,1.022,78,1.761,82,1.706,83,1.157,84,1.706,85,1.607,86,1.989,87,1.49,88,1.554,89,2.655,90,2.655,91,2.973,92,3.547,93,1.554,94,2.655,95,2.002,96,2.973]],["title/interfaces/ActionOutlet.html",[0,0.023,97,1.275]],["body/interfaces/ActionOutlet.html",[0,0.033,2,0.373,3,0.373,4,0.318,5,0.342,6,0.473,8,0.846,9,0.641,11,0.416,12,0.85,13,0.743,14,0.689,17,0.22,20,0.049,21,0.818,30,0.759,31,0.952,34,0.397,35,0.986,36,0.838,37,0.373,53,0.432,59,0.026,60,0.026,64,1.22,66,1.528,70,0.726,71,1.058,72,1.058,79,1.61,83,1.22,85,1.578,86,0.931,87,1.058,88,1.61,93,1.61,95,2.322,97,1.824,98,1.403,99,2.465,100,2.465,101,1.22,102,2.084,103,2.465,104,2.465,105,2.465,106,2.465,107,2.05,108,2.888,109,1.802,110,2.441,111,2.485,112,2.485,113,3.642,114,3.496,115,2.465,116,2.05,117,2.465,118,1.61,119,2.05,120,1.528,121,1.058,122,1.382,123,1.66,124,1.66,125,1.058,126,1.22,127,1.66,128,1.058,129,1.66,130,1.403,131,3.079]],["title/directives/ActionOutletDirective.html",[132,1.449,133,1.449]],["body/directives/ActionOutletDirective.html",[1,0.238,2,0.238,3,0.238,4,0.203,5,0.335,6,0.332,8,0.572,9,0.275,10,1.265,11,0.47,12,0.811,13,0.332,14,0.584,17,0.14,20,0.049,21,0.677,22,2.645,23,1.404,26,0.859,30,0.488,31,1.283,32,0.524,34,0.17,35,0.494,36,0.749,39,1.26,42,1.26,44,0.463,47,1.265,48,0.594,49,1.328,59,0.018,60,0.018,66,1.229,70,0.463,71,1.105,75,0.858,77,1.105,85,1.229,86,0.972,90,2.152,91,1.265,93,1.644,94,1.466,97,1.863,99,1.734,100,2.808,102,1.466,108,2.425,109,1.39,110,0.594,111,1.861,112,1.861,120,0.67,121,0.675,122,0.972,128,1.105,131,2.152,132,2.118,133,1.105,134,1.059,135,2.141,136,3.875,137,2.141,138,3.468,139,2.141,140,3.468,141,2.141,142,2.141,143,2.719,144,3.016,145,2.141,146,1.466,147,2.202,148,1.734,149,1.734,150,1.734,151,2.719,152,1.307,153,2.141,154,2.141,155,2.719,156,2.141,157,2.808,158,1.307,159,3.932,160,4.103,161,4.942,162,1.307,163,2.141,164,1.105,165,1.105,166,2.141,167,4.103,168,2.141,169,2.141,170,2.141,171,2.719,172,2.719,173,3.143,174,2.202,175,2.545,176,2.719,177,2.719,178,2.202,179,2.719,180,2.141,181,2.141,182,2.202,183,2.141,184,2.202,185,2.141,186,2.141,187,2.141,188,1.466,189,1.307,190,2.141,191,1.307,192,3.468,193,3.143,194,2.141,195,2.141,196,2.141,197,2.141,198,1.307,199,1.307,200,2.141,201,2.719,202,1.307,203,2.719,204,1.307,205,1.307,206,3.724,207,3.143,208,2.141,209,3.143,210,1.307,211,1.307,212,1.307,213,1.734,214,1.307,215,1.307,216,1.307,217,1.307,218,1.307,219,1.307,220,1.307,221,1.059,222,3.143,223,1.307,224,1.307,225,1.059,226,2.141,227,1.307,228,1.307,229,1.307,230,1.307,231,1.307,232,1.307,233,1.307]],["title/injectables/ActionOutletFactory.html",[101,1.125,165,1.449]],["body/injectables/ActionOutletFactory.html",[2,0.292,3,0.292,4,0.25,5,0.302,8,0.745,11,0.405,12,0.834,13,0.25,14,0.639,17,0.172,20,0.05,21,0.743,26,0.46,27,1.305,30,0.687,32,0.644,34,0.21,35,0.953,36,0.443,39,1.774,42,1.419,49,0.79,59,0.022,60,0.022,64,1.013,66,1.486,71,1.612,72,0.83,75,1.013,79,1.419,83,1.013,85,1.424,86,1.418,87,0.83,88,1.419,93,1.252,95,2.286,96,1.494,97,1.148,101,1.419,102,2.635,103,2.529,104,2.529,105,2.529,106,2.047,108,2.855,109,1.904,110,2.335,111,2.138,112,2.138,113,3.309,114,3.307,115,2.047,117,2.047,118,1.419,120,1.424,121,0.83,123,1.302,124,1.302,125,0.83,126,1.013,127,1.302,128,1.612,130,1.73,131,2.797,144,2.047,146,3.031,147,3.117,149,2.047,165,1.612,188,2.424,213,3.775,234,1.302,235,2.528,236,2.047,237,2.528,238,2.528,239,2.528,240,2.528,241,2.528,242,3.541,243,2.528,244,2.528,245,2.528,246,2.528,247,1.608,248,2.528,249,2.528,250,1.608,251,2.047,252,1.608,253,2.528,254,1.305,255,1.608,256,1.608,257,1.608]],["title/modules/ActionOutletModule.html",[258,1.275,259,1.449]],["body/modules/ActionOutletModule.html",[2,0.624,3,0.624,4,0.533,5,0.292,11,0.37,20,0.048,30,0.801,34,0.653,36,0.945,49,1.489,59,0.037,60,0.037,101,2.113,121,1.771,133,2.877,164,1.771,258,1.971,259,2.823,260,2.778,261,3.856,262,2.778,263,2.778,264,2.778,265,2.778,266,2.778,267,3.515,268,2.778,269,2.778,270,3.431,271,4.341,272,2.778,273,3.515,274,3.431,275,3.431]],["title/interfaces/ActionToggleEvent.html",[0,0.023,276,1.659]],["body/interfaces/ActionToggleEvent.html",[0,0.04,1,0.694,2,0.512,3,0.512,4,0.437,5,0.24,6,0.437,8,0.593,9,0.593,11,0.443,12,0.437,13,0.437,14,0.632,17,0.302,18,1.353,20,0.049,21,0.694,24,1.858,26,0.512,30,0.592,33,1.277,34,0.605,35,0.843,37,0.694,38,0.997,40,1.45,44,1.532,46,1.515,50,1.277,51,1.129,52,1.353,53,0.911,58,1.193,59,0.033,60,0.033,67,1.732,68,1.732,69,1.732,70,0.997,73,1.454,74,1.454,75,1.733,77,1.454,78,1.279,80,1.664,81,1.664,109,1.529,118,1.129,120,1.68,125,1.454,126,1.129,128,1.454,254,2.682,276,2.556,277,1.664,278,2.611]],["title/interfaces/ActionToggleOptions.html",[0,0.023,118,1.125]],["body/interfaces/ActionToggleOptions.html",[0,0.038,1,0.684,2,0.502,3,0.502,4,0.429,5,0.235,6,0.429,8,0.581,9,0.792,11,0.392,12,0.429,13,0.429,14,0.627,17,0.296,18,1.438,20,0.049,21,0.502,24,1.843,26,0.502,30,0.584,33,1.325,34,0.6,35,0.981,37,0.779,38,1.333,40,1.438,44,1.516,46,1.339,50,1.266,51,1.508,52,1.339,53,0.792,58,1.438,59,0.032,60,0.032,67,1.254,68,1.254,69,1.254,70,0.978,73,1.426,74,1.426,75,2.036,77,1.426,78,1.709,80,2.224,81,2.224,109,1.107,118,1.508,120,1.617,125,1.426,126,1.107,128,1.426,254,2.67,276,2.224,277,1.632,278,3.148]],["title/coverage.html",[279,3.083]],["body/coverage.html",[0,0.043,1,0.503,4,0.43,5,0.478,6,0.748,7,2.533,14,0.361,20,0.048,36,1.268,37,0.503,53,0.583,59,0.032,60,0.032,63,1.635,64,1.844,65,2.227,66,0.865,79,1.109,82,1.635,83,1.93,84,2.227,85,0.865,88,1.109,97,1.256,98,1.894,101,1.109,109,1.109,118,1.109,120,0.865,122,1.256,126,1.844,132,1.429,133,1.429,134,2.241,165,1.429,234,2.241,276,1.635,277,2.227,279,2.241,280,2.768,281,2.768,282,2.768,283,5.605,284,4.602,285,4.602,286,3.769,287,2.58,288,2.768,289,3.296,290,2.241,291,4.815,292,3.052,293,2.768,294,2.241,295,3.471,296,2.768,297,2.241,298,2.241,299,3.769,300,3.052,301,2.768,302,2.241,303,2.768,304,2.768]],["title/dependencies.html",[164,1.74,305,2.357]],["body/dependencies.html",[20,0.049,59,0.04,60,0.04,121,2.009,164,2.009,272,3.152,306,3.892,307,5.587,308,3.892,309,3.892,310,3.892,311,4.693,312,3.8,313,3.152,314,3.892,315,3.892,316,3.892,317,3.892,318,3.892,319,3.892,320,3.892,321,3.892]],["title/miscellaneous/enumerations.html",[322,1.07,323,2.729]],["body/miscellaneous/enumerations.html",[5,0.357,6,0.65,11,0.357,17,0.448,20,0.042,44,1.482,59,0.042,60,0.042,182,3.968,287,3.354,322,1.901,323,3.39,324,4.9,325,2.866,326,4.9,327,4.9]],["title/index.html",[17,0.253,328,1.909,329,1.909]],["body/index.html",[11,0.468,12,0.764,13,0.352,20,0.049,21,0.412,23,1.169,26,0.813,27,1.691,30,0.809,34,0.55,36,1.381,38,0.802,39,1.312,42,0.908,44,0.802,45,1.169,48,1.029,49,1.567,59,0.028,60,0.028,66,1.203,85,1.318,86,1.029,93,0.908,95,2.175,97,1.746,101,1.312,110,1.487,114,2.242,120,1.398,122,1.029,132,1.169,136,2.652,146,2.885,148,1.835,150,1.835,174,1.835,175,2.652,178,3.413,221,1.835,225,1.835,251,1.835,254,1.169,258,1.029,259,2.308,273,3.115,313,1.835,328,1.835,329,1.835,330,2.266,331,2.266,332,2.266,333,2.266,334,2.266,335,2.266,336,2.266,337,2.266,338,3.275,339,2.266,340,2.266,341,2.266,342,4.66,343,1.835,344,3.275,345,4.805,346,3.847,347,3.847,348,3.847,349,2.266,350,2.266,351,2.266,352,2.266,353,2.266,354,2.266,355,4.66,356,2.266,357,2.266,358,3.275,359,2.266,360,2.266,361,2.266,362,2.266,363,3.275,364,2.266,365,3.275,366,2.266,367,3.275,368,2.266,369,4.214,370,1.835,371,2.266,372,2.266,373,2.266,374,2.266,375,2.266,376,3.275,377,2.266,378,3.275,379,2.266,380,2.266,381,2.266,382,2.266,383,2.266,384,2.266,385,2.266,386,2.266,387,2.266,388,2.266]],["title/modules.html",[258,1.728]],["body/modules.html",[20,0.043,59,0.043,60,0.043,258,1.979,259,2.25,312,3.529,389,4.358,390,4.358,391,4.358]],["title/overview.html",[392,3.083]],["body/overview.html",[0,0.031,20,0.046,34,0.5,36,1.056,49,1.199,59,0.04,60,0.04,101,2.006,132,1.979,133,2.831,164,1.979,165,1.979,258,2.111,259,2.831,260,3.104,261,3.104,262,3.104,263,3.104,264,3.104,265,3.104,266,3.104,267,3.766,268,3.104,269,3.104,343,4.053,370,3.104,392,3.104,393,3.834]],["title/miscellaneous/typealiases.html",[322,1.07,394,3.37]],["body/miscellaneous/typealiases.html",[1,0.866,5,0.426,9,0.722,11,0.292,12,0.739,13,0.739,14,0.688,17,0.368,20,0.037,26,0.866,31,1.565,50,1.196,59,0.037,60,0.037,64,1.375,65,2.814,66,1.357,72,2.458,73,2.241,74,2.241,75,1.739,76,3.26,83,1.375,84,2.565,85,1.073,87,2.458,93,1.375,98,2.971,110,1.558,120,1.357,122,1.558,125,2.458,126,1.375,129,2.778,130,2.348,236,3.515,277,2.814,278,3.26,322,1.558,325,3.61,395,3.431]],["title/miscellaneous/variables.html",[289,2.307,322,1.07]],["body/miscellaneous/variables.html",[5,0.405,6,0.465,11,0.433,14,0.62,17,0.321,20,0.049,31,0.937,33,1.309,35,0.958,37,0.723,39,1.2,42,1.2,43,1.77,45,1.546,48,2.246,49,1.486,59,0.034,60,0.034,64,1.2,66,0.937,79,1.593,83,1.2,85,0.937,88,1.593,89,2.05,91,2.349,96,1.77,108,1.77,109,1.2,110,2.421,118,1.593,120,0.937,122,1.36,126,1.2,157,3.849,184,3.613,188,2.05,254,1.546,287,2.721,289,2.05,290,3.613,292,3.219,294,3.613,295,3.613,297,3.613,298,3.849,300,3.219,302,3.613,322,1.36,325,3.386,396,2.995,397,2.995,398,2.995,399,2.995]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":343,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":393,"title":{},"body":{"overview.html":{}}}],["100",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":357,"title":{},"body":{"index.html":{}}}],["2.5.4",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":359,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":370,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":379,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["58/58",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":385,"title":{},"body":{"index.html":{}}}],["6.1.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":70,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.t",{"_index":7,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.t",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract/act",{"_index":6,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractact",{"_index":143,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["access",{"_index":380,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":156,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingli",{"_index":177,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":11,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.e.g",{"_index":341,"title":{},"body":{"index.html":{}}}],["action.getforcedcompon",{"_index":232,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":122,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstractcomponentimpl",{"_index":1,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractev",{"_index":53,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractopt",{"_index":37,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionbutton",{"_index":66,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(opt",{"_index":255,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":76,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":72,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonev",{"_index":63,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonopt",{"_index":79,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actiongroup",{"_index":85,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(opt",{"_index":256,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":87,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupev",{"_index":82,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupopt",{"_index":88,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":97,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(act",{"_index":205,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":155,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirect",{"_index":133,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactori",{"_index":101,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["actionoutletmodul",{"_index":259,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actionst",{"_index":324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiontoggl",{"_index":120,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(opt",{"_index":257,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":278,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":125,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleev",{"_index":276,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleopt",{"_index":118,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activ",{"_index":326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actual",{"_index":374,"title":{},"body":{"index.html":{}}}],["add",{"_index":356,"title":{},"body":{"index.html":{}}}],["alias",{"_index":395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alway",{"_index":142,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["angular",{"_index":23,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["angular/anim",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":272,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":121,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["anyact",{"_index":31,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":333,"title":{},"body":{"index.html":{}}}],["approach",{"_index":240,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropri",{"_index":353,"title":{},"body":{"index.html":{}}}],["array",{"_index":89,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":193,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associ",{"_index":362,"title":{},"body":{"index.html":{}}}],["attach",{"_index":139,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["automat",{"_index":183,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["avail",{"_index":387,"title":{},"body":{"index.html":{}}}],["between",{"_index":397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bind",{"_index":386,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":24,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":262,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["brows",{"_index":391,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":312,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":334,"title":{},"body":{"index.html":{}}}],["button",{"_index":71,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.compon",{"_index":364,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":123,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.t",{"_index":65,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.t",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["button/act",{"_index":64,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonact",{"_index":242,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["callback",{"_index":75,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":149,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["chang",{"_index":178,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["change/upd",{"_index":176,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["check",{"_index":254,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox.compon",{"_index":377,"title":{},"body":{"index.html":{}}}],["child",{"_index":47,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":91,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":36,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":239,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":228,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["cluster_actionoutletmodul",{"_index":263,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declar",{"_index":264,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_export",{"_index":265,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_provid",{"_index":266,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":238,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["com",{"_index":55,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["come",{"_index":69,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":349,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":271,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compil",{"_index":138,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compon",{"_index":12,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["component'",{"_index":172,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactori",{"_index":216,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolv",{"_index":160,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":203,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["const",{"_index":213,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["constructor",{"_index":157,"title":{},"body":{"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor(priv",{"_index":225,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["constructor(viewcontainerref",{"_index":158,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["contain",{"_index":90,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["core",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":279,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":95,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["createbutton",{"_index":103,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(opt",{"_index":106,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcompon",{"_index":168,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["creategroup",{"_index":104,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(opt",{"_index":115,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggl",{"_index":105,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(opt",{"_index":117,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":166,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["current",{"_index":197,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["custom",{"_index":388,"title":{},"body":{"index.html":{}}}],["declar",{"_index":261,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":110,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default'",{"_index":371,"title":{},"body":{"index.html":{}}}],["defaultabstractopt",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonopt",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupopt",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleopt",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":93,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["depend",{"_index":164,"title":{"dependencies.html":{}},"body":{"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deriv",{"_index":10,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["descend",{"_index":145,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["descript",{"_index":8,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":182,"title":{},"body":{"directives/ActionOutletDirective.html":{},"miscellaneous/enumerations.html":{}}}],["destruct",{"_index":185,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detect",{"_index":179,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinam",{"_index":140,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["direct",{"_index":132,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directli",{"_index":192,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disabl",{"_index":45,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":137,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dropdown",{"_index":96,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynam",{"_index":313,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":100,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["each",{"_index":338,"title":{},"body":{"index.html":{}}}],["easi",{"_index":332,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":323,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illeg",{"_index":212,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":174,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["event",{"_index":46,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["exampl",{"_index":146,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["examplebuttoncompon",{"_index":363,"title":{},"body":{"index.html":{}}}],["examplecheckboxcompon",{"_index":376,"title":{},"body":{"index.html":{}}}],["examplecompon",{"_index":378,"title":{},"body":{"index.html":{}}}],["examplegroupcompon",{"_index":365,"title":{},"body":{"index.html":{}}}],["examplemodul",{"_index":358,"title":{},"body":{"index.html":{}}}],["exampletogglecompon",{"_index":367,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"overview.html":{}}}],["expos",{"_index":224,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["extend",{"_index":33,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["extendal",{"_index":15,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{}}}],["factori",{"_index":99,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["fals",{"_index":184,"title":{},"body":{"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":195,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["fire",{"_index":50,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":246,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["first",{"_index":81,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fli",{"_index":141,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["forc",{"_index":194,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["fromshould",{"_index":62,"title":{},"body":{"interfaces/ActionAbstractEvent.html":{}}}],["fromus",{"_index":61,"title":{},"body":{"interfaces/ActionAbstractEvent.html":{}}}],["function",{"_index":236,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["get",{"_index":328,"title":{"index.html":{}},"body":{"index.html":{}}}],["getactionoutlet",{"_index":198,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttyp",{"_index":154,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(act",{"_index":190,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getter",{"_index":200,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["goal",{"_index":331,"title":{},"body":{"index.html":{}}}],["group",{"_index":86,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.compon",{"_index":366,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":124,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.t",{"_index":84,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.t",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/act",{"_index":83,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["handl",{"_index":186,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["happen",{"_index":339,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":19,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["hide",{"_index":29,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["hook",{"_index":227,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["hostbind",{"_index":25,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["html",{"_index":204,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["icon",{"_index":42,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":13,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["inact",{"_index":327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initi",{"_index":38,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["inject",{"_index":165,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":161,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector.get(action.constructor",{"_index":233,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":22,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["instal",{"_index":344,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":21,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["instanceof",{"_index":210,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instead",{"_index":241,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":201,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["invok",{"_index":163,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["it'",{"_index":78,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["js",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":237,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["legend",{"_index":260,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["line",{"_index":350,"title":{},"body":{"index.html":{}}}],["manual",{"_index":187,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["match",{"_index":60,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":152,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":102,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["miscellan",{"_index":322,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":258,"title":{"modules/ActionOutletModule.html":{},"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["module,but",{"_index":373,"title":{},"body":{"index.html":{}}}],["more",{"_index":57,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":112,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["never",{"_index":223,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["new",{"_index":109,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":74,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":345,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":330,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":273,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":226,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":382,"title":{},"body":{"index.html":{}}}],["notifi",{"_index":337,"title":{},"body":{"index.html":{}}}],["npm",{"_index":347,"title":{},"body":{"index.html":{}}}],["observ",{"_index":51,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["on",{"_index":144,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["ondestroy",{"_index":151,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["oninit",{"_index":381,"title":{},"body":{"index.html":{}}}],["option",{"_index":35,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":27,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oserv",{"_index":67,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["out",{"_index":269,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["outlet",{"_index":346,"title":{},"body":{"index.html":{}}}],["outlet.direct",{"_index":274,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.t",{"_index":134,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:102",{"_index":162,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:137",{"_index":191,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":180,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:83",{"_index":199,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:91",{"_index":189,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":32,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.t",{"_index":98,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":107,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":116,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":119,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.t",{"_index":270,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.servic",{"_index":275,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.t",{"_index":234,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:49",{"_index":247,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:65",{"_index":250,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:81",{"_index":252,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/cor",{"_index":355,"title":{},"body":{"index.html":{}}}],["overrid",{"_index":114,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":56,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":392,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":305,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":131,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["paramet",{"_index":111,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["particular",{"_index":340,"title":{},"body":{"index.html":{}}}],["point",{"_index":361,"title":{},"body":{"index.html":{}}}],["possibl",{"_index":336,"title":{},"body":{"index.html":{}}}],["privat",{"_index":222,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["project",{"_index":354,"title":{},"body":{"index.html":{}}}],["projects/.../act",{"_index":325,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/act",{"_index":5,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":196,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properti",{"_index":18,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["provid",{"_index":49,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":40,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":92,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receiv",{"_index":68,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":221,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["regist",{"_index":80,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":136,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendering.provid",{"_index":360,"title":{},"body":{"index.html":{}}}],["reset",{"_index":268,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolv",{"_index":169,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactori",{"_index":170,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["result",{"_index":59,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":108,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["runtimeand",{"_index":335,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":372,"title":{},"body":{"index.html":{}}}],["selector",{"_index":153,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["servic",{"_index":235,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":175,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["set(children",{"_index":399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(act",{"_index":202,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["seticon('icon",{"_index":245,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["setter",{"_index":171,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settitle('act",{"_index":244,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('exampl",{"_index":384,"title":{},"body":{"index.html":{}}}],["share",{"_index":396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shere",{"_index":16,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shor",{"_index":28,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":129,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specif",{"_index":58,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["start",{"_index":329,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":44,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["statement",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":342,"title":{},"body":{"index.html":{}}}],["string",{"_index":41,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["structur",{"_index":135,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subscrib",{"_index":52,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscript",{"_index":73,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["support",{"_index":389,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":390,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":150,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":249,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":54,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.act",{"_index":206,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activ",{"_index":220,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":231,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getpar",{"_index":230,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":248,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":251,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggl",{"_index":253,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":229,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":243,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":217,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":207,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance.act",{"_index":219,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.getcomponenttype(this.act",{"_index":214,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":148,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggl",{"_index":383,"title":{},"body":{"index.html":{}}}],["this.injector",{"_index":215,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.clear",{"_index":208,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactori",{"_index":218,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["throw",{"_index":211,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["titl",{"_index":39,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggl",{"_index":128,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.compon",{"_index":368,"title":{},"body":{"index.html":{}}}],["toggle.model",{"_index":127,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["toggle.model.t",{"_index":277,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.t",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle/act",{"_index":126,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":352,"title":{},"body":{"index.html":{}}}],["tool.choos",{"_index":351,"title":{},"body":{"index.html":{}}}],["true",{"_index":188,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":394,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":147,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["undefin",{"_index":209,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["underli",{"_index":181,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["uniqu",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":26,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["usevalu",{"_index":369,"title":{},"body":{"index.html":{}}}],["valu",{"_index":48,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":289,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":167,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["view",{"_index":173,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["viewcontainerref",{"_index":159,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibl",{"_index":43,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["way",{"_index":130,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whether",{"_index":94,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["wish",{"_index":375,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":348,"title":{},"body":{"index.html":{}}}],["ye",{"_index":113,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["zone.j",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":267,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extendAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        hidden\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hidden property, that HostBinding should be used for, in order to shor or hide action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend  \n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to shor or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from  \n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from  \n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend fromUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming fromShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend  \n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to shor or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from  \n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from  \n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend  \n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to shor or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from  \n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from  \n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionButton\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionButton\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionGroupOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionGroup\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionGroup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionToggleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionToggle\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionToggle\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n *Template\n * \n *\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:102\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:91\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponentType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponentType(action: AnyAction, injector: Injector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:137\n                            \n                        \n\n\n                \n                    \n                            Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    AnyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Action to get Component for\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    Injector\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Injector from current directive instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:83\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :     AnyAction\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action: )\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction) {\n        this.action = action;\n\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance.action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n *Can do\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n *\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionButton with default options and component\nExample:\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionButton\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionButton\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionGroup with default options and component\nExample:\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionGroupOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionGroup\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionGroup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionToggle with default options and component\nExample:\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionToggleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionToggle\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionToggle\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable()\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     * \n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     * \n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     * \n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionOutletModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\ncluster_ActionOutletModule_providers\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\nActionOutletFactory\n\nActionOutletFactory\n\nActionOutletModule -->\n\nActionOutletFactory->ActionOutletModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ActionOutletDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ActionOutletFactory\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ActionOutletDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\nimport { ActionOutletFactory } from './action-outlet.service';\n\n@NgModule({\n  declarations: [ActionOutletDirective],\n  imports: [CommonModule],\n  exports: [ActionOutletDirective],\n  providers: [ActionOutletFactory],\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            \n                interface\n            \n            \n                ActionAbstractComponentImpl\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            \n                interface\n            \n            \n                ActionAbstractEvent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            \n                interface\n            \n            \n                ActionAbstractOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            \n                class\n            \n            \n                ActionAbstract\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            \n                variable\n            \n            \n                defaultAbstractOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            \n                interface\n            \n            \n                ActionButtonEvent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            \n                interface\n            \n            \n                ActionButtonOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            \n                class\n            \n            \n                ActionButton\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            \n                variable\n            \n            \n                defaultButtonOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            \n                interface\n            \n            \n                ActionGroupEvent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            \n                interface\n            \n            \n                ActionGroupOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            \n                class\n            \n            \n                ActionGroup\n            \n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            \n                variable\n            \n            \n                defaultGroupOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            \n                variable\n            \n            \n                unique\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            \n                directive\n            \n            \n                ActionOutletDirective\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            \n                interface\n            \n            \n                ActionOutlet\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            \n                injectable\n            \n            \n                ActionOutletFactory\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            \n                interface\n            \n            \n                ActionToggleEvent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            \n                interface\n            \n            \n                ActionToggleOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            \n                class\n            \n            \n                ActionToggle\n            \n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            \n                variable\n            \n            \n                defaultToggleOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic actions on runtimeand have the possibility to get notified for each and every change, that happens to any particular action.e.g. Title change, icon change, disabled state, etc.\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\ncluster_ActionOutletModule_providers\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\nActionOutletFactory\n\nActionOutletFactory\n\nActionOutletModule -->\n\nActionOutletFactory->ActionOutletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionButtonCallback\n                    \n                \n                    \n                        \n                            Subscription next callback for ActionButton fire$\n\n                        \n                    \n                \n                    \n                        ActionButtonCallback:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionButtonComponentImpl\n                    \n                \n                    \n                        \n                            Type that components used by ActionButton should implement\n\n                        \n                    \n                \n                    \n                        ActionButtonComponentImpl:     ActionAbstractComponentImpl\n\n                    \n                \n            \n        \n\n    projects/core/src/lib/action-group/action-group.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionGroupComponentImpl\n                    \n                \n                    \n                        \n                            Type that components used by ActionGroup should implement\n\n                        \n                    \n                \n                    \n                        ActionGroupComponentImpl:     ActionAbstractComponentImpl\n\n                    \n                \n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionToggleCallback\n                    \n                \n                    \n                        \n                            Subscription next callback for ActionToggle fire$\n\n                        \n                    \n                \n                    \n                        ActionToggleCallback:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionToggleComponentImpl\n                    \n                \n                    \n                        \n                            Type that components used by ActionToggle should implement\n\n                        \n                    \n                \n                    \n                        ActionToggleComponentImpl:     ActionAbstractComponentImpl\n\n                    \n                \n            \n        \n\n    projects/core/src/lib/action-outlet.model.ts\n    \n        \n            \n                \n                    \n                        \n                        AnyAction\n                    \n                \n                    \n                        \n                            AnyAction type is a shorter way to define the default abstract action type\n\n                        \n                    \n                \n                    \n                        AnyAction:     ActionAbstract\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultAbstractOptions:     ActionAbstractOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionAbstractOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultButtonOptions:     ActionButtonOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultGroupOptions:     ActionGroupOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unique:     \n\n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultToggleOptions:     ActionToggleOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
