var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ActionAbstract.html",[0,0.555,1,0.934]],["body/classes/ActionAbstract.html",[0,0.84,1,1.192,2,0.474,3,0.153,4,0.353,5,0.135,6,0.497,7,0.783,8,0.593,9,0.593,10,0.896,11,0.362,12,1.656,13,1.656,14,1.656,15,1.817,16,1.817,17,3.369,18,1.186,19,1.602,20,1.578,21,1.77,22,1.8,23,2.079,24,1.488,25,0.745,26,0.373,27,1.656,28,0.555,29,0.039,30,0.93,31,0.476,32,1.656,33,2.708,34,2.479,35,0.949,36,1.808,37,3.185,38,2.778,39,0.801,40,1.645,41,2.847,42,0.952,43,1.656,44,4.874,45,3.922,46,3.922,47,2.847,48,1.645,49,1.656,50,1.535,51,0.63,52,1.872,53,1.578,54,2.634,55,1.367,56,1.098,57,1.656,58,1.034,59,1.656,60,1.034,61,1.034,62,1.034,63,1.857,64,1.034,65,1.656,66,2.335,67,2.715,68,1.656,69,1.367,70,2.251,71,1.656,72,1.656,73,0.101,74,1.372,75,1.893,76,0.745,77,2.335,78,2.335,79,1.465,80,2.203,81,2.203,82,1.645,83,1.645,84,1.645,85,1.645,86,1.645,87,2.049,88,1.645,89,1.645,90,1.645,91,1.645,92,1.645,93,1.645,94,1.645,95,1.034,96,1.034,97,1.034,98,1.034,99,2.335,100,1.866,101,0.819,102,2.477,103,0.95,104,1.034,105,1.314,106,1.186,107,2.466,108,2.201,109,3.528,110,1.656,111,1.661,112,1.656,113,1.103,114,1.345,115,1.345,116,0.637,117,0.474,118,0.95,119,2.715,120,0.745,121,0.95,122,2.634,123,2.174,124,1.073,125,1.336,126,1.656,127,1.034,128,2.637,129,1.034,130,1.962,131,1.656,132,0.95,133,2.847,134,0.95,135,0.95,136,0.95,137,1.962,138,2.169,139,0.95,140,0.95,141,2.049,142,0.95,143,2.493,144,1.645,145,1.645,146,0.95,147,0.95,148,2.107,149,1.375,150,0.95,151,1.872,152,1.645,153,0.95,154,0.95,155,2.497,156,2.092,157,0.95,158,1.284,159,1.465,160,1.034,161,0.921,162,1.098,163,0.612,164,1.224,165,1.962,166,0.95,167,0.95,168,2.417,169,0.745,170,0.95,171,0.95,172,1.034,173,1.645,174,0.95,175,1.523,176,2.361,177,1.927,178,1.375,179,0.95,180,1.866,181,0.95,182,0.95,183,0.95,184,0.95,185,1.645,186,0.95,187,1.034,188,0.95,189,2.784,190,1.034,191,0.95,192,1.034,193,0.95,194,1.034,195,0.95,196,1.034,197,0.95,198,0.95,199,1.656,200,0.423,201,0.351,202,3.167,203,1.367,204,0.528,205,0.95,206,0.95,207,0.95,208,0.95,209,0.593,210,0.214,211,0.237,212,0.237,213,0.351,214,0.387,215,0.428,216,0.318,217,1.314,218,1.176,219,0.784,220,1.465,221,0.95,222,0.784,223,3.528,224,1.656,225,1.656,226,1.656,227,0.95,228,0.474,229,0.95,230,0.237,231,0.95,232,0.784,233,0.675,234,0.95,235,3.086,236,0.95,237,2.201,238,0.95,239,0.95,240,0.95,241,0.593,242,0.593,243,0.95,244,0.95,245,0.95,246,1.9,247,0.95,248,1.656,249,0.95,250,1.656,251,0.95,252,1.656,253,0.95,254,1.656,255,0.95,256,0.95,257,0.95,258,1.656,259,0.95,260,0.95,261,0.95,262,0.95,263,0.95,264,0.95,265,0.95,266,0.95,267,0.95,268,0.95,269,1.656,270,3.739,271,1.656,272,1.656,273,0.387,274,0.784,275,1.656,276,1.656,277,2.987,278,1.656,279,1.656,280,0.95,281,0.95,282,0.95,283,0.95,284,0.95,285,0.95,286,1.656,287,0.784,288,0.95,289,0.95,290,0.784,291,0.95,292,0.95,293,1.656,294,0.95,295,0.95,296,0.95,297,0.95,298,2.201,299,0.95,300,0.95,301,0.95,302,0.95,303,0.95,304,0.95,305,0.95,306,0.95,307,0.95,308,1.656,309,0.95,310,0.95,311,1.656,312,2.634,313,0.95,314,0.95,315,0.95,316,0.95,317,0.95,318,0.95,319,0.95,320,0.95,321,0.95,322,0.95,323,0.01,324,0.01]],["title/interfaces/ActionAbstractComponentImpl.html",[210,0.69,325,0.277]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.634,3,0.564,4,0.564,5,0.497,6,0.317,7,0.497,9,0.634,10,1.429,11,0.367,19,1.381,20,1.381,21,1.429,22,1.678,24,1.252,26,0.713,29,0.039,30,0.91,31,0.821,34,3.242,35,0.789,36,1.067,39,1.067,40,3.327,42,0.634,50,1.719,51,0.434,63,1.429,73,0.374,74,1.409,75,1.429,101,0.729,104,3.146,116,1.021,120,0.875,156,2.267,158,1.067,163,1.678,175,1.252,200,0.497,210,1.021,211,0.875,212,0.875,216,1.176,230,1.256,241,2.192,242,2.837,273,1.429,323,0.028,324,0.028,325,0.532,326,1.067,327,2.192,328,3.785,329,1.252,330,3.227,331,3.227,332,3.785,333,3.146,334,3.146,335,1.678,336,1.579,337,2.962,338,2.493,339,1.176,340,2.192,341,2.493,342,2.493,343,1.688,344,2.192,345,2.493,346,2.493,347,2.493,348,2.493]],["title/interfaces/ActionAbstractEvent.html",[211,0.765,325,0.277]],["body/interfaces/ActionAbstractEvent.html",[0,0.638,3,0.567,4,0.567,5,0.5,6,0.319,7,0.5,9,0.638,10,1.439,11,0.369,19,1.387,20,1.387,21,1.439,22,1.685,24,1.257,26,0.716,29,0.039,30,0.824,31,0.824,34,3.149,35,1.026,36,1.387,39,1.387,40,2.85,42,0.824,50,1.537,51,0.437,63,1.439,73,0.376,74,1.412,75,1.439,101,0.733,104,3.157,116,0.965,120,1.137,156,2.275,158,1.387,163,1.305,175,1.257,200,0.5,210,0.794,211,1.137,212,0.881,216,1.529,230,1.26,241,2.207,242,2.85,273,1.859,323,0.028,324,0.028,325,0.532,326,1.074,327,2.207,328,3.242,329,0.974,330,2.511,331,2.511,332,2.511,333,2.207,334,2.85,335,1.973,336,1.59,337,2.97,338,2.511,339,1.184,340,2.207,341,2.511,342,2.511,343,1.898,344,2.85,345,3.242,346,3.242,347,3.242,348,3.242]],["title/interfaces/ActionAbstractOptions.html",[212,0.765,325,0.277]],["body/interfaces/ActionAbstractOptions.html",[0,0.79,3,0.531,4,0.531,5,0.468,6,0.298,7,0.468,9,0.598,10,1.78,11,0.367,19,1.691,20,1.691,21,1.78,22,2.054,24,1.435,26,0.693,29,0.039,30,0.884,31,0.79,34,3.092,35,0.744,36,1.005,39,1.005,40,2.729,42,0.598,50,1.488,51,0.669,63,2.121,73,0.352,74,1.386,75,2.121,101,0.836,104,2.729,116,1.105,120,0.824,156,2.622,158,1.005,163,1.221,175,1.532,200,0.468,210,0.744,211,0.824,212,1.089,216,1.108,230,1.089,241,2.729,242,3.252,273,1.347,323,0.027,324,0.027,325,0.512,326,1.005,327,2.066,328,3.105,329,0.911,330,2.35,331,2.35,332,2.35,333,2.066,334,2.729,335,1.614,336,1.488,337,3.201,338,3.105,339,1.464,340,2.729,341,3.105,342,3.105,343,1.64,344,2.066,345,2.35,346,2.35,347,2.35,348,2.35]],["title/classes/ActionAnchor.html",[0,0.555,349,1.708]],["body/classes/ActionAnchor.html",[0,0.27,1,1.789,2,0.746,3,0.24,4,0.24,5,0.212,6,0.425,7,0.212,9,0.75,10,0.609,11,0.345,18,0.673,19,1.622,20,1.505,21,1.691,22,1.739,23,0.831,24,1.298,25,1.092,26,0.212,28,0.813,29,0.039,30,0.27,31,0.439,35,0.689,36,1.769,37,3.092,38,1.35,41,1.913,42,0.7,47,1.913,48,1.516,50,1.505,51,0.696,53,1.535,56,1.528,58,0.934,60,0.934,61,0.934,62,0.934,63,1.691,64,0.934,67,2.593,70,1.781,73,0.159,74,1.435,75,1.781,76,1.092,77,2.202,78,2.202,79,1.703,80,2.846,81,2.202,82,1.913,83,1.913,84,1.913,85,1.913,86,1.913,87,2.202,88,1.913,89,1.913,90,1.913,91,1.913,92,1.913,93,1.913,94,1.913,95,1.516,96,1.516,97,1.516,98,1.516,99,2.421,100,1.934,101,0.756,102,2.677,105,0.813,106,1.092,111,0.831,113,0.552,114,2.051,115,2.051,116,0.874,117,0.746,119,2.846,120,1.136,127,1.516,128,1.913,129,2.593,130,2.308,133,2.941,137,0.831,138,1.759,141,1.913,143,2.071,144,1.516,145,1.516,148,2.415,149,0.934,152,0.934,155,2.61,156,2.402,158,1.072,159,1.35,160,0.934,161,0.831,162,0.746,163,0.552,164,0.831,165,1.35,168,0.831,169,0.373,172,0.934,173,1.516,175,1.499,176,2.182,177,1.781,178,0.934,180,0.934,185,0.934,187,0.934,189,1.913,190,0.934,192,0.934,194,0.934,196,0.934,200,0.588,201,0.552,202,2.505,204,0.831,209,0.934,217,2.182,228,1.528,233,1.724,246,1.092,273,0.609,323,0.015,324,0.015,333,3.023,339,1.391,340,2.202,349,2.753,350,2.941,351,1.062,352,1.724,353,5.048,354,2.505,355,3.525,356,2.003,357,2.003,358,4.556,359,4.951,360,4.951,361,3.525,362,2.427,363,2.427,364,2.427,365,2.91,366,1.495,367,1.724,368,4.146,369,1.495,370,1.516,371,3.876,372,1.495,373,1.724,374,1.495,375,1.495,376,1.495,377,1.062,378,1.062,379,1.062,380,1.062,381,1.062,382,1.062,383,1.495,384,4.151,385,4.839,386,1.495,387,1.495,388,2.427,389,2.427,390,2.427,391,1.495,392,2.427,393,2.427,394,3.525,395,1.495,396,2.427,397,2.427,398,1.211,399,2.427,400,2.91,401,1.495,402,1.495,403,2.003,404,1.062,405,1.062,406,1.062,407,1.062,408,1.062,409,1.062,410,1.062,411,1.062,412,1.062,413,1.062,414,1.062,415,1.062,416,1.062,417,1.062,418,1.062,419,1.062,420,1.062,421,1.062,422,1.062,423,1.062,424,1.062,425,1.234,426,1.516,427,1.062,428,1.234,429,1.495,430,1.913,431,3.063,432,1.495,433,1.062,434,2.427,435,1.495,436,1.495,437,2.427,438,1.495,439,1.495,440,2.427,441,1.495,442,1.495,443,1.495,444,1.495,445,1.062,446,1.495,447,1.495,448,1.495,449,1.495,450,1.495,451,1.495,452,1.495,453,1.495,454,2.003,455,2.427,456,1.495]],["title/classes/ActionButton.html",[0,0.555,457,0.934]],["body/classes/ActionButton.html",[0,0.331,1,1.826,2,0.914,3,0.294,4,0.294,5,0.259,6,0.257,7,0.259,9,0.82,10,0.746,11,0.359,18,0.824,19,1.692,20,1.593,21,1.848,22,1.809,23,1.018,24,1.387,25,1.779,26,0.259,28,0.956,29,0.039,30,0.331,31,0.515,35,1.02,36,1.748,37,3.273,38,1.586,41,2.469,42,0.82,47,1.144,48,1.781,50,1.64,51,0.698,52,2.026,53,1.564,55,1.512,56,0.914,58,1.144,60,1.144,61,1.144,62,1.144,63,1.848,64,1.144,66,1.144,67,3.06,69,1.512,70,0.746,73,0.195,74,1.408,75,1.929,76,1.283,77,2.469,78,2.469,79,1.947,80,2.469,81,2.469,82,2.187,83,2.187,84,2.187,85,2.187,86,2.187,87,2.469,88,2.187,89,2.187,90,2.187,91,2.187,92,2.187,93,2.187,94,2.187,95,1.781,96,1.781,97,1.781,98,1.781,99,2.675,100,2.137,101,0.761,102,2.693,105,0.614,106,1.283,111,1.018,113,0.676,114,1.928,115,1.928,116,0.856,117,0.914,119,3.06,120,1.068,127,1.781,128,2.187,129,1.781,133,3.273,137,1.018,138,1.972,141,2.187,143,2.264,144,1.781,145,1.781,148,1.972,149,1.144,151,2.026,152,1.781,155,2.623,156,2.265,158,1.202,159,1.586,160,1.144,161,1.018,162,0.914,163,0.676,164,1.018,165,1.586,168,1.018,169,0.456,172,1.144,173,1.781,175,1.545,176,2.363,177,1.929,178,1.144,180,1.144,185,1.144,187,1.144,189,2.469,190,1.144,192,1.144,194,1.144,196,1.144,200,0.607,201,0.676,204,1.018,209,1.144,217,2.363,228,1.972,246,1.283,287,2.354,323,0.018,324,0.018,339,1.724,352,2.026,354,2.808,356,2.354,357,2.354,367,2.026,368,4.241,370,1.781,377,1.301,378,1.301,379,1.301,380,1.301,381,1.301,382,1.301,404,1.301,405,1.301,406,1.301,407,1.301,408,1.301,409,1.301,410,1.301,411,1.301,412,1.301,413,1.301,414,1.301,415,1.301,416,1.301,417,1.301,418,1.301,419,1.301,420,1.301,421,1.301,422,1.301,423,1.301,424,1.301,426,1.781,427,1.301,430,2.187,433,1.301,445,1.301,457,1.593,458,1.161,459,1.301,460,1.745,461,1.831,462,1.512,463,1.512,464,2.851,465,1.831,466,2.354,467,2.026,468,2.354,469,2.851,470,1.512,471,1.512,472,0.914,473,1.018,474,1.301,475,1.512,476,1.512]],["title/interfaces/ActionButtonEvent.html",[325,0.277,473,1.708]],["body/interfaces/ActionButtonEvent.html",[3,0.623,4,0.623,5,0.55,6,0.35,7,0.55,9,0.701,11,0.347,26,0.783,28,1.769,29,0.039,30,0.701,31,0.954,35,1.243,36,1.18,39,1.472,42,0.701,51,0.683,73,0.413,74,1.207,101,0.778,116,0.701,120,1.207,124,1.581,125,1.581,200,0.686,210,1.089,211,1.316,212,1.207,213,1.433,230,1.207,323,0.03,324,0.03,325,0.499,326,1.18,329,1.069,339,1.301,343,1.906,457,1.847,458,1.581,460,1.581,472,1.936,473,2.935,477,2.424,478,2.416,479,2.416,480,2.416,481,2.158,482,2.158,483,2.376,484,3.441,485,2.158,486,1.747,487,2.424,488,2.424,489,2.424]],["title/interfaces/ActionButtonOptions.html",[325,0.277,460,1.251]],["body/interfaces/ActionButtonOptions.html",[3,0.617,4,0.617,5,0.544,6,0.347,7,0.544,9,0.694,11,0.314,26,0.78,28,1.761,29,0.039,30,0.869,31,0.995,35,1.238,36,1.463,39,1.674,42,0.694,51,0.681,73,0.409,74,1.199,101,0.884,116,0.995,120,0.957,124,1.564,125,1.959,200,0.681,210,1.082,211,1.199,212,1.309,213,1.418,230,0.957,323,0.03,324,0.03,325,0.474,326,1.167,329,1.058,339,1.287,343,1.761,457,1.805,458,1.564,460,1.959,472,1.916,473,2.675,477,2.398,478,1.916,479,1.916,480,1.916,481,2.135,482,2.135,483,2.642,484,3.913,485,2.135,486,2.165,487,3.005,488,3.005,489,3.005]],["title/interfaces/ActionGroupEvent.html",[325,0.277,490,1.918]],["body/interfaces/ActionGroupEvent.html",[3,0.622,4,0.622,5,0.549,6,0.35,7,0.549,9,0.7,11,0.352,26,0.747,28,1.768,29,0.039,30,0.7,31,0.953,35,1.088,39,1.471,42,0.7,51,0.652,73,0.413,74,1.315,101,0.777,116,0.7,120,1.206,124,1.578,125,1.578,169,1.505,175,1.333,176,1.933,177,1.578,200,0.747,210,1.088,211,1.315,212,1.206,213,1.431,214,1.578,215,2.178,216,1.299,230,1.206,323,0.03,324,0.03,325,0.499,326,1.178,329,1.068,335,1.431,336,1.744,343,1.852,478,2.414,479,2.414,480,2.414,486,1.744,490,3.022,491,2.42,492,2.155,493,1.744,494,2.753,495,3.198,496,3.022,497,3.198,498,2.753,499,2.753,500,3.022]],["title/interfaces/ActionGroupOptions.html",[325,0.277,493,1.382]],["body/interfaces/ActionGroupOptions.html",[3,0.605,4,0.605,5,0.533,6,0.34,7,0.533,9,0.68,11,0.327,26,0.737,28,1.745,29,0.039,30,0.859,31,0.988,35,0.847,39,1.663,42,0.68,51,0.676,73,0.401,74,1.298,101,0.878,116,0.988,120,0.938,124,1.534,125,1.935,169,1.457,175,1.554,176,2.371,177,1.935,200,0.737,210,1.068,211,1.184,212,1.298,213,1.391,214,1.534,215,2.343,216,1.592,230,0.938,323,0.029,324,0.029,325,0.47,326,1.145,329,1.037,335,1.391,336,1.695,343,1.592,478,1.879,479,1.879,480,1.879,486,2.139,490,2.352,491,2.352,492,2.094,493,2.139,494,3.376,495,3.922,496,3.596,497,4.298,498,3.376,499,3.376,500,3.596]],["title/interfaces/ActionOutlet.html",[325,0.277,501,1.532]],["body/interfaces/ActionOutlet.html",[1,1.236,2,2.028,3,0.477,4,0.477,5,0.42,6,0.45,7,0.575,9,0.9,11,0.341,18,1.829,26,0.575,29,0.039,30,0.734,33,4.638,50,1.867,51,0.742,53,1.639,70,2.195,73,0.316,76,1.829,101,0.971,102,2.086,105,2.033,106,2.426,114,2.086,115,2.086,116,0.837,117,2.689,155,2.086,169,1.451,200,0.807,201,1.097,211,0.74,212,0.74,213,1.097,214,1.655,215,1.336,230,1.343,246,2.426,323,0.025,324,0.025,325,0.418,326,0.903,335,1.501,339,0.995,457,1.733,458,1.655,460,2.03,472,1.481,474,2.109,492,1.651,493,2.243,501,2.486,502,2.109,503,3.355,504,2.26,505,3.355,506,3.355,507,3.355,508,3.355,509,2.969,510,4.169,511,3.355,512,2.969,513,3.355,514,2.03,515,2.969,516,1.733,517,2.451,518,1.481,519,1.655,520,2.109,521,1.481,522,2.451,523,2.109,524,2.109]],["title/directives/ActionOutletDirective.html",[113,1.134,398,1.532]],["body/directives/ActionOutletDirective.html",[0,0.689,1,0.963,3,0.337,4,0.337,5,0.297,6,0.449,7,0.449,9,0.689,11,0.369,18,2.051,19,1.291,20,1.291,24,0.579,25,1.426,26,0.297,29,0.039,30,0.38,34,1.761,42,1.014,50,1.808,51,0.694,53,1.385,56,1.903,70,1.856,73,0.224,76,1.426,79,1.168,100,2.39,102,2.156,105,0.704,107,3.761,111,1.761,113,1.17,114,1.716,115,1.716,116,0.689,130,2.121,138,1.581,143,1.581,148,2.119,155,1.716,158,1.456,159,2.846,161,1.761,163,1.408,164,3.212,165,2.968,169,1.239,175,0.579,177,1.29,200,0.601,201,0.776,203,1.734,210,0.472,213,0.776,215,1.426,216,1.423,217,1.581,220,1.761,228,1.903,230,1.194,232,2.615,233,2.251,235,3.148,246,1.911,273,0.856,274,1.734,323,0.02,324,0.02,329,0.873,334,3.271,335,2.002,336,0.945,339,1.062,344,1.979,398,2.481,403,2.615,454,1.734,457,1.512,467,3.017,483,1.426,485,1.761,496,1.979,501,2.554,503,2.615,516,0.963,521,1.581,525,2.101,526,1.734,527,3.168,528,3.168,529,3.168,530,3.168,531,4.557,532,3.168,533,3.168,534,3.813,535,4.323,536,3.403,537,3.168,538,2.615,539,2.615,540,2.615,541,2.251,542,3.813,543,2.101,544,3.168,545,3.168,546,3.168,547,3.813,548,3.168,549,2.101,550,4.972,551,5.118,552,2.101,553,2.615,554,3.168,555,3.168,556,3.168,557,3.168,558,3.168,559,3.168,560,3.813,561,3.148,562,4.246,563,3.813,564,4.246,565,3.813,566,3.813,567,3.813,568,3.813,569,3.813,570,2.101,571,3.168,572,3.168,573,3.168,574,3.168,575,3.168,576,2.101,577,4.557,578,4.246,579,3.168,580,3.168,581,2.101,582,2.101,583,3.168,584,2.101,585,3.813,586,2.101,587,4.246,588,3.168,589,4.972,590,3.168,591,2.101,592,2.101,593,2.101,594,2.101,595,2.101,596,2.101,597,2.101,598,2.101,599,2.101,600,2.101,601,2.101,602,3.168,603,2.101,604,2.101,605,2.101,606,2.101,607,2.101,608,2.101]],["title/injectables/ActionOutletFactory.html",[504,1.708,609,1.918]],["body/injectables/ActionOutletFactory.html",[0,0.463,3,0.412,4,0.412,5,0.363,6,0.422,9,0.844,11,0.33,19,1.646,20,1.421,25,2.437,26,0.363,29,0.039,50,1.854,51,0.713,53,1.721,66,2.674,70,2.245,73,0.273,76,1.65,101,0.954,102,1.927,105,1.991,106,2.437,114,1.927,115,1.927,116,0.773,117,2.566,155,1.927,162,1.829,169,1.374,200,0.767,201,0.946,214,1.493,215,1.927,216,1.229,217,2.791,220,2.598,228,2.467,230,1.282,246,2.315,323,0.023,324,0.023,336,1.153,339,1.435,354,2.605,457,1.721,458,1.493,460,1.903,472,1.279,474,1.821,483,1.65,492,1.425,493,2.103,500,2.29,501,1.829,504,2.598,505,3.533,506,3.533,507,3.533,508,3.026,510,4.063,511,3.026,513,3.026,514,1.903,516,1.676,517,2.115,518,1.279,519,1.493,520,1.821,521,2.136,523,2.605,536,2.605,539,3.026,541,1.821,561,3.026,609,2.29,610,2.563,611,2.115,612,3.666,613,3.666,614,3.026,615,3.666,616,3.666,617,3.666,618,2.605,619,3.666,620,4.672,621,3.666,622,3.666,623,3.666,624,3.666,625,2.563,626,3.666,627,2.563,628,3.026,629,2.563,630,3.666,631,2.039,632,2.563,633,2.563,634,2.563,635,2.563,636,2.563]],["title/modules/ActionOutletModule.html",[637,2.182,638,1.708]],["body/modules/ActionOutletModule.html",[0,0.79,3,0.702,4,0.702,5,0.619,6,0.394,11,0.262,26,0.619,29,0.038,113,2.288,200,0.788,201,1.614,323,0.032,324,0.032,638,3.354,639,3.105,640,3.252,641,3.608,642,3.608,643,3.608,644,4.298,645,3.608,646,3.105,647,4.371,648,5.207,649,5.207,650,4.298,651,5.207,652,3.608,653,4.371,654,3.608]],["title/classes/ActionToggle.html",[0,0.555,516,0.934]],["body/classes/ActionToggle.html",[0,0.286,1,1.8,2,0.791,3,0.255,4,0.255,5,0.224,6,0.385,7,0.224,9,0.77,10,0.646,11,0.356,18,1.434,19,1.56,20,1.531,21,1.737,22,1.72,23,0.882,24,1.456,25,2.309,26,0.224,28,0.853,29,0.039,30,0.286,31,0.46,35,0.82,36,1.709,37,3.146,38,1.415,42,0.722,47,0.99,48,1.589,50,1.585,51,0.68,52,1.808,53,1.499,56,1.59,58,0.99,60,0.99,61,0.99,62,0.99,63,1.737,64,0.99,66,2.278,67,2.495,70,1.627,73,0.169,74,1.372,75,1.825,76,1.145,77,2.278,78,2.278,79,1.772,80,2.278,81,2.278,82,1.991,83,1.991,84,1.991,85,1.991,86,1.991,87,2.278,88,1.991,89,1.991,90,1.991,91,1.991,92,1.991,93,1.991,94,1.991,95,1.589,96,1.589,97,1.589,98,1.589,99,2.495,100,1.993,101,0.719,102,2.677,105,0.531,106,1.145,111,0.882,113,0.586,114,1.797,115,1.797,116,0.809,117,0.791,119,2.909,120,0.634,123,1.309,127,1.589,128,1.991,129,1.589,130,1.415,133,3.146,137,0.882,138,1.82,141,1.991,143,2.397,144,1.589,145,2.663,148,2.324,149,0.99,151,1.808,152,1.589,155,2.63,156,2.162,158,1.109,159,1.415,160,0.99,161,0.882,162,0.791,163,0.586,164,0.882,165,1.415,168,0.882,169,0.395,172,0.99,173,1.589,175,1.581,176,2.513,177,2.052,178,0.99,180,0.99,185,0.99,187,0.99,189,1.991,190,0.99,192,0.99,194,0.99,196,0.99,200,0.566,201,0.586,202,2.264,204,0.882,209,0.99,217,2.513,220,2.371,228,2.324,246,1.145,323,0.016,324,0.016,367,1.808,368,4.175,370,1.589,377,1.126,378,1.126,379,1.126,380,1.126,381,1.126,382,1.126,404,1.126,405,1.126,406,1.126,407,1.126,408,1.126,409,1.126,410,1.126,411,1.126,412,1.126,413,1.126,414,1.126,415,1.126,416,1.126,417,1.126,418,1.126,419,1.126,420,1.126,421,1.126,422,1.126,423,1.126,424,1.126,426,1.589,427,1.126,433,1.126,445,1.126,462,1.309,463,1.309,466,2.1,467,1.808,468,2.1,470,1.309,471,1.309,475,1.309,476,1.309,514,1.627,516,1.531,518,0.791,519,1.737,520,1.126,521,2.56,553,2.1,631,3.143,655,1.126,656,2.544,657,2.544,658,2.544,659,2.544,660,2.544,661,3.297,662,4.48,663,4.263,664,3.994,665,1.585,666,1.585,667,3.647,668,3.647,669,3.647,670,3.647,671,2.544,672,1.585,673,2.544,674,1.585,675,3.647,676,2.544,677,1.585,678,2.544,679,1.585,680,2.544,681,0.882,682,2.264,683,1.585,684,1.585,685,1.585,686,1.585,687,1.585,688,1.585,689,1.585,690,1.585,691,2.544]],["title/interfaces/ActionToggleEvent.html",[325,0.277,681,1.708]],["body/interfaces/ActionToggleEvent.html",[3,0.595,4,0.595,5,0.525,6,0.334,7,0.525,9,0.669,11,0.353,24,1.424,26,0.77,28,1.732,29,0.039,30,0.669,31,0.934,35,1.222,36,1.126,39,1.43,42,0.669,51,0.694,53,1.43,73,0.395,74,1.355,101,0.755,116,0.85,120,1.172,124,1.509,125,1.509,175,1.498,200,0.666,210,1.057,211,1.288,212,1.172,213,1.368,230,1.172,323,0.029,324,0.029,325,0.491,326,1.126,329,1.021,337,2.06,343,1.88,478,2.347,479,2.347,480,2.347,481,2.06,482,2.06,483,2.326,485,2.06,486,1.667,487,2.314,488,2.314,489,2.314,514,1.509,516,1.835,518,1.848,519,1.509,521,1.848,631,3.278,681,2.873,692,2.314,693,3.341]],["title/interfaces/ActionToggleOptions.html",[325,0.277,514,1.251]],["body/interfaces/ActionToggleOptions.html",[3,0.587,4,0.587,5,0.518,6,0.33,7,0.518,9,0.661,11,0.324,24,1.415,26,0.766,28,1.721,29,0.039,30,0.843,31,0.977,35,1.216,36,1.418,39,1.645,42,0.661,51,0.691,53,1.112,73,0.389,74,1.348,101,0.869,116,1.062,120,0.911,124,1.489,125,1.9,175,1.491,200,0.66,210,1.049,211,1.163,212,1.28,213,1.35,230,0.911,323,0.029,324,0.029,325,0.464,326,1.112,329,1.007,337,2.593,343,1.721,478,1.824,479,1.824,480,1.824,481,2.033,482,2.033,483,2.614,485,2.033,486,2.099,487,2.913,488,2.913,489,2.913,514,1.9,516,1.788,518,1.824,519,1.489,521,1.824,631,3.269,681,2.593,692,2.284,693,3.843]],["title/coverage.html",[694,3.433]],["body/coverage.html",[0,1.003,1,1.088,5,0.507,6,0.562,7,0.786,8,2.873,29,0.038,51,0.442,53,1.088,113,1.322,169,0.892,210,0.805,211,0.892,212,0.892,214,2.261,218,2.543,323,0.028,324,0.028,325,0.538,327,3.176,349,1.99,350,2.873,351,3.269,398,1.786,430,2.873,457,1.088,458,2.186,459,3.269,460,1.458,473,1.99,477,2.873,490,2.235,491,2.873,493,1.611,501,1.786,502,2.543,504,1.99,514,1.458,516,1.088,519,2.186,526,2.954,609,2.235,611,2.954,655,3.269,681,1.99,682,2.543,692,2.873,694,2.954,695,2.954,696,3.579,697,3.579,698,6.223,699,5.551,700,3.579,701,4.6,702,5.682,703,5.682,704,3.579,705,5.084,706,4.197,707,3.579,708,2.954,709,2.954,710,3.579,711,4.6,712,3.579,713,3.579,714,3.579]],["title/dependencies.html",[640,2.301,715,2.13]],["body/dependencies.html",[29,0.039,201,1.669,204,2.513,323,0.033,324,0.033,373,3.773,425,3.73,640,2.823,652,3.73,716,4.519,717,6.176,718,4.519,719,4.519,720,4.519,721,4.519,722,5.311,723,3.73,724,4.519,725,4.519,726,4.519,727,4.519,728,4.519]],["title/miscellaneous/enumerations.html",[729,1.288,730,3.041]],["body/miscellaneous/enumerations.html",[6,0.427,7,0.67,8,3.407,11,0.283,23,3.033,24,1.304,29,0.034,73,0.504,137,3.033,138,2.721,222,4.502,323,0.034,324,0.034,729,2.36,730,3.905,731,3.361]],["title/index.html",[73,0.275,732,1.834,733,1.834]],["body/index.html",[0,1.038,1,0.939,11,0.361,17,3.446,18,1.879,19,1.269,20,0.939,21,1.258,22,1.141,24,0.851,25,2.28,26,0.717,29,0.039,38,1.718,42,0.558,50,1.695,105,1.399,106,2.129,130,2.817,148,1.541,158,0.939,163,1.141,169,1.263,200,0.823,215,1.39,216,1.868,273,1.258,290,2.55,323,0.026,324,0.026,329,0.851,352,2.195,398,1.541,457,1.438,498,2.195,499,2.195,501,2.36,504,2.321,510,2.966,516,1.609,524,2.195,535,2.55,538,2.55,540,2.55,541,2.195,614,3.446,618,3.759,628,2.55,637,2.195,638,2.942,650,3.904,654,3.446,661,2.55,723,2.55,732,2.195,733,2.195,734,3.089,735,3.089,736,5.291,737,3.089,738,3.089,739,3.089,740,4.175,741,3.089,742,3.089,743,3.089,744,3.089,745,2.55,746,3.089,747,3.089,748,3.089,749,4.175,750,2.55,751,3.089,752,3.089,753,3.089,754,3.089,755,3.089,756,3.089,757,4.175,758,3.446,759,4.175,760,3.089,761,5.453,762,4.175,763,5.575,764,3.904,765,4.729,766,4.729,767,3.089,768,3.089,769,3.089,770,3.089,771,3.089,772,3.089,773,5.453,774,3.089,775,4.175,776,3.089,777,4.729,778,3.089,779,3.089,780,3.089,781,4.175,782,3.089,783,4.175,784,3.089,785,4.175,786,3.089,787,5.065,788,3.089,789,3.089,790,3.089,791,3.089,792,3.089,793,3.089,794,3.089,795,4.175,796,3.089,797,4.175,798,2.55,799,3.089,800,3.089,801,3.089,802,3.089,803,3.089,804,3.089,805,3.089,806,3.089,807,3.089,808,3.089,809,3.089,810,3.089]],["title/license.html",[732,1.834,733,1.834,811,2.13]],["body/license.html",[11,0.248,29,0.031,41,2.591,158,1.261,177,1.69,323,0.031,324,0.031,343,1.39,370,2.591,426,2.591,618,3.585,646,2.947,695,3.424,745,3.424,750,3.424,811,3.424,812,4.148,813,5.438,814,4.148,815,4.148,816,4.148,817,4.148,818,5.046,819,4.148,820,4.148,821,4.148,822,4.148,823,4.148,824,5.046,825,6.067,826,4.148,827,4.148,828,4.148,829,5.438,830,4.148,831,5.046,832,4.148,833,4.148,834,4.148,835,4.148,836,4.148,837,4.148,838,4.148,839,4.148,840,5.046,841,4.148,842,4.148,843,4.148,844,4.148,845,4.148,846,5.046,847,5.046,848,4.148,849,4.148,850,4.148,851,4.148,852,4.148,853,4.148,854,4.148,855,4.148,856,4.148,857,4.148,858,4.148,859,4.148,860,4.148,861,4.148,862,4.148,863,4.148,864,4.148,865,4.148,866,4.148,867,4.148,868,4.148,869,4.148,870,4.148,871,4.148,872,4.148]],["title/modules.html",[639,2.955]],["body/modules.html",[29,0.034,323,0.034,324,0.034,373,3.438,638,2.691,639,3.438,873,4.839,874,4.839,875,4.839]],["title/overview.html",[876,3.433]],["body/overview.html",[2,2.292,29,0.036,113,2.249,323,0.033,324,0.033,326,1.396,398,2.292,609,2.869,637,3.263,638,3.314,640,3.349,641,3.791,642,3.791,643,3.791,644,4.426,645,3.791,646,3.263,758,4.687,798,3.791,876,3.791,877,4.593]],["title/properties.html",[31,0.666,715,2.13]],["body/properties.html",[11,0.328,29,0.037,31,0.86,323,0.034,324,0.034,764,3.927,878,4.757,879,4.757,880,4.757,881,4.757,882,4.757,883,4.757,884,4.757,885,4.757]],["title/miscellaneous/typealiases.html",[729,1.288,886,3.685]],["body/miscellaneous/typealiases.html",[1,1.146,6,0.509,11,0.226,29,0.035,30,0.859,31,0.681,35,1.069,39,1.446,42,0.989,51,0.723,53,1.446,73,0.402,101,0.764,105,1.594,124,2.228,125,1.536,143,2.6,162,1.882,168,2.645,169,0.94,210,1.23,214,1.536,323,0.029,324,0.029,329,1.508,335,1.924,349,2.645,350,2.355,365,3.926,400,3.926,428,3.926,457,1.446,458,1.536,472,2.373,477,3.254,481,2.645,482,2.645,483,2.141,484,3.379,486,1.697,491,2.971,492,2.645,502,3.379,516,1.446,518,2.373,519,1.536,522,3.113,523,2.679,524,2.679,536,3.379,692,3.254,693,3.379,729,1.882,731,4.241,887,3.771,888,5.471,889,5.471,890,5.21,891,5.471,892,4.756,893,3.771,894,3.771,895,3.771,896,3.771,897,3.771,898,3.771,899,3.771,900,4.756,901,4.756,902,4.756,903,3.771,904,3.771,905,3.771,906,3.771,907,3.771,908,4.756]],["title/miscellaneous/variables.html",[729,1.288,909,3.041]],["body/miscellaneous/variables.html",[1,1.157,6,0.51,7,0.539,8,2.988,10,2.304,11,0.339,15,3.141,16,3.141,19,1.157,20,1.157,22,1.405,29,0.039,51,0.679,56,2.61,63,1.55,70,1.55,73,0.405,75,1.55,100,2.822,101,0.967,105,2.03,158,1.72,169,0.948,214,1.55,216,1.603,218,3.398,219,3.141,220,2.116,273,2.351,323,0.029,324,0.029,335,1.405,349,2.116,350,2.377,351,3.398,430,3.428,457,1.157,458,1.55,459,3.398,460,1.55,493,1.712,494,2.703,496,2.988,500,2.377,514,1.55,516,1.157,519,1.55,631,2.116,655,3.398,682,3.398,706,4.318,708,3.948,709,4.318,729,1.899,731,4.102,909,3.141,910,3.805,911,3.805]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":227,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["0.0.0",{"_index":879,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":758,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":877,"title":{},"body":{"overview.html":{}}}],["100",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["13.3.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":759,"title":{},"body":{"index.html":{}}}],["2.3.1",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":815,"title":{},"body":{"license.html":{}}}],["3",{"_index":776,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["34/34",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["38/38",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":788,"title":{},"body":{"index.html":{}}}],["4/4",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":798,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5/5",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["52/52",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":806,"title":{},"body":{"index.html":{}}}],["6.6.6",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["_action",{"_index":332,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["_actionid",{"_index":229,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_arialabel",{"_index":243,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_blank",{"_index":892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["_parent",{"_index":900,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["_self",{"_index":889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["_setparent(parent",{"_index":314,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_top",{"_index":902,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["_unsetparent",{"_index":320,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["above",{"_index":845,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":30,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":213,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":327,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":8,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract.ts:102",{"_index":139,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:106",{"_index":135,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:111",{"_index":140,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:115",{"_index":132,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:120",{"_index":136,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:124",{"_index":118,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:130",{"_index":134,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:136",{"_index":121,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:189",{"_index":103,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:226",{"_index":198,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:272",{"_index":142,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:285",{"_index":146,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:298",{"_index":147,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:307",{"_index":174,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:314",{"_index":184,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:321",{"_index":179,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:330",{"_index":193,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:338",{"_index":170,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:347",{"_index":188,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:355",{"_index":154,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:364",{"_index":191,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:372",{"_index":166,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:379",{"_index":197,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:387",{"_index":171,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:397",{"_index":195,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:405",{"_index":186,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:412",{"_index":183,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:419",{"_index":153,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:427",{"_index":150,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:435",{"_index":181,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:442",{"_index":182,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:451",{"_index":157,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:458",{"_index":167,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":534,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessed",{"_index":800,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":548,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":568,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":11,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":607,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":1,"title":{"classes/ActionAbstract.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:102",{"_index":381,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:106",{"_index":379,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:108",{"_index":402,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["actionabstract:111",{"_index":382,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:115",{"_index":378,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:120",{"_index":380,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:124",{"_index":377,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:141",{"_index":383,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["actionabstract:149",{"_index":386,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["actionabstract:272",{"_index":404,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:285",{"_index":405,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:298",{"_index":406,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:307",{"_index":413,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:314",{"_index":418,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:321",{"_index":414,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:330",{"_index":422,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:338",{"_index":411,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:347",{"_index":420,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:355",{"_index":407,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:364",{"_index":421,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:372",{"_index":409,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:379",{"_index":424,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:387",{"_index":412,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:397",{"_index":423,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:405",{"_index":419,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:412",{"_index":417,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:419",{"_index":471,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:42",{"_index":463,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:427",{"_index":470,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:43",{"_index":372,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["actionabstract:435",{"_index":415,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:442",{"_index":416,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:451",{"_index":408,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:458",{"_index":410,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:47",{"_index":462,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:48",{"_index":369,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["actionabstract:91",{"_index":465,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:95",{"_index":677,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actionabstractcomponentimpl",{"_index":210,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":211,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":212,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionanchor",{"_index":349,"title":{"classes/ActionAnchor.html":{}},"body":{"classes/ActionAnchor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionanchorcomponentimpl",{"_index":428,"title":{},"body":{"classes/ActionAnchor.html":{},"miscellaneous/typealiases.html":{}}}],["actionanchoroptions",{"_index":365,"title":{},"body":{"classes/ActionAnchor.html":{},"miscellaneous/typealiases.html":{}}}],["actionbutton",{"_index":457,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":634,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":484,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":472,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":473,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":460,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actioncustom",{"_index":27,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actioncustomoptions",{"_index":49,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actionfactory.createbutton",{"_index":356,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":357,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{}}}],["actionfactory.createtoggle",{"_index":659,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actionfactory.createtoggle().check",{"_index":660,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actiongroup",{"_index":169,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":635,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":492,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":490,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":493,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":501,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(action",{"_index":586,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":547,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":113,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":504,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodule",{"_index":638,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":216,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":222,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":178,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.destroyed",{"_index":180,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.inactive",{"_index":185,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actiontoggle",{"_index":516,"title":{"classes/ActionToggle.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":636,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":693,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":518,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":681,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":514,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":77,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["active",{"_index":23,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":793,"title":{},"body":{"index.html":{}}}],["add",{"_index":774,"title":{},"body":{"index.html":{}}}],["added",{"_index":338,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["advanced",{"_index":760,"title":{},"body":{"index.html":{}}}],["again",{"_index":288,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["aliases",{"_index":887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":145,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["always",{"_index":533,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ancestor",{"_index":906,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ancestors",{"_index":907,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anchor",{"_index":385,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.model",{"_index":429,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.model.ts",{"_index":888,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["anchor.ts",{"_index":351,"title":{},"body":{"classes/ActionAnchor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["anchor.ts:115",{"_index":391,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:124",{"_index":395,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:133",{"_index":401,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:157",{"_index":387,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:53",{"_index":374,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:57",{"_index":375,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:61",{"_index":376,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor.ts:74",{"_index":366,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchor/action",{"_index":350,"title":{},"body":{"classes/ActionAnchor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["anchors",{"_index":455,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["anchortarget",{"_index":400,"title":{},"body":{"classes/ActionAnchor.html":{},"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":838,"title":{},"body":{"license.html":{}}}],["angular",{"_index":163,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["angular/animations",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":652,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":201,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":425,"title":{},"body":{"classes/ActionAnchor.html":{},"dependencies.html":{}}}],["anyaction",{"_index":335,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":738,"title":{},"body":{"index.html":{}}}],["application",{"_index":753,"title":{},"body":{"index.html":{}}}],["approach",{"_index":619,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropriate",{"_index":771,"title":{},"body":{"index.html":{}}}],["aria",{"_index":241,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["aria/#aria",{"_index":342,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["arialabel",{"_index":75,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":870,"title":{},"body":{"license.html":{}}}],["array",{"_index":494,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from(new",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":110,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["assigned",{"_index":578,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associate",{"_index":780,"title":{},"body":{"index.html":{}}}],["associated",{"_index":826,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":530,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":861,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":573,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["available",{"_index":809,"title":{},"body":{"index.html":{}}}],["back",{"_index":290,"title":{},"body":{"classes/ActionAbstract.html":{},"index.html":{}}}],["based",{"_index":755,"title":{},"body":{"index.html":{}}}],["basic",{"_index":352,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"index.html":{}}}],["behaves",{"_index":901,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["behaviors",{"_index":14,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject",{"_index":202,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionToggle.html":{}}}],["behaviorsubject(!!this.options.checked",{"_index":683,"title":{},"body":{"classes/ActionToggle.html":{}}}],["behaviorsubject('href",{"_index":435,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["behaviorsubject('routerlink",{"_index":438,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["behaviorsubject(actionstate.inactive",{"_index":259,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(arialabel",{"_index":257,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(disabled",{"_index":255,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(icon",{"_index":251,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(options.target",{"_index":441,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["behaviorsubject(title",{"_index":249,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(visible",{"_index":253,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["belongs",{"_index":244,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["between",{"_index":16,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["bind",{"_index":807,"title":{},"body":{"index.html":{}}}],["binding",{"_index":396,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["boolean",{"_index":175,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bridge",{"_index":43,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["browse",{"_index":875,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":373,"title":{},"body":{"classes/ActionAnchor.html":{},"dependencies.html":{},"modules.html":{}}}],["browsers",{"_index":897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["browsing",{"_index":890,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["build",{"_index":739,"title":{},"body":{"index.html":{}}}],["button",{"_index":339,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.component",{"_index":782,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":474,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":477,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":469,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":459,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:52",{"_index":461,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":458,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":620,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":814,"title":{},"body":{"license.html":{}}}],["callback",{"_index":483,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":539,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":466,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["case",{"_index":748,"title":{},"body":{"index.html":{}}}],["change",{"_index":130,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["change/update",{"_index":567,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":37,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["charge",{"_index":750,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":661,"title":{},"body":{"classes/ActionToggle.html":{},"index.html":{}}}],["checkbox",{"_index":657,"title":{},"body":{"classes/ActionToggle.html":{}}}],["checkbox.component",{"_index":796,"title":{},"body":{"index.html":{}}}],["checked",{"_index":631,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":344,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":496,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":864,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{},"overview.html":{}}}],["clean",{"_index":617,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":604,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["click",{"_index":468,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["cluster_actionoutletmodule",{"_index":641,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":643,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":642,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":616,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["combination",{"_index":199,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["coming",{"_index":480,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":767,"title":{},"body":{"index.html":{}}}],["comming",{"_index":346,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":651,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":566,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":529,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":149,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["component",{"_index":50,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["component's",{"_index":563,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":596,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":551,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":585,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":329,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":844,"title":{},"body":{"license.html":{}}}],["configure",{"_index":896,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connection",{"_index":871,"title":{},"body":{"license.html":{}}}],["const",{"_index":217,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":48,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["constructor(private",{"_index":802,"title":{},"body":{"index.html":{}}}],["constructor(viewcontainerref",{"_index":549,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":564,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":495,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["context",{"_index":891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["contract",{"_index":867,"title":{},"body":{"license.html":{}}}],["copies",{"_index":840,"title":{},"body":{"license.html":{}}}],["copy",{"_index":824,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":813,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":694,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":106,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["createbutton",{"_index":505,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":508,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":556,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":499,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["creategroup",{"_index":506,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":511,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":507,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":513,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":232,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["current",{"_index":143,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":313,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["custom",{"_index":38,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["cycle",{"_index":276,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["damages",{"_index":865,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":78,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deal",{"_index":828,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":872,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":648,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["default",{"_index":105,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default's",{"_index":789,"title":{},"body":{"index.html":{}}}],["defaultabstractoptions",{"_index":218,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":430,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":682,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":524,"title":{},"body":{"interfaces/ActionOutlet.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":102,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["defines",{"_index":571,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":176,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{}}}],["demo",{"_index":757,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":640,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":554,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":196,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["derived",{"_index":34,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["desabled",{"_index":236,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["descendant",{"_index":537,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":79,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["destroyed",{"_index":138,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":574,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":569,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["determines",{"_index":388,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["development",{"_index":880,"title":{},"body":{"properties.html":{}}}],["dinamically",{"_index":531,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":398,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionAnchor.html":{},"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":525,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":577,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disable",{"_index":80,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["disabled",{"_index":22,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distinctuntilchanged",{"_index":205,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["distribute",{"_index":836,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":695,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doen",{"_index":131,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["dom",{"_index":161,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["dropdown",{"_index":500,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":723,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":18,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["each",{"_index":17,"title":{},"body":{"classes/ActionAbstract.html":{},"index.html":{}}}],["easy",{"_index":737,"title":{},"body":{"index.html":{}}}],["element",{"_index":340,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{}}}],["empty",{"_index":371,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["enable",{"_index":81,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["enabled",{"_index":152,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["end",{"_index":749,"title":{},"body":{"index.html":{}}}],["enum",{"_index":221,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["enumerations",{"_index":730,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":593,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":565,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["event",{"_index":343,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":25,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["examplebuttoncomponent",{"_index":781,"title":{},"body":{"index.html":{}}}],["examplecheckboxcomponent",{"_index":795,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":797,"title":{},"body":{"index.html":{}}}],["examplegroupcomponent",{"_index":783,"title":{},"body":{"index.html":{}}}],["examplemodule",{"_index":775,"title":{},"body":{"index.html":{}}}],["exampletogglecomponent",{"_index":785,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["exports",{"_index":649,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["exposed",{"_index":601,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":853,"title":{},"body":{"license.html":{}}}],["extend",{"_index":104,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":10,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":486,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":28,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["external",{"_index":389,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["factory",{"_index":503,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":56,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["false).pipe",{"_index":685,"title":{},"body":{"classes/ActionToggle.html":{}}}],["fetch",{"_index":579,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":827,"title":{},"body":{"license.html":{}}}],["filter",{"_index":206,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["finish",{"_index":240,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fire",{"_index":35,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":624,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["firecustom",{"_index":71,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fires",{"_index":238,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["first",{"_index":488,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":858,"title":{},"body":{"license.html":{}}}],["fly",{"_index":532,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":370,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["forced",{"_index":111,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["forcedcomponent",{"_index":234,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["free",{"_index":821,"title":{},"body":{"license.html":{}}}],["front",{"_index":752,"title":{},"body":{"index.html":{}}}],["function",{"_index":908,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functional",{"_index":613,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["functionality",{"_index":656,"title":{},"body":{"classes/ActionToggle.html":{}}}],["furnished",{"_index":843,"title":{},"body":{"license.html":{}}}],["getactionoutlet",{"_index":581,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getarialabel",{"_index":82,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getcomponenttype",{"_index":545,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":575,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":83,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["geticon",{"_index":84,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getparent",{"_index":85,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getter",{"_index":583,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":732,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":86,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["goal",{"_index":735,"title":{},"body":{"index.html":{}}}],["going",{"_index":112,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["granted",{"_index":820,"title":{},"body":{"license.html":{}}}],["group",{"_index":215,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.component",{"_index":784,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":517,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":491,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":214,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":270,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handleactivatestate(observable",{"_index":291,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handled",{"_index":233,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"directives/ActionOutletDirective.html":{}}}],["handlelivecycle(observable",{"_index":283,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handlelivecycledistinct(observable",{"_index":280,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["happens",{"_index":744,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":819,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":141,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide",{"_index":87,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide/show",{"_index":754,"title":{},"body":{"index.html":{}}}],["highest",{"_index":904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["holders",{"_index":862,"title":{},"body":{"license.html":{}}}],["holding",{"_index":123,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionToggle.html":{}}}],["homepage",{"_index":881,"title":{},"body":{"properties.html":{}}}],["hook",{"_index":603,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["href",{"_index":358,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["html",{"_index":454,"title":{},"body":{"classes/ActionAnchor.html":{},"directives/ActionOutletDirective.html":{}}}],["https",{"_index":355,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["https://github.com/klemenoslaj/ng",{"_index":884,"title":{},"body":{"properties.html":{}}}],["https://klemenoslaj.github.io/ng",{"_index":882,"title":{},"body":{"properties.html":{}}}],["https://www.w3.org/tr/wai",{"_index":341,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["icon",{"_index":20,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":225,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["implement",{"_index":124,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":40,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implementations",{"_index":12,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["implemented",{"_index":33,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionOutlet.html":{}}}],["implementing",{"_index":331,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":541,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["implied",{"_index":854,"title":{},"body":{"license.html":{}}}],["import",{"_index":200,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["imports",{"_index":654,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["inactive",{"_index":137,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":848,"title":{},"body":{"license.html":{}}}],["including",{"_index":831,"title":{},"body":{"license.html":{}}}],["increment",{"_index":226,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":368,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["initial",{"_index":337,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":498,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["injectable",{"_index":609,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":610,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":555,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":164,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["injector.get(action.constructor",{"_index":608,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":334,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":546,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["install",{"_index":762,"title":{},"body":{"index.html":{}}}],["instance",{"_index":230,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":591,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instances",{"_index":799,"title":{},"body":{"index.html":{}}}],["instantiate",{"_index":367,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["instead",{"_index":162,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":325,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":326,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"overview.html":{}}}],["internal",{"_index":223,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["internally",{"_index":235,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":553,"title":{},"body":{"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["isactive",{"_index":88,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ischecked",{"_index":662,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isdestroyed",{"_index":89,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isdisabled",{"_index":90,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isenabled",{"_index":91,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isexternallink",{"_index":361,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["ishidden",{"_index":92,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isinactive",{"_index":93,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isunchecked",{"_index":663,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isvisible",{"_index":94,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["it's",{"_index":125,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keep",{"_index":615,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":852,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":816,"title":{},"body":{"license.html":{}}}],["label",{"_index":242,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["leverage",{"_index":109,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["liability",{"_index":866,"title":{},"body":{"license.html":{}}}],["liable",{"_index":863,"title":{},"body":{"license.html":{}}}],["license",{"_index":811,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":832,"title":{},"body":{"license.html":{}}}],["limited",{"_index":855,"title":{},"body":{"license.html":{}}}],["line",{"_index":768,"title":{},"body":{"index.html":{}}}],["link",{"_index":353,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["link/href",{"_index":432,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["live",{"_index":275,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["livecycle",{"_index":237,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["manually",{"_index":403,"title":{},"body":{"classes/ActionAnchor.html":{},"directives/ActionOutletDirective.html":{}}}],["map",{"_index":427,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["map(checked",{"_index":686,"title":{},"body":{"classes/ActionToggle.html":{}}}],["matches",{"_index":239,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["matching",{"_index":324,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":746,"title":{},"body":{"index.html":{}}}],["menus",{"_index":740,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":857,"title":{},"body":{"license.html":{}}}],["merge",{"_index":426,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["merged",{"_index":231,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["merging",{"_index":126,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["metadata",{"_index":543,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":66,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["methods",{"_index":76,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["miscellaneous",{"_index":729,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":812,"title":{},"body":{"license.html":{}}}],["modify",{"_index":834,"title":{},"body":{"license.html":{}}}],["module",{"_index":637,"title":{"modules/ActionOutletModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["module,but",{"_index":792,"title":{},"body":{"index.html":{}}}],["modules",{"_index":639,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["more",{"_index":348,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["natural",{"_index":747,"title":{},"body":{"index.html":{}}}],["need",{"_index":32,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["needs",{"_index":68,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["never",{"_index":203,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["next",{"_index":482,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":763,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":734,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":650,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":602,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":803,"title":{},"body":{"index.html":{}}}],["nide",{"_index":172,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["non",{"_index":45,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["noninfringement",{"_index":860,"title":{},"body":{"license.html":{}}}],["noop",{"_index":384,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["notice",{"_index":846,"title":{},"body":{"license.html":{}}}],["notification",{"_index":670,"title":{},"body":{"classes/ActionToggle.html":{}}}],["notified",{"_index":743,"title":{},"body":{"index.html":{}}}],["notifies",{"_index":119,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notify",{"_index":189,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notifying",{"_index":129,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["npm",{"_index":765,"title":{},"body":{"index.html":{}}}],["null",{"_index":333,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{}}}],["observable",{"_index":36,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observable.pipe(takeuntil(this.finish",{"_index":284,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["observables",{"_index":128,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["obtaining",{"_index":823,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":542,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":536,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["oninit",{"_index":801,"title":{},"body":{"index.html":{}}}],["open",{"_index":898,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["optional",{"_index":116,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":101,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.href",{"_index":436,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["options.routerlink",{"_index":439,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["order",{"_index":614,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oservable",{"_index":478,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":817,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":869,"title":{},"body":{"license.html":{}}}],["out",{"_index":646,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":764,"title":{},"body":{"index.html":{},"properties.html":{}}}],["outlet.directive",{"_index":653,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":526,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:106",{"_index":552,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:143",{"_index":576,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":559,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:87",{"_index":582,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:95",{"_index":570,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.git",{"_index":885,"title":{},"body":{"properties.html":{}}}],["outlet.model",{"_index":336,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":502,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":509,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":512,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":515,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":647,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":611,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":625,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":627,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":629,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/core",{"_index":773,"title":{},"body":{"index.html":{}}}],["over",{"_index":751,"title":{},"body":{"index.html":{}}}],["override",{"_index":510,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":347,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":876,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":715,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":246,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parent",{"_index":168,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/typealiases.html":{}}}],["particular",{"_index":745,"title":{},"body":{"index.html":{},"license.html":{}}}],["pause",{"_index":279,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["paused",{"_index":272,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["pausing",{"_index":286,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["permission",{"_index":818,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":756,"title":{},"body":{"index.html":{}}}],["permit",{"_index":841,"title":{},"body":{"license.html":{}}}],["person",{"_index":822,"title":{},"body":{"license.html":{}}}],["persons",{"_index":842,"title":{},"body":{"license.html":{}}}],["pointing",{"_index":779,"title":{},"body":{"index.html":{}}}],["portions",{"_index":850,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":742,"title":{},"body":{"index.html":{}}}],["possible",{"_index":278,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["previously",{"_index":173,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["prevously",{"_index":151,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["private",{"_index":107,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["produce",{"_index":668,"title":{},"body":{"classes/ActionToggle.html":{}}}],["project",{"_index":772,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":731,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":580,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["property",{"_index":122,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["protected",{"_index":47,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["provide",{"_index":736,"title":{},"body":{"index.html":{}}}],["provided",{"_index":158,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":632,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":777,"title":{},"body":{"index.html":{}}}],["provides",{"_index":13,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["providing",{"_index":561,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":127,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["publish",{"_index":835,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":859,"title":{},"body":{"license.html":{}}}],["reactive",{"_index":44,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":497,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":479,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":810,"title":{},"body":{"index.html":{}}}],["reference",{"_index":274,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":487,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":535,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendered",{"_index":562,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renderer",{"_index":808,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":528,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering.provide",{"_index":778,"title":{},"body":{"index.html":{}}}],["renders",{"_index":245,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["repository",{"_index":883,"title":{},"body":{"properties.html":{}}}],["represent",{"_index":160,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["required",{"_index":219,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":645,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":557,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":558,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":830,"title":{},"body":{"license.html":{}}}],["results",{"_index":323,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":70,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":155,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["rights",{"_index":833,"title":{},"body":{"license.html":{}}}],["root",{"_index":633,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["router",{"_index":397,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["routerlink",{"_index":359,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["runtime",{"_index":741,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":204,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":209,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["same",{"_index":791,"title":{},"body":{"index.html":{}}}],["second",{"_index":669,"title":{},"body":{"classes/ActionToggle.html":{}}}],["selector",{"_index":544,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":839,"title":{},"body":{"license.html":{}}}],["service",{"_index":612,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":148,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["set(children",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":584,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["setarialabel",{"_index":95,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setarialabel(arialabel",{"_index":187,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["sethref",{"_index":362,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["sethref(href",{"_index":390,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["seticon",{"_index":96,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["seticon('icon",{"_index":623,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":190,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setrouterlink",{"_index":363,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["setrouterlink(routerlink",{"_index":393,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["settarget",{"_index":364,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["settarget(target",{"_index":399,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["setter",{"_index":560,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settings",{"_index":790,"title":{},"body":{"index.html":{}}}],["settitle",{"_index":97,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["settitle('action",{"_index":622,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('example",{"_index":805,"title":{},"body":{"index.html":{}}}],["settitle(title",{"_index":192,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility",{"_index":98,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility(visibility",{"_index":194,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["shall",{"_index":847,"title":{},"body":{"license.html":{}}}],["shared",{"_index":15,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["shere",{"_index":330,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":522,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["shouldpause",{"_index":277,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["shouldpause).pipe(distinctuntilchanged",{"_index":282,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["show",{"_index":99,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["slider",{"_index":658,"title":{},"body":{"classes/ActionToggle.html":{}}}],["software",{"_index":825,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specific",{"_index":39,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["started",{"_index":733,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":24,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["state(`active",{"_index":271,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["statements",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":667,"title":{},"body":{"classes/ActionToggle.html":{}}}],["step",{"_index":761,"title":{},"body":{"index.html":{}}}],["storing",{"_index":431,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["string",{"_index":156,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["structural",{"_index":527,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":41,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"license.html":{}}}],["subjects",{"_index":108,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["sublicense",{"_index":837,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":489,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":120,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":481,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":133,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["substantial",{"_index":849,"title":{},"body":{"license.html":{}}}],["super",{"_index":433,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["support",{"_index":873,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":874,"title":{},"body":{"modules.html":{}}}],["switches",{"_index":289,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap",{"_index":207,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["tab",{"_index":894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["table",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":208,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["target",{"_index":360,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["template",{"_index":540,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":354,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":345,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["that’s",{"_index":905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["this._arialabel",{"_index":256,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this._arialabel$.getvalue",{"_index":302,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this._arialabel$.next(arialabel",{"_index":301,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.action",{"_index":589,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":600,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":590,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":606,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":626,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":628,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggle",{"_index":630,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":605,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":621,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.activate",{"_index":318,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.arialabel",{"_index":264,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.changes",{"_index":58,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":597,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":587,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance._action",{"_index":599,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.custom",{"_index":54,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom$.pipe(map(custom",{"_index":65,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom.next(math.random",{"_index":72,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.deactivate",{"_index":322,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disable",{"_index":316,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled",{"_index":254,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":64,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.disabled.getvalue",{"_index":311,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(false",{"_index":309,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(true",{"_index":310,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.enable",{"_index":321,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.finish",{"_index":260,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.fire",{"_index":52,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":476,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire.getvalue",{"_index":691,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next",{"_index":69,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.fire.next(!this.fire.getvalue",{"_index":688,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(false",{"_index":690,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(true",{"_index":689,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.pipe(map(checked",{"_index":687,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.forcedcomponent",{"_index":269,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.getcomponenttype(this.action",{"_index":594,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":538,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggle",{"_index":804,"title":{},"body":{"index.html":{}}}],["this.handleactivatestate(source",{"_index":285,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle",{"_index":445,"title":{},"body":{"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.handlelivecycle(observable",{"_index":281,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(observable.merge",{"_index":59,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.custom.asobservable",{"_index":57,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":55,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.handlelivecycledistinct(this._arialabel$.asobservable",{"_index":265,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.disabled.asobservable",{"_index":267,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.fire.asobservable",{"_index":684,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.handlelivecycledistinct(this.href.asobservable",{"_index":442,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.handlelivecycledistinct(this.icon.asobservable",{"_index":263,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.routerlink.asobservable",{"_index":443,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.handlelivecycledistinct(this.target.asobservable",{"_index":444,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.handlelivecycledistinct(this.title.asobservable",{"_index":262,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.visible.asobservable",{"_index":266,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.href",{"_index":434,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.href$.pipe(map(href",{"_index":446,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.href.getvalue",{"_index":456,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.href.next(href",{"_index":449,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.href.next(null",{"_index":452,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.icon",{"_index":250,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon$.pipe(map(icon",{"_index":61,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.icon.getvalue",{"_index":304,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon.next(icon",{"_index":303,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.injector",{"_index":595,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.isdestroyed",{"_index":293,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options",{"_index":247,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options.callback",{"_index":475,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.parent",{"_index":312,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isactive",{"_index":317,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isdisabled",{"_index":315,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.routerlink",{"_index":437,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.routerlink$.pipe(map(routerlink",{"_index":447,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.routerlink.next(null",{"_index":450,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.routerlink.next(routerlink",{"_index":451,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.state",{"_index":258,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.asobservable().pipe(distinctuntilchanged",{"_index":268,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.complete",{"_index":297,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.getvalue",{"_index":298,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.active",{"_index":294,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.destroyed",{"_index":296,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.inactive",{"_index":295,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.pipe(filter(state",{"_index":261,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.pipe(switchmap(state",{"_index":292,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.target",{"_index":440,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.target$.pipe(map(target",{"_index":448,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.target.next(target",{"_index":453,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["this.title",{"_index":248,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title$.pipe(map(title",{"_index":60,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.title.getvalue",{"_index":300,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title.next(title",{"_index":299,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.viewcontainerref.clear",{"_index":588,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":598,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible",{"_index":252,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible$.pipe(map(visible",{"_index":62,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.visible.getvalue",{"_index":308,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(false",{"_index":306,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(true",{"_index":305,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(visibility",{"_index":307,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["throw",{"_index":592,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":19,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":521,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.check",{"_index":671,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.component",{"_index":786,"title":{},"body":{"index.html":{}}}],["toggle.ischecked",{"_index":673,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.isunchecked",{"_index":676,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.model",{"_index":520,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["toggle.model.ts",{"_index":692,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.trigger",{"_index":678,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts",{"_index":655,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle.ts:111",{"_index":666,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:127",{"_index":679,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:142",{"_index":672,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:154",{"_index":674,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:52",{"_index":665,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.uncheck",{"_index":680,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle/action",{"_index":519,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":770,"title":{},"body":{"index.html":{}}}],["tool.choose",{"_index":769,"title":{},"body":{"index.html":{}}}],["topmost",{"_index":903,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tort",{"_index":868,"title":{},"body":{"license.html":{}}}],["trigger",{"_index":67,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["triggered",{"_index":464,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":220,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":51,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":886,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":328,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":228,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["uncheck",{"_index":664,"title":{},"body":{"classes/ActionToggle.html":{}}}],["unchecked",{"_index":675,"title":{},"body":{"classes/ActionToggle.html":{}}}],["undefined",{"_index":165,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["underlying",{"_index":572,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uniquelly",{"_index":224,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["unless",{"_index":144,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["unset",{"_index":319,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["url",{"_index":392,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["urltree",{"_index":394,"title":{},"body":{"classes/ActionAnchor.html":{}}}],["use",{"_index":618,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":42,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["users",{"_index":895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["usevalue",{"_index":787,"title":{},"body":{"index.html":{}}}],["usually",{"_index":893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["value",{"_index":273,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":909,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":878,"title":{},"body":{"properties.html":{}}}],["via",{"_index":159,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["view",{"_index":467,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["viewcontainerref",{"_index":550,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":21,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["visible",{"_index":63,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":485,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":856,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":851,"title":{},"body":{"license.html":{}}}],["way",{"_index":523,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":287,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["whether",{"_index":177,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["window",{"_index":899,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["wish",{"_index":794,"title":{},"body":{"index.html":{}}}],["without",{"_index":829,"title":{},"body":{"license.html":{}}}],["world",{"_index":46,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["yarn",{"_index":766,"title":{},"body":{"index.html":{}}}],["yes",{"_index":117,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionAnchor.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["zone.js",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":644,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActionAbstract.html":{"url":"classes/ActionAbstract.html","title":"class - ActionAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionAbstract is extended by all action implementations\nProvides all the behaviors, shared between each action\ne.g. title, icon, visibility, disabled, active state\nExample\nexport class ActionCustom extends ActionAbstract {\n// Abstract properties need to be implemented by derived class\nfire$: Observable;\nchanges$: Observable;\n// A custom observable, specific to this action implementation\ncustom$: Observable;\n\n// A custom subject that is used to bridge reactive and non reactive world\nprotected custom: Subject;\n\nconstructor(options: ActionCustomOptions,\ncomponent?: Type) {\nthis.fire = new Subject();\nthis.custom = new Subject();\n\nthis.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\nthis.custom$ = this.handleLivecycle(this.custom.asObservable());\nthis.changes$ = this.handleLivecycle(Observable.merge(\nthis.title$.pipe(map(title => ({ title }))),\nthis.icon$.pipe(map(icon => ({ icon }))),\nthis.visible$.pipe(map(visible => ({ visible }))),\nthis.disabled$.pipe(map(disabled => ({ disabled }))),\nthis.custom$.pipe(map(custom => ({ custom })))\n));\n}\n\n// Abstract method trigger needs to be implemented by every derived class\ntrigger(): this {\nthis.fire.next({ action: this });\nreturn this;\n}\n\n// A custom method to trigger custom subject and custom$ observable\nfireCustom(): this {\nthis.custom.next(Math.random());\nreturn this;\n}\n}\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: Options, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:189\n                            \n                        \n\n                \n                    \n                            Abstract action constructor. It will:\n\nExtend default options with derived default options and custom options\nCreate all private subjects that are used to leverage reactive world with non reactive\nCreate observable for each private subject\nAssign forced component, that is going to be used by ActionOutletDirective\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionAbstract\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ariaLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:124\n                        \n                    \n\n            \n                \n                    Observable that notifies subscribers when the ariaLabel changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        changes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:136\n                        \n                    \n\n            \n                \n                    Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        disabled$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:115\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when disabled state changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        fire$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:130\n                        \n                    \n\n            \n                \n                    Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        icon$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:106\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when icon changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:120\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:102\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when title changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visible$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:111\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:272\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivate\n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:285\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:298\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disable\n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:427\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:419\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaLabel\n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:355\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getForcedComponent\n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:451\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIcon\n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:372\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParent\n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:458\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:338\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:387\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:307\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDestroyed\n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:321\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:435\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:442\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHidden\n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:412\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInactive\n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:314\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:405\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAriaLabel\n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:347\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIcon\n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:364\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:330\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisibility\n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:397\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:379\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        trigger\n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:226\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, NEVER } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, takeUntil } from 'rxjs/operators';\n\nimport {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { ActionGroup } from '../action-group/action-group';\n\n/**\n * Default options for `ActionAbstract` - shared between **all** actions\n * Extended by provided options in action `constructor`\n */\nconst defaultAbstractOptions: Required = {\n  title: '',\n  ariaLabel: '',\n  icon: '',\n  visible: true,\n  disabled: false,\n};\n\n/**\n * The state of the action\n * Can be `Active`, `Inactive` or `Destroyed`\n */\nexport const enum ActionState {\n  Active,\n  Inactive,\n  Destroyed,\n}\n\n/**\n * @internal\n *\n * Used to uniquelly identify the action\n */\nlet increment = 0;\n\n/**\n * `ActionAbstract` is extended by **all** action implementations\n * Provides all the behaviors, shared between **each** action\n * *e.g. title, icon, visibility, disabled, active state*\n *\n * ## Example\n *\n```typescript\nexport class ActionCustom extends ActionAbstract {\n    // Abstract properties need to be implemented by derived class\n    fire$: Observable;\n    changes$: Observable;\n    // A custom observable, specific to this action implementation\n    custom$: Observable;\n\n    // A custom subject that is used to bridge reactive and non reactive world\n    protected custom: Subject;\n\n    constructor(options: ActionCustomOptions,\n                component?: Type) {\n        this.fire = new Subject();\n        this.custom = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.custom$ = this.handleLivecycle(this.custom.asObservable());\n        this.changes$ = this.handleLivecycle(Observable.merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled }))),\n            this.custom$.pipe(map(custom => ({ custom })))\n        ));\n    }\n\n    // Abstract method trigger needs to be implemented by every derived class\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n\n    // A custom method to trigger custom subject and custom$ observable\n    fireCustom(): this {\n        this.custom.next(Math.random());\n        return this;\n    }\n}\n```\n */\nexport abstract class ActionAbstract {\n  /**\n   * @internal\n   *\n   * Used to uniquelly identify the action\n   */\n  readonly _actionId = increment++;\n  /**\n   * `Observable` that notifies subscriptions when title changes\n   */\n  readonly title$: Observable;\n  /**\n   * `Observable` that notifies subscriptions when icon changes\n   */\n  readonly icon$: Observable;\n  /**\n   * `Observable` that notifies subscriptions when visibility state changes\n   * (visible or hidden)\n   */\n  readonly visible$: Observable;\n  /**\n   * `Observable` that notifies subscriptions when disabled state changes\n   */\n  readonly disabled$: Observable;\n  /**\n   * `Observable` that notifies subscriptions when action state changes\n   * e.g. `Active`, `Inactive`, `Destroyed`\n   */\n  readonly state$: Observable;\n  /**\n   * `Observable` that notifies subscribers when the ariaLabel changes.\n   */\n  readonly ariaLabel$: Observable;\n  /**\n   * **Abstract** property, holding `Observable`\n   * Each derived class **should** implement it's own `fire$` observable,\n   * with it's own specific implementation\n   */\n  abstract readonly fire$: Observable;\n  /**\n   * **Abstract** property, holding `Observable`\n   * Each derived class **should** implement it's own `changes$` observable,\n   * merging all public observables, notifying for every change doen to action\n   */\n  abstract readonly changes$: Observable;\n\n  /**\n   * Options of action instance\n   * **Merged** default options from derived class, default options from abstract class,\n   * and options provided on action creation to `constructor`\n   */\n  protected readonly options: Options;\n  /**\n   * `Component`, provided to action `constructor`\n   * Should be forced and used instead of component in `Injector`\n   * That is handled by `ActionOutletDirective`\n   */\n  protected readonly forcedComponent?: Type;\n  /**\n   * Title `BehaviorSubject`, used **internally** to notify on title change\n   * Used to leverage reactive world with non reactive\n   */\n  protected readonly title: BehaviorSubject;\n  /**\n   * Icon `BehaviorSubject`, used **internally** to notify on icon change\n   * Used to leverage reactive world with non reactive\n   */\n  protected readonly icon: BehaviorSubject;\n  /**\n   * Visibility `BehaviorSubject`, used **internally** to notify on visibility state change\n   * Used to leverage reactive world with non reactive\n   */\n  protected readonly visible: BehaviorSubject;\n  /**\n   * Desabled state `BehaviorSubject`, used **internally** to notify on disabled state change\n   * Used to leverage reactive world with non reactive\n   */\n  protected readonly disabled: BehaviorSubject;\n  /**\n   * Action livecycle state `BehaviorSubject`, used **internally** to notify on action state change\n   * Used to leverage reactive world with non reactive\n   */\n  protected readonly state: BehaviorSubject;\n  /**\n   * `Observable` that fires, when state matches `ActionState.Destroyed`\n   * Used to complete all **internal** subjects\n   */\n  protected readonly finish: Observable;\n  /**\n   * `BehaviorSubject`, used to notify subscribers on aria label changes.\n   */\n  protected readonly _ariaLabel$: BehaviorSubject;\n\n  /**\n   * Parent of current action. This is a parent action,\n   * to whom current action belongs to, and renders into\n   */\n  private parent?: ActionGroup;\n\n  /**\n   * Abstract action `constructor`. It will:\n   * - **Extend** default options with derived default options and custom options\n   * - **Create** all private subjects that are used to leverage reactive world with non reactive\n   * - **Create** observable for each private subject\n   * - **Assign** forced component, that is going to be used by `ActionOutletDirective`\n   *\n   * @param options Options for `ActionAbstract`\n   * @param component Optional custom `Component`\n   */\n  constructor(options: Options, component?: Type) {\n    const { title, icon, visible, disabled, ariaLabel } = (this.options = { ...defaultAbstractOptions, ...options });\n\n    this.title = new BehaviorSubject(title);\n    this.icon = new BehaviorSubject(icon);\n    this.visible = new BehaviorSubject(visible);\n    this.disabled = new BehaviorSubject(disabled);\n    this._ariaLabel$ = new BehaviorSubject(ariaLabel);\n    this.state = new BehaviorSubject(ActionState.Inactive);\n    this.finish = this.state.pipe(filter(state => state === ActionState.Destroyed));\n\n    this.title$ = this.handleLivecycleDistinct(this.title.asObservable());\n    this.icon$ = this.handleLivecycleDistinct(this.icon.asObservable());\n    this.ariaLabel$ = this.handleLivecycleDistinct(this._ariaLabel$.asObservable());\n    this.visible$ = this.handleLivecycleDistinct(this.visible.asObservable());\n    this.disabled$ = this.handleLivecycleDistinct(this.disabled.asObservable());\n    this.state$ = this.state.asObservable().pipe(distinctUntilChanged());\n\n    this.forcedComponent = component;\n  }\n\n  /**\n   * Abstract method trigger should be implemented by **each** derived class, in\n   * combination with `fire` subject and `fire$` observable\n   */\n  abstract trigger(): this;\n\n  /**\n   * Used **internally** to handle livecycle of observables\n   * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`),\n   * and will notify **only** when value or reference **changes**\n   *\n   * @param observable `Observable` to handle live cycle\n   * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n   */\n  protected handleLivecycleDistinct(observable: Observable, shouldPause?: boolean): Observable {\n    return this.handleLivecycle(observable, shouldPause).pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Used internally to handle livecycle of observables\n   * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`)\n   *\n   * @param observable `Observable` to handle live cycle\n   * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n   */\n  protected handleLivecycle(observable: Observable, shouldPause: boolean = true): Observable {\n    const source = observable.pipe(takeUntil(this.finish));\n\n    if (!shouldPause) {\n      return source;\n    }\n\n    return this.handleActivateState(source);\n  }\n\n  /**\n   * Used **internally** to handle pausing of observables\n   * Will deactivate observable, whenever state of the action changes to `Inactive`,\n   * and will activate observable again, when it switches back to `Active`\n   *\n   * @param observable `Observable` to handle pausing\n   */\n  protected handleActivateState(observable: Observable): Observable {\n    return this.state.pipe(switchMap(state => (state === ActionState.Inactive ? NEVER : observable)));\n  }\n\n  /**\n   * Will **activate** all observables in current action,\n   * **unless action is already destroyed**\n   */\n  activate(): this {\n    if (this.isDestroyed()) {\n      return this;\n    }\n\n    this.state.next(ActionState.Active);\n    return this;\n  }\n\n  /**\n   * Will **deactivate** all observables in current action,\n   * **unless action is already destroyed**\n   */\n  deactivate(): this {\n    if (this.isDestroyed()) {\n      return this;\n    }\n\n    this.state.next(ActionState.Inactive);\n    return this;\n  }\n\n  /**\n   * Will set action state to `Destroyed`, which will\n   * complete all observables\n   */\n  destroy(): this {\n    this.state.next(ActionState.Destroyed);\n    this.state.complete();\n    return this;\n  }\n\n  /**\n   * Returns boolean defining whether action has state `ActionState.Active`\n   */\n  isActive(): boolean {\n    return this.state.getValue() === ActionState.Active;\n  }\n\n  /**\n   * Returns boolean defining whether action has state `ActionState.Inactive`\n   */\n  isInactive(): boolean {\n    return this.state.getValue() === ActionState.Inactive;\n  }\n\n  /**\n   * Returns boolean defining whether action has state `ActionState.Destroyed`\n   */\n  isDestroyed(): boolean {\n    return this.state.getValue() === ActionState.Destroyed;\n  }\n\n  /**\n   * Will set the new title and notify all title subscriptions\n   *\n   * @param title The new action title\n   */\n  setTitle(title: string): this {\n    this.title.next(title);\n    return this;\n  }\n\n  /**\n   * Returns current action title\n   */\n  getTitle(): string {\n    return this.title.getValue();\n  }\n\n  /**\n   * Will set the new ariaLabel and notify all ariaLabel subscribers\n   *\n   * @param ariaLabel The new action title\n   */\n  setAriaLabel(ariaLabel: string): this {\n    this._ariaLabel$.next(ariaLabel);\n    return this;\n  }\n\n  /**\n   * Returns current action ariaLabel\n   */\n  getAriaLabel(): string {\n    return this._ariaLabel$.getValue();\n  }\n\n  /**\n   * Will set the new icon and notify all icon subscriptions\n   *\n   * @param icon The new action icon\n   */\n  setIcon(icon: string): this {\n    this.icon.next(icon);\n    return this;\n  }\n\n  /**\n   * Returns current action icon\n   */\n  getIcon(): string {\n    return this.icon.getValue();\n  }\n\n  /**\n   * Will show the action, **if previously hidden**\n   */\n  show(): this {\n    this.visible.next(true);\n    return this;\n  }\n\n  /**\n   * Will nide the action, **if previously visible**\n   */\n  hide(): this {\n    this.visible.next(false);\n    return this;\n  }\n\n  /**\n   * Will show or hide the action depending from the provided visibility boolean\n   *\n   * @param visibility The new visibility\n   */\n  setVisibility(visibility: boolean): this {\n    this.visible.next(visibility);\n    return this;\n  }\n\n  /**\n   * Returns boolean defining whether action is visible\n   */\n  isVisible(): boolean {\n    return this.visible.getValue();\n  }\n\n  /**\n   * Returns boolean defining whether action is hidden\n   */\n  isHidden(): boolean {\n    return !this.visible.getValue();\n  }\n\n  /**\n   * Will enable action, **if prevously disabled**\n   */\n  enable(): this {\n    this.disabled.next(false);\n    return this;\n  }\n\n  /**\n   * Will disable action, **if prevously enabled**\n   */\n  disable(): this {\n    this.disabled.next(true);\n    return this;\n  }\n\n  /**\n   * Returns boolean defining whether action is disabled\n   */\n  isDisabled(): boolean {\n    return this.disabled.getValue();\n  }\n\n  /**\n   * Returns boolean defining whether action is enabled\n   */\n  isEnabled(): boolean {\n    return !this.disabled.getValue();\n  }\n\n  /**\n   * Returns a `Component`, that is provided as forced component via action `constructor`\n   * This component should be used by `ActionOutletDirective`, to represent\n   * the action in DOM, instead the component, provided via Angular `Injector`\n   */\n  getForcedComponent(): Type | undefined {\n    return this.forcedComponent;\n  }\n\n  /**\n   * Returns current parent of the action\n   */\n  getParent(): ActionGroup | undefined {\n    return this.parent;\n  }\n\n  /**\n   * @internal\n   *\n   * **Internal** method to set parent of current action. It will:\n   * - **Set** parent, but only if currently not defined\n   * - **Disable** current action if parent is disabled\n   * - **Activate** current action if parent is active\n   */\n  _setParent(parent: ActionGroup): this {\n    if (this.parent === undefined) {\n      this.parent = parent;\n      if (this.parent.isDisabled()) {\n        this.disable();\n      }\n      if (this.parent.isActive()) {\n        this.activate();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @internal\n   *\n   * **Internal** method to unset parent of current action. It will:\n   * - **Set** parent to undefined\n   * - **Enable** current action\n   * - **Deactivate** current action\n   */\n  _unsetParent(): this {\n    this.parent = undefined;\n    this.enable();\n    this.deactivate();\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _action:     Action | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n  /**\n   * The derived action instance, as Input in angular component\n   */\n  _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n  /**\n   * Optional **initial** action title\n   */\n  readonly title?: string;\n  /**\n   * Optional **initial** action icon\n   */\n  readonly icon?: string;\n  /**\n   * Optional **initial** action visibility state\n   */\n  readonly visible?: boolean;\n  /**\n   * Optional **initial** action disabled state\n   */\n  readonly disabled?: boolean;\n  /**\n   * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n   */\n  readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n  /**\n   * The action instance, tha this event is comming from\n   * Should be overriden by derived interface with more specific action\n   */\n  readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n  /**\n   * The derived action instance, as Input in angular component\n   */\n  _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n  /**\n   * Optional **initial** action title\n   */\n  readonly title?: string;\n  /**\n   * Optional **initial** action icon\n   */\n  readonly icon?: string;\n  /**\n   * Optional **initial** action visibility state\n   */\n  readonly visible?: boolean;\n  /**\n   * Optional **initial** action disabled state\n   */\n  readonly disabled?: boolean;\n  /**\n   * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n   */\n  readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n  /**\n   * The action instance, tha this event is comming from\n   * Should be overriden by derived interface with more specific action\n   */\n  readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            ariaLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n  /**\n   * The derived action instance, as Input in angular component\n   */\n  _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n  /**\n   * Optional **initial** action title\n   */\n  readonly title?: string;\n  /**\n   * Optional **initial** action icon\n   */\n  readonly icon?: string;\n  /**\n   * Optional **initial** action visibility state\n   */\n  readonly visible?: boolean;\n  /**\n   * Optional **initial** action disabled state\n   */\n  readonly disabled?: boolean;\n  /**\n   * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n   */\n  readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n  /**\n   * The action instance, tha this event is comming from\n   * Should be overriden by derived interface with more specific action\n   */\n  readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionAnchor.html":{"url":"classes/ActionAnchor.html","title":"class - ActionAnchor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionAnchor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-anchor/action-anchor.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionAnchor used to create basic link\nExample\nconst button = new ActionAnchor({ title: 'Test', link: 'https://...' });Or\nconst button = actionFactory.createButton({ title: 'Test', link: 'https://...' });Or\nconst button = actionFactory.createButton().setTitle('Test');\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                href$\n                            \n                            \n                                    Readonly\n                                routerLink$\n                            \n                            \n                                    Readonly\n                                target$\n                            \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                isExternalLink\n                            \n                            \n                                setHref\n                            \n                            \n                                setRouterLink\n                            \n                            \n                                setTarget\n                            \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionAnchorOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-anchor/action-anchor.ts:74\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionAnchor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionAnchorOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionAnchor\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:48\n\n                        \n                    \n\n            \n                \n                    Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fire$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EMPTY\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:43\n\n                        \n                    \n\n            \n                \n                    EMPTY Observable as link is handled by the browser\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        href$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-anchor/action-anchor.ts:53\n                        \n                    \n\n            \n                \n                    Observable notifying subscribers of the change to the href\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        routerLink$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-anchor/action-anchor.ts:57\n                        \n                    \n\n            \n                \n                    Observable notifying subscribers of the change to the routerLink\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        target$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/core/src/lib/action-anchor/action-anchor.ts:61\n                        \n                    \n\n            \n                \n                    Observable notifying subscribers of the change to the target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ariaLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:124\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscribers when the ariaLabel changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        disabled$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:115\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when disabled state changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        icon$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:106\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when icon changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:120\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:102\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when title changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visible$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:111\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disable\n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:141\n\n                \n            \n\n\n            \n                \n                    Noop: cannot disable the anchor\n\n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:149\n\n                \n            \n\n\n            \n                \n                    Noop: cannot disable the anchor\n\n\n                    \n                        Returns :     this\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExternalLink\n                        \n                    \n                \n            \n            \n                \nisExternalLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-anchor/action-anchor.ts:157\n                \n            \n\n\n            \n                \n                    Determines if the link is external\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHref\n                        \n                    \n                \n            \n            \n                \nsetHref(href: string | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-anchor/action-anchor.ts:115\n                \n            \n\n\n            \n                \n                    Set the url for the anchor element\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    href\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRouterLink\n                        \n                    \n                \n            \n            \n                \nsetRouterLink(routerLink: UrlTree | string |  | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-anchor/action-anchor.ts:124\n                \n            \n\n\n            \n                \n                    Set the routerLink binding for router link directive\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerLink\n                                    \n                                            UrlTree | string |  | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTarget\n                        \n                    \n                \n            \n            \n                \nsetTarget(target: AnchorTarget)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-anchor/action-anchor.ts:133\n                \n            \n\n\n            \n                \n                    Set the target for the anchor element\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                AnchorTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:108\n\n                \n            \n\n\n            \n                \n                    Noop: cannot manually trigger the anchor\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:272\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivate\n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:285\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:298\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaLabel\n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getForcedComponent\n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:451\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIcon\n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:372\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParent\n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:458\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:338\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:307\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDestroyed\n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:321\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:435\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:442\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHidden\n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:412\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInactive\n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:314\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:405\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAriaLabel\n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIcon\n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:364\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:330\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisibility\n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:397\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:379\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { UrlTree } from '@angular/router';\nimport { Observable, merge, EMPTY, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionAnchorComponentImpl, ActionAnchorOptions, AnchorTarget } from './action-anchor.model';\n\n/**\n * Default options for `ActionAnchor`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions = {};\n\n/**\n * `ActionAnchor` used to create basic link\n *\n * ## Example\n *\n *\n *\n```typescript\nconst button = new ActionAnchor({ title: 'Test', link: 'https://...' });\n```\n *\n * **Or**\n *\n *\n```typescript\nconst button = actionFactory.createButton({ title: 'Test', link: 'https://...' });\n```\n *\n * **Or**\n *\n```typescript\nconst button = actionFactory.createButton().setTitle('Test');\n```\n */\nexport class ActionAnchor extends ActionAbstract {\n  /**\n   * `EMPTY Observable` as link is handled by the browser\n   */\n  readonly fire$ = EMPTY;\n  /**\n   * `Observable` notifies subscriptions on following changes:\n   * *title, icon, visibility, disabled*\n   */\n  readonly changes$: Observable;\n\n  /**\n   * `Observable` notifying subscribers of the change to the href\n   */\n  readonly href$: Observable;\n  /**\n   * `Observable` notifying subscribers of the change to the routerLink\n   */\n  readonly routerLink$: Observable;\n  /**\n   * `Observable` notifying subscribers of the change to the target\n   */\n  readonly target$: Observable;\n\n  /**\n   * Subject storing the link/href\n   */\n  protected href: BehaviorSubject;\n  /**\n   * Subject storing the routerLink\n   */\n  protected routerLink: BehaviorSubject;\n  /**\n   * Subject storing the target\n   */\n  protected target: BehaviorSubject;\n\n  /**\n   * Public `constructor` used to instantiate `ActionAnchor`\n   *\n   * @param options Options for `ActionAnchor`\n   * @param component Optional custom `Component`\n   */\n  constructor(options: ActionAnchorOptions = defaultButtonOptions, component?: Type) {\n    super({ ...defaultButtonOptions, ...options }, component);\n\n    this.href = new BehaviorSubject('href' in options ? options.href : null);\n    this.routerLink = new BehaviorSubject('routerLink' in options ? options.routerLink : null);\n    this.target = new BehaviorSubject(options.target ?? null);\n\n    this.href$ = this.handleLivecycleDistinct(this.href.asObservable(), false);\n    this.routerLink$ = this.handleLivecycleDistinct(this.routerLink.asObservable(), false);\n    this.target$ = this.handleLivecycleDistinct(this.target.asObservable(), false);\n    this.changes$ = this.handleLivecycle(\n      merge(\n        this.title$.pipe(map(title => { title })),\n        this.icon$.pipe(map(icon => { icon })),\n        this.visible$.pipe(map(visible => { visible })),\n        this.disabled$.pipe(map(disabled => { disabled })),\n        this.href$.pipe(map(href => { href })),\n        this.routerLink$.pipe(map(routerLink => { routerLink })),\n        this.target$.pipe(map(target => { target })),\n      ),\n    );\n  }\n\n  /**\n   * Noop: cannot manually trigger the anchor\n   */\n  trigger(): this {\n    return this;\n  }\n\n  /**\n   * Set the url for the anchor element\n   */\n  setHref(href: string | null) {\n    this.href.next(href);\n    this.routerLink.next(null);\n    return this;\n  }\n\n  /**\n   * Set the routerLink binding for router link directive\n   */\n  setRouterLink(routerLink: UrlTree | string | readonly string[] | null) {\n    this.routerLink.next(routerLink);\n    this.href.next(null);\n    return this;\n  }\n\n  /**\n   * Set the target for the anchor element\n   */\n  setTarget(target: AnchorTarget) {\n    this.target.next(target);\n    return this;\n  }\n\n  /**\n   * Noop: cannot disable the anchor\n   */\n  disable() {\n    // HTML Anchors cannot be disabled\n    return this;\n  }\n\n  /**\n   * Noop: cannot disable the anchor\n   */\n  enable() {\n    // HTML Anchors cannot be disabled\n    return this;\n  }\n\n  /**\n   * Determines if the link is external\n   */\n  isExternalLink() {\n    return this.href.getValue() !== null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\nconst button = new ActionButton({ title: 'Test' });Or\nconst button = actionFactory.createButton({ title: 'Test' });Or\nconst button = actionFactory.createButton().setTitle('Test');\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:47\n\n                        \n                    \n\n            \n                \n                    Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fire$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:42\n\n                        \n                    \n\n            \n                \n                    Observable notifying subscriptions whenever button is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ariaLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:124\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscribers when the ariaLabel changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        disabled$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:115\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when disabled state changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        icon$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:106\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when icon changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:120\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:102\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when title changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visible$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:111\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:91\n\n                \n            \n\n\n            \n                \n                    Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\nbutton.trigger();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:272\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivate\n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:285\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:298\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disable\n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:427\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:419\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaLabel\n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getForcedComponent\n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:451\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIcon\n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:372\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParent\n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:458\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:338\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:307\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDestroyed\n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:321\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:435\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:442\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHidden\n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:412\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInactive\n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:314\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:405\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAriaLabel\n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIcon\n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:364\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:330\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisibility\n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:397\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:379\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = {};\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n *\n *\n```typescript\nconst button = new ActionButton({ title: 'Test' });\n```\n *\n * **Or**\n *\n *\n```typescript\nconst button = actionFactory.createButton({ title: 'Test' });\n```\n *\n * **Or**\n *\n```typescript\nconst button = actionFactory.createButton().setTitle('Test');\n```\n */\nexport class ActionButton extends ActionAbstract {\n  /**\n   * `Observable` notifying subscriptions whenever button is triggered\n   */\n  readonly fire$: Observable;\n  /**\n   * `Observable` notifies subscriptions on following changes:\n   * *title, icon, visibility, disabled*\n   */\n  readonly changes$: Observable;\n\n  /**\n   * `Subject`, used to notify subscribers on action trigger\n   */\n  protected fire: Subject;\n\n  /**\n   * Public `constructor` used to instantiate `ActionButton`\n   *\n   * @param options Options for `ActionButton`\n   * @param component Optional custom `Component`\n   */\n  constructor(options: ActionButtonOptions = defaultButtonOptions, component?: Type) {\n    super({ ...defaultButtonOptions, ...options }, component);\n\n    this.fire = new Subject();\n\n    this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n    this.changes$ = this.handleLivecycle(\n      merge(\n        this.title$.pipe(map(title => { title })),\n        this.icon$.pipe(map(icon => { icon })),\n        this.visible$.pipe(map(visible => { visible })),\n        this.disabled$.pipe(map(disabled => { disabled })),\n      ),\n    );\n\n    if (this.options.callback) {\n      this.fire$.subscribe(this.options.callback);\n    }\n  }\n\n  /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n```typescript\nbutton.trigger();\n```\n     *\n     * @method trigger\n     */\n  trigger(): this {\n    this.fire.next({ action: this });\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n  /**\n   * Optional callback, that will be registered as first subscriber to `fire$` observable\n   */\n  readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n  /**\n   * The `ActionButton` instance, that this event is coming from\n   */\n  readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n  /**\n   * Optional callback, that will be registered as first subscriber to `fire$` observable\n   */\n  readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n  /**\n   * The `ActionButton` instance, that this event is coming from\n   */\n  readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n  /**\n   * The array, containing **children** actions\n   */\n  readonly children: ReadonlyArray;\n  /**\n   * Optional boolean defining whether group is **initially** created as dropdown\n   */\n  readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n  /**\n   * The `ActionGroup` instance, that this event is coming from\n   */\n  readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            children\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dropdown\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n  /**\n   * The array, containing **children** actions\n   */\n  readonly children: ReadonlyArray;\n  /**\n   * Optional boolean defining whether group is **initially** created as dropdown\n   */\n  readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n  /**\n   * The `ActionGroup` instance, that this event is coming from\n   */\n  readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createButton\n                                    \n                                \n                                \n                                    \n                                        createGroup\n                                    \n                                \n                                \n                                    \n                                        createToggle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createButton\n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createToggle\n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n  /**\n   * When implemented should create and return a new instance of `ActionButton` with default options and component\n   * @param options Should override the default options for `ActionButton`\n   * @param component Should override the default component for `ActionButton`\n   */\n  createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n  /**\n   * When implemented should create and return a new instance of `ActionGroup` with default options and component\n   * @param options Should override the default options for `ActionGroup`\n   * @param component Should override the default component for `ActionGroup`\n   */\n  createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n  /**\n   * When implemented should create and return a new instance of `ActionToggle` with default options and component\n   * @param options Should override the default options for `ActionToggle`\n   * @param component Should override the default component for `ActionToggle`\n   */\n  createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\nthis.group = new ActionGroup({\nchildren: [\nnew ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n})\n]\n});Template\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:106\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                \n                    \n                        Type :         AnyAction | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:95\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentType\n                        \n                    \n                \n            \n            \n                \ngetComponentType(action: AnyAction, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.directive.ts:143\n                \n            \n\n\n            \n                \n                    Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                AnyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action to get Component for\n\n                                    \n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Injector from current directive instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:87\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :         AnyAction | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action: AnyAction | undefined)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                            \n                                                                            AnyAction | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Injector,\n  Input,\n  OnDestroy,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n```typescript\n this.group = new ActionGroup({\n    children: [\n        new ActionButton({\n            title: 'Action Title',\n            icon: 'icon',\n            callback: callbackMethod\n         })\n    ]\n});\n```\n *\n * **Template**\n```html\n\n```\n */\n\n@Directive({\n  selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n  /**\n   * Action setter, providing action, to be rendered in the component's view container.\n   * *e.g. `ActionButton`, `ActionGroup`, etc.*\n   *\n   * On set, it will:\n   * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n   * - **Change/Update** the `Component` accordingly to the change detection\n   */\n  @Input() set actionOutlet(action: AnyAction | undefined) {\n    if (this.componentRef) {\n      this.viewContainerRef.clear();\n      this.componentRef = undefined;\n    }\n\n    if (this.action) {\n      this.action.destroy();\n    }\n\n    this.action = action;\n\n    if (this.action === undefined) {\n      return;\n    }\n\n    if (this.action instanceof ActionAbstract === false) {\n      throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n    }\n\n    const component = this.getComponentType(this.action, this.injector);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n    this.componentRef.instance._action = this.action.activate();\n  }\n\n  /**\n   * Getter for **internally** used action\n   */\n  get actionOutlet(): AnyAction | undefined {\n    return this.action;\n  }\n\n  /**\n   * Defines whether underlying child action instance will be destroyed automatically\n   * If `false`, destruction of action should be handled **MANUALLY**\n   */\n  @Input() actionOutletDestroy = true;\n\n  /**\n   * `Component` reference to the component, used by rendered action\n   */\n  private componentRef?: ComponentRef;\n\n  /**\n   * Action instance, used **internally** by the directive\n   * Should **never** be directly exposed\n   */\n  private action?: AnyAction;\n\n  /**\n   * Invoked by Angular with dependency injection\n   *\n   * @param viewContainerRef Used for Component creation via `.createComponent()`\n   * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n   */\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n  ) {}\n\n  /**\n   * Angular `ngOnDestroy` hook will:\n   * - **Destroy** provided @Input action\n   * - **Clear** the view container\n   */\n  ngOnDestroy(): void {\n    if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n      this.action.destroy();\n    }\n\n    this.viewContainerRef.clear();\n    this.action = undefined;\n    this.componentRef = undefined;\n  }\n\n  /**\n   * Will return the `Component` type for provided action\n   * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n   * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n   *\n   * @param action Action to get `Component` for\n   * @param injector `Injector` from current directive instance\n   */\n  getComponentType(action: AnyAction, injector: Injector): Type {\n    return action.getForcedComponent() || >injector.get(action.constructor);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\nconst buttonAction = new ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n});Can do\nconst buttonAction = this.actionOutletFactory.createButton()\n.setTitle('Action Title')\n.setIcon('icon')\n.fire$.subscribe(callbackMethod);\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createButton\n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionButton with default options and component\nExample:\nconst button = this.actionOutlet.createButton({ title: 'Test' });\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionGroup with default options and component\nExample:\nconst group = this.actionOutlet.createGroup({ dropdown: true });\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createToggle\n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionToggle with default options and component\nExample:\nconst toggle = this.actionOutlet.createToggle({ checked: true });\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n```typescript\nconst buttonAction = new ActionButton({\n    title: 'Action Title',\n    icon: 'icon',\n    callback: callbackMethod\n});\n```\n *\n * **Can do**\n```typescript\nconst buttonAction = this.actionOutletFactory.createButton()\n    .setTitle('Action Title')\n    .setIcon('icon')\n    .fire$.subscribe(callbackMethod);\n```\n */\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionOutletFactory implements ActionOutlet {\n  /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n```typescript\nconst button = this.actionOutlet.createButton({ title: 'Test' });\n```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n  createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n    return new ActionButton(options, component);\n  }\n\n  /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n```typescript\nconst group = this.actionOutlet.createGroup({ dropdown: true });\n```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n  createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n    return new ActionGroup(options, component);\n  }\n\n  /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n```typescript\nconst toggle = this.actionOutlet.createToggle({ checked: true });\n```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n  createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n    return new ActionToggle(options, component);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n  declarations: [ActionOutletDirective],\n  imports: [CommonModule],\n  exports: [ActionOutletDirective],\n})\nexport class ActionOutletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionToggle.html":{"url":"classes/ActionToggle.html","title":"class - ActionToggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionToggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionToggle used to create action with toggle functionality,\ne.g. checkbox, toggle slider\nExample\nconst toggle = new ActionToggle({ checked: true });Or\nconst toggle = actionFactory.createToggle({ checked: true });Or\nconst toggle = actionFactory.createToggle().check();\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                isChecked\n                            \n                            \n                                isUnchecked\n                            \n                            \n                                trigger\n                            \n                            \n                                uncheck\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionToggleOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-toggle/action-toggle.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionToggle\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionToggleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        changes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:47\n\n                        \n                    \n\n            \n                \n                    Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled, checked\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fire$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:42\n\n                        \n                    \n\n            \n                \n                    Observable notifying subscriptions on the change of checked state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ariaLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:124\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscribers when the ariaLabel changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        disabled$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:115\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when disabled state changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        icon$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:106\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when icon changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:120\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:102\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when title changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        visible$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         ActionAbstract\n\n                            \n                        \n                    \n                        \n                                Defined in         ActionAbstract:111\n\n                        \n                    \n\n            \n                \n                    Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:111\n                \n            \n\n\n            \n                \n                    Will set checked status to true\nIt will not produce second notification if already checked\nExample:\ntoggle.check();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:142\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is checked\nExample:\nconst isChecked = toggle.isChecked();\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUnchecked\n                        \n                    \n                \n            \n            \n                \nisUnchecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:154\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is unchecked\nExample:\nconst isUnchecked = toggle.isUnchecked();\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:95\n\n                \n            \n\n\n            \n                \n                    Will toggle current checked state when invoked\nShould be called in view component on click\nExample:\ntoggle.trigger();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uncheck\n                        \n                    \n                \n            \n            \n                \nuncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:127\n                \n            \n\n\n            \n                \n                    Will set checked status to false\nIt will not produce second notification if already unchecked\nExample:\ntoggle.uncheck();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activate\n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:272\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deactivate\n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:285\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:298\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disable\n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:427\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:419\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAriaLabel\n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getForcedComponent\n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:451\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIcon\n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:372\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParent\n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:458\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:338\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:307\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDestroyed\n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:321\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:435\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnabled\n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:442\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHidden\n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:412\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInactive\n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:314\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:405\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAriaLabel\n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setIcon\n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:364\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:330\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVisibility\n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:397\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:379\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionToggleComponentImpl, ActionToggleEvent, ActionToggleOptions } from './action-toggle.model';\n\n/**\n * Default options for `ActionToggle`\n * Extended by provided options in action `constructor`\n */\nconst defaultToggleOptions: ActionToggleOptions = {\n  checked: false,\n};\n\n/**\n * `ActionToggle` used to create action with toggle functionality,\n * *e.g. checkbox, toggle slider*\n *\n * ## Example\n *\n```typescript\nconst toggle = new ActionToggle({ checked: true });\n```\n *\n * **Or**\n *\n```typescript\nconst toggle = actionFactory.createToggle({ checked: true });\n```\n *\n * **Or**\n *\n```typescript\nconst toggle = actionFactory.createToggle().check();\n```\n */\nexport class ActionToggle extends ActionAbstract {\n  /**\n   * `Observable` notifying subscriptions on the change of `checked` state\n   */\n  readonly fire$: Observable;\n  /**\n   * `Observable` notifies subscriptions on following changes:\n   * *title, icon, visibility, disabled, checked*\n   */\n  readonly changes$: Observable;\n\n  /**\n   * `BehaviorSubject`, holding the current checked state\n   */\n  protected fire: BehaviorSubject;\n\n  /**\n   * Public `constructor` used to instantiate `ActionToggle`\n   *\n   * @param options Options for `ActionToggle`\n   * @param component Optional custom `Component`\n   */\n  constructor(options: ActionToggleOptions = defaultToggleOptions, component?: Type) {\n    super({ ...defaultToggleOptions, ...options }, component);\n\n    this.fire = new BehaviorSubject(!!this.options.checked);\n\n    this.fire$ = this.handleLivecycleDistinct(this.fire.asObservable(), false).pipe(\n      map(checked => ({ action: this, checked })),\n    );\n\n    this.changes$ = this.handleLivecycle(\n      merge(\n        this.title$.pipe(map(title => { title })),\n        this.icon$.pipe(map(icon => { icon })),\n        this.visible$.pipe(map(visible => { visible })),\n        this.disabled$.pipe(map(disabled => { disabled })),\n        this.fire.pipe(map(checked => { checked })),\n      ),\n    );\n\n    if (this.options.callback) {\n      this.fire$.subscribe(this.options.callback);\n    }\n  }\n\n  /**\n     * Will toggle current checked state when invoked\n     * Should be called in view component on click\n     *\n     * #### Example:\n```typescript\ntoggle.trigger();\n```\n     *\n     * @method trigger\n     */\n  trigger(): this {\n    this.fire.next(!this.fire.getValue());\n    return this;\n  }\n\n  /**\n     * Will set checked status to `true`\n     * It will **not** produce second notification if already checked\n     *\n     * #### Example:\n```typescript\ntoggle.check();\n```\n     *\n     * @method check\n     */\n  check(): this {\n    this.fire.next(true);\n    return this;\n  }\n\n  /**\n     * Will set checked status to `false`\n     * It will **not** produce second notification if already unchecked\n     *\n     * #### Example:\n```typescript\ntoggle.uncheck();\n```\n     *\n     * @method uncheck\n     */\n  uncheck(): this {\n    this.fire.next(false);\n    return this;\n  }\n\n  /**\n     * Returns boolean defining whether action is checked\n     *\n     * #### Example:\n```typescript\nconst isChecked = toggle.isChecked();\n```\n     *\n     * @method isChecked\n     */\n  isChecked(): boolean {\n    return this.fire.getValue();\n  }\n\n  /**\n     * Returns boolean defining whether action is unchecked\n     *\n     * #### Example:\n```typescript\nconst isUnchecked = toggle.isUnchecked();\n```\n     */\n  isUnchecked(): boolean {\n    return !this.fire.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            checked\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n  /**\n   * Optional callback, that will be registered as first subscriber to `fire$` observable\n   */\n  readonly callback?: ActionToggleCallback;\n  /**\n   * Optional **initial** checked state\n   */\n  readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n  /**\n   * The `ActionToggle` instance, that this event is coming from\n   */\n  readonly action: ActionToggle;\n  /**\n   * New checked state of the action\n   */\n  readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            checked\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionAbstractComponentImpl,\n  ActionAbstractEvent,\n  ActionAbstractOptions,\n} from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n  /**\n   * Optional callback, that will be registered as first subscriber to `fire$` observable\n   */\n  readonly callback?: ActionToggleCallback;\n  /**\n   * Optional **initial** checked state\n   */\n  readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n  /**\n   * The `ActionToggle` instance, that this event is coming from\n   */\n  readonly action: ActionToggle;\n  /**\n   * New checked state of the action\n   */\n  readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-anchor/action-anchor.ts\n            \n            class\n            ActionAnchor\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-anchor/action-anchor.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (52/52)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^13.3.0\n        \n            @angular/cdk : ^13.3.0\n        \n            @angular/common : ^13.3.0\n        \n            @angular/compiler : ^13.3.0\n        \n            @angular/core : ^13.3.0\n        \n            @angular/forms : ^13.3.0\n        \n            @angular/material : ^13.3.0\n        \n            @angular/platform-browser : ^13.3.0\n        \n            @angular/platform-browser-dynamic : ^13.3.0\n        \n            @angular/router : ^13.3.0\n        \n            rxjs : ^6.6.6\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n    \n\n    \n\n    \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. hide/show actions based on permissions).\nDEMO 1 Basic\n\nDEMO 2 Advanced\n\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0-development\n        \n            Homepage : https://klemenoslaj.github.io/ng-action-outlet/\n        \n            Repository : https://github.com/klemenoslaj/ng-action-outlet.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionAnchorComponentImpl   (projects/.../action-anchor.model.ts)\n                        \n                        \n                            ActionAnchorOptions   (projects/.../action-anchor.model.ts)\n                        \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnchorTarget   (projects/.../action-anchor.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-anchor/action-anchor.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionAnchorComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionAnchor should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionAnchorOptions\n                \n            \n            \n                \n                    ActionAnchor specific options, extending abstract options with it's specific properties\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnchorTarget\n                \n            \n            \n                \n                    _self: the current browsing context. (Default)\n_blank: usually a new tab, but users can configure browsers to open a new window instead.\n_parent: the parent browsing context of the current one. If no parent, behaves as _self.\n_top: the topmost browsing context (the \"highest\" context that’s an ancestor of the current one). If no ancestors, behaves as _self.\n\n                \n            \n            \n                \n                        \"_self\" | \"_blank\" | \"_parent\" | \"_top\"\n\n                \n            \n        \n    \n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                            ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-anchor.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultAbstractOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Required\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: '',\n  ariaLabel: '',\n  icon: '',\n  visible: true,\n  disabled: false,\n}\n                    \n                \n\n            \n                \n                    Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                \n            \n\n        \n    \n\n    projects/core/src/lib/action-anchor/action-anchor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultButtonOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options for ActionAnchor\nExtended by provided options in action constructor\n\n                \n            \n\n        \n    \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultButtonOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionButtonOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options for ActionButton\nExtended by provided options in action constructor\n\n                \n            \n\n        \n    \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultGroupOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionGroupOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  children: [],\n  dropdown: false,\n}\n                    \n                \n\n            \n                \n                    Default options for ActionGroup\nExtended by provided options in action constructor\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (children: AnyAction[]) => Array.from(new Set(children))\n                    \n                \n\n            \n                \n                    Will return a unique array of actions\n\n                \n            \n\n        \n    \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultToggleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionToggleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  checked: false,\n}\n                    \n                \n\n            \n                \n                    Default options for ActionToggle\nExtended by provided options in action constructor\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
