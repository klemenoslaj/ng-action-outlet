var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionAbstractComponentImpl.html",[0,0.115,1,0.604]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.214,1,0.794,2,0.739,3,0.506,4,0.506,5,0.439,6,0.262,7,0.439,8,1.683,9,0.578,10,0.907,11,2.822,12,0.434,13,1.906,14,2.839,15,3.265,16,3.034,17,0.9,18,2.657,19,2.657,20,0.317,21,1.141,22,3.074,23,0.436,24,0.045,25,1.028,26,2.638,27,1.802,28,1.845,29,2.31,30,3.034,31,0.907,32,2.033,33,2.31,34,2.31,35,0.439,36,1.279,37,1.169,38,0.689,39,0.794,40,1.481,41,0.831,42,0.578,43,0.976,44,2.499,45,1.432,46,1.469,47,2.31,48,1.432,49,1.481,50,1.279,51,1.481,52,1.802,53,1.303,54,1.683,55,0.931,56,1.313,57,1.043,58,0.739,59,1.043,60,0.831,61,0.656,62,1.935,63,1.935,64,1.935,65,1.935,66,0.831,67,0.021,68,0.029,69,0.021]],["title/interfaces/ActionAbstractEvent.html",[0,0.115,61,0.685]],["body/interfaces/ActionAbstractEvent.html",[0,0.215,1,0.594,2,0.759,3,0.52,4,0.52,5,0.451,6,0.269,7,0.451,8,1.728,9,0.594,10,0.808,11,2.727,12,0.432,13,1.658,14,2.352,15,2.705,16,3.075,17,0.673,18,1.987,19,1.987,20,0.326,21,1.161,22,2.352,23,0.326,24,0.045,25,1.042,26,2.352,27,1.348,28,1.658,29,1.728,30,2.705,31,0.919,32,1.52,33,1.728,34,1.728,35,0.451,36,1.589,37,1.2,38,0.698,39,0.808,40,1.52,41,0.853,42,0.594,43,0.987,44,2.526,45,1.458,46,1.483,47,2.352,48,1.458,49,1.52,50,1.302,51,1.52,52,1.835,53,1.53,54,2.352,55,1.302,56,1.835,57,1.458,58,1.034,59,1.458,60,1.161,61,0.916,62,2.705,63,2.705,64,2.705,65,2.705,66,1.161,67,0.022,68,0.03,69,0.022]],["title/interfaces/ActionAbstractOptions.html",[0,0.115,42,0.604]],["body/interfaces/ActionAbstractOptions.html",[0,0.205,1,0.56,2,0.715,3,0.49,4,0.49,5,0.425,6,0.253,7,0.425,8,1.628,9,0.56,10,0.891,11,2.678,12,0.431,13,1.607,14,2.258,15,2.597,16,2.597,17,0.634,18,1.872,19,1.872,20,0.307,21,1.115,22,2.258,23,0.528,24,0.045,25,0.88,26,2.258,27,1.27,28,1.935,29,1.628,30,2.597,31,0.776,32,1.433,33,1.628,34,1.628,35,0.425,36,1.25,37,1.131,38,0.677,39,0.962,40,1.987,41,1.115,42,0.776,43,1.173,44,2.8,45,1.887,46,1.452,47,3.043,48,1.887,49,1.987,50,1.55,51,2.464,52,2.374,53,1.28,54,1.628,55,0.901,56,1.27,57,1.009,58,0.715,59,1.009,60,0.804,61,0.634,62,1.872,63,1.872,64,1.872,65,1.872,66,0.804,67,0.02,68,0.028,69,0.02]],["title/classes/ActionButton.html",[41,0.868,70,0.772]],["body/classes/ActionButton.html",[3,0.221,4,0.221,5,0.191,6,0.317,7,0.191,9,0.701,10,0.902,11,1.384,12,0.407,13,1.744,14,0.733,20,0.138,21,0.604,22,1.572,23,0.568,24,0.045,27,0.572,28,1.846,29,1.222,31,0.757,33,2.04,34,1.835,35,0.533,38,0.191,39,0.804,40,0.645,41,0.906,43,0.757,45,1.8,46,1.514,47,2.204,48,1.672,49,1.94,50,1.409,51,1.94,52,1.912,57,1.138,58,1.185,59,1.977,60,0.776,66,0.362,67,0.009,68,0.015,69,0.009,70,1.185,71,0.843,72,1.265,73,0.843,74,1.222,75,2.024,76,2.049,77,1.835,78,2.689,79,1.519,80,2.48,81,2.024,82,2.024,83,0.849,84,2.288,85,4.657,86,2.818,87,1.222,88,4.567,89,3.04,90,3.04,91,2.124,92,3.04,93,3.04,94,2.604,95,2.604,96,2.604,97,2.604,98,2.604,99,2.604,100,2.604,101,2.604,102,2.604,103,2.604,104,2.604,105,2.024,106,2.024,107,2.024,108,2.024,109,1.265,110,3.293,111,1.213,112,2.604,113,2.024,114,1.835,115,1.835,116,0.843,117,1.651,118,1.213,119,3.872,120,4.465,121,1.651,122,1.213,123,2.604,124,2.024,125,2.024,126,5.378,127,1.213,128,2.024,129,2.124,130,0.758,131,1.093,132,1.213,133,3.04,134,0.843,135,1.213,136,1.213,137,1.213,138,1.213,139,1.213,140,1.213,141,0.733,142,0.99,143,0.99,144,2.111,145,1.213,146,1.213,147,1.213,148,2.024,149,1.651,150,2.024,151,2.024,152,1.213,153,2.756,154,2.024,155,2.024,156,1.213,157,1.213,158,1.808,159,1.213,160,1.213,161,2.024,162,2.024,163,1.213,164,1.213,165,3.113,166,0.99,167,1.651,168,0.572,169,1.213,170,0.99,171,0.99,172,0.99,173,1.213,174,1.213,175,1.213,176,0.362,177,1.213,178,1.213,179,1.213,180,2.024,181,1.213,182,2.689,183,2.058,184,1.213,185,1.213,186,1.213,187,1.213,188,1.213,189,1.213,190,1.213,191,1.213,192,1.213,193,1.213,194,1.213,195,2.604,196,1.213,197,1.213,198,1.213,199,1.213,200,1.213,201,1.213,202,1.213,203,1.651,204,0.99,205,1.213,206,2.756,207,0.572,208,0.99,209,0.99,210,1.213,211,1.213,212,0.572,213,0.645,214,0.843,215,0.509,216,1.808,217,2.111,218,1.213,219,1.222,220,1.213,221,2.024,222,1.213,223,0.843,224,1.213,225,1.213,226,1.213,227,1.213,228,1.213,229,1.213,230,1.213,231,1.213,232,1.213,233,0.645]],["title/interfaces/ActionButtonEvent.html",[0,0.115,213,1.546]],["body/interfaces/ActionButtonEvent.html",[0,0.199,1,0.881,2,0.863,3,0.591,4,0.591,5,0.513,6,0.305,7,0.513,9,0.675,10,0.675,12,0.399,17,0.765,20,0.371,21,1.408,23,0.57,24,0.045,25,0.998,31,0.675,35,0.669,38,0.789,39,0.881,42,0.881,43,0.675,46,1.265,53,1.548,58,1.328,59,1.218,60,1.265,61,1.111,66,1.265,67,0.025,68,0.032,69,0.025,70,1.499,72,1.218,76,1.533,83,1.981,109,1.218,130,1.218,131,1.365,212,1.533,213,2.509,234,1.964,235,1.999,236,1.999,237,1.999,238,1.218,239,1.729,240,1.729,241,1.981,242,2.947,243,1.729,244,1.533,245,1.964,246,1.964,247,1.964]],["title/interfaces/ActionButtonOptions.html",[0,0.115,109,1.089]],["body/interfaces/ActionButtonOptions.html",[0,0.186,1,0.872,2,0.85,3,0.582,4,0.582,5,0.505,6,0.301,7,0.505,9,0.665,10,0.872,12,0.351,17,0.754,20,0.365,21,1.484,23,0.567,24,0.045,25,0.754,31,0.665,35,0.663,38,0.785,39,1.033,42,0.973,43,1.033,46,1.253,53,1.398,58,1.32,59,1.573,60,0.955,61,0.989,66,1.484,67,0.024,68,0.032,69,0.024,70,1.454,72,1.2,76,1.51,83,1.967,109,1.573,130,1.2,131,1.763,212,1.51,213,2.233,234,1.935,235,1.51,236,1.51,237,1.51,238,1.2,239,1.703,240,1.703,241,2.266,242,3.455,243,1.703,244,1.98,245,2.537,246,2.537,247,2.537]],["title/interfaces/ActionGroupEvent.html",[0,0.115,248,1.757]],["body/interfaces/ActionGroupEvent.html",[0,0.198,1,0.879,2,0.861,3,0.59,4,0.59,5,0.512,6,0.305,7,0.512,9,0.674,10,0.674,12,0.406,17,0.764,20,0.37,21,1.407,23,0.537,24,0.045,25,0.997,28,1.586,31,0.674,35,0.744,36,1.085,37,1.362,38,0.744,39,0.879,42,0.879,43,0.674,46,1.407,53,1.491,55,1.085,58,1.124,60,1.263,61,1.11,66,1.263,67,0.025,68,0.032,69,0.025,83,1.979,130,1.215,131,1.362,176,1.672,182,2.254,183,1.725,235,1.996,236,1.996,237,1.996,238,1.215,244,1.529,248,2.558,249,1.362,250,1.96,251,1.996,252,1.725,253,1.362,254,2.254,255,2.648,256,2.558,257,2.648,258,2.254,259,2.254,260,2.558]],["title/interfaces/ActionGroupOptions.html",[0,0.115,253,1.221]],["body/interfaces/ActionGroupOptions.html",[0,0.184,1,0.856,2,0.827,3,0.567,4,0.567,5,0.492,6,0.293,7,0.492,9,0.647,10,0.856,12,0.369,17,0.734,20,0.355,21,1.468,23,0.561,24,0.045,25,0.734,28,1.917,31,0.647,35,0.729,36,1.042,37,1.308,38,0.729,39,1.022,42,0.96,43,1.022,46,1.379,53,1.23,55,1.379,58,0.827,60,0.93,61,0.971,66,1.468,67,0.024,68,0.031,69,0.024,83,1.94,130,1.167,131,1.731,176,1.6,182,2.865,183,2.193,235,1.469,236,1.469,237,1.469,238,1.167,244,1.944,248,1.882,249,1.308,250,1.882,251,2.179,252,1.657,253,1.731,254,2.865,255,3.366,256,3.176,257,3.773,258,2.865,259,2.865,260,3.176]],["title/interfaces/ActionOutlet.html",[0,0.115,261,1.371]],["body/interfaces/ActionOutlet.html",[0,0.155,2,0.602,3,0.412,4,0.412,5,0.358,6,0.403,7,0.521,9,0.89,10,0.686,12,0.385,13,2.133,20,0.258,23,0.628,24,0.045,25,1.12,35,0.81,36,1.105,38,0.521,39,1.157,42,0.471,43,0.81,61,0.533,67,0.017,68,0.025,69,0.017,70,1.363,71,2.296,72,1.238,74,2.873,76,1.068,79,1.782,84,1.387,87,1.996,109,1.605,110,2.356,114,2.356,115,2.356,116,3.305,141,1.996,165,2.356,176,1.576,204,4.108,207,1.068,212,1.068,214,1.574,215,2.35,219,2.873,233,2.529,238,0.849,249,1.387,251,1.068,252,1.205,253,1.799,261,2.02,262,1.574,263,2.697,264,1.757,265,2.697,266,2.697,267,2.697,268,2.697,269,2.267,270,3.713,271,2.697,272,2.267,273,2.697,274,1.799,275,2.267,276,1.716,277,1.85,278,1.205,279,1.387,280,1.85,281,1.205,282,1.85,283,1.574,284,1.574]],["title/directives/ActionOutletDirective.html",[168,1.371,285,1.546]],["body/directives/ActionOutletDirective.html",[1,0.307,3,0.269,4,0.269,5,0.233,6,0.396,7,0.375,9,0.62,10,0.307,11,1.265,12,0.428,13,2.03,17,0.56,20,0.168,23,0.541,24,0.045,25,0.944,26,2.733,27,1.407,31,1.035,35,0.54,36,1.466,37,0.62,38,0.233,41,0.891,43,0.62,45,1.282,48,1.282,50,0.494,54,1.437,55,1.145,56,0.697,57,1.501,67,0.011,68,0.018,69,0.011,70,1.119,76,1.121,77,1.437,78,1.653,79,1.405,84,0.999,86,2.606,87,1.437,91,1.206,110,2.421,114,1.804,115,1.804,134,2.074,141,2.266,144,1.653,149,2.793,153,1.942,158,2.378,165,1.804,166,1.942,167,3.578,168,1.121,170,1.942,172,4.24,176,1.257,183,1.265,207,0.697,215,0.62,217,2.074,219,2.067,223,2.074,233,1.995,238,0.554,241,0.999,243,1.265,251,1.121,256,1.437,261,2.066,263,1.942,276,0.796,281,1.265,285,2.241,286,1.479,287,1.206,288,2.38,289,2.38,290,2.38,291,2.38,292,3.753,293,2.38,294,2.38,295,2.987,296,3.693,297,3.272,298,2.38,299,1.942,300,1.942,301,1.942,302,1.653,303,2.987,304,1.479,305,2.38,306,2.38,307,2.38,308,2.987,309,2.38,310,1.479,311,4.217,312,4.386,313,1.479,314,2.38,315,2.38,316,2.38,317,2.38,318,2.38,319,2.38,320,2.38,321,2.38,322,2.987,323,2.437,324,3.424,325,2.987,326,3.424,327,2.987,328,2.987,329,2.987,330,2.987,331,2.987,332,1.653,333,1.479,334,2.38,335,2.38,336,2.38,337,2.38,338,2.38,339,2.38,340,2.38,341,1.479,342,3.753,343,3.424,344,2.38,345,2.38,346,1.479,347,1.479,348,2.38,349,2.987,350,1.479,351,2.987,352,1.479,353,1.479,354,4.011,355,3.424,356,2.38,357,3.424,358,1.479,359,1.479,360,1.479,361,1.479,362,1.479,363,1.479,364,1.479,365,1.479,366,1.479,367,1.479,368,1.479,369,3.424,370,1.479,371,1.479,372,1.206,373,2.38,374,1.479,375,1.479,376,1.479,377,1.479,378,1.479,379,1.479,380,1.479]],["title/injectables/ActionOutletFactory.html",[264,1.546,381,1.757]],["body/injectables/ActionOutletFactory.html",[3,0.326,4,0.326,5,0.283,6,0.358,9,0.791,12,0.361,13,2.097,20,0.204,23,0.587,24,0.046,25,1.025,32,1.473,35,0.74,37,0.753,38,0.283,39,1.117,41,0.535,43,0.703,45,1.757,48,1.427,55,0.927,67,0.014,68,0.021,69,0.014,70,1.329,72,1.038,74,2.833,76,1.597,77,2.833,78,3.416,79,1.875,80,2.262,87,1.674,109,1.427,110,2.046,114,2.046,115,2.046,116,3.026,165,2.046,171,2.262,176,1.436,203,2.764,207,0.845,212,0.845,214,1.246,215,2.258,217,2.862,219,2.631,233,2.559,241,1.163,249,1.163,251,1.597,252,0.953,253,1.599,260,1.674,261,1.306,264,2.026,265,2.764,266,2.764,267,2.764,268,2.262,270,3.53,271,2.262,273,2.262,274,1.599,276,1.61,277,1.464,278,0.953,279,1.163,280,1.464,281,1.801,283,1.925,297,2.262,300,2.262,302,1.246,323,2.262,332,2.647,381,1.674,382,1.794,383,1.464,384,2.773,385,2.773,386,2.773,387,2.773,388,2.773,389,1.925,390,2.773,391,3.812,392,2.773,393,2.773,394,2.773,395,2.773,396,1.794,397,2.773,398,1.794,399,2.262,400,1.794,401,2.773,402,1.674,403,1.794,404,1.794,405,1.794,406,1.794,407,1.794]],["title/modules/ActionOutletModule.html",[408,1.757,409,1.546]],["body/modules/ActionOutletModule.html",[3,0.689,4,0.689,5,0.597,6,0.356,12,0.284,23,0.432,24,0.044,35,0.799,38,0.597,41,1.13,67,0.029,68,0.035,69,0.029,168,2.735,207,1.785,408,2.288,409,2.982,410,2.631,411,2.288,412,3.091,413,4.135,414,3.091,415,2.631,416,4.135,417,3.091,418,3.091,419,3.091,420,3.813,421,3.091,422,2.631,423,3.789,424,4.674,425,3.091,426,3.813,427,3.789,428,3.789,429,3.091]],["title/interfaces/ActionToggleEvent.html",[0,0.115,430,1.757]],["body/interfaces/ActionToggleEvent.html",[0,0.194,1,0.844,2,0.809,3,0.554,4,0.554,5,0.481,6,0.286,7,0.481,9,0.632,10,0.632,12,0.406,17,0.717,20,0.347,21,1.364,23,0.579,24,0.045,25,0.956,28,1.826,31,0.632,35,0.641,38,0.769,39,0.844,42,0.844,43,0.844,44,1.62,46,1.455,50,1.529,53,1.515,58,1.295,59,1.141,60,1.212,61,1.076,66,1.212,67,0.023,68,0.031,69,0.023,79,1.522,83,1.919,130,1.141,131,1.279,235,1.915,236,1.915,237,1.915,238,1.141,239,1.62,240,1.62,241,1.919,243,1.62,244,1.436,245,1.84,246,1.84,247,1.84,274,1.279,276,1.869,278,1.62,279,1.279,281,1.62,402,3.273,430,2.761,431,1.84,432,2.823]],["title/interfaces/ActionToggleOptions.html",[0,0.115,274,1.221]],["body/interfaces/ActionToggleOptions.html",[0,0.18,1,0.833,2,0.794,3,0.544,4,0.544,5,0.472,6,0.281,7,0.472,9,0.621,10,0.833,12,0.363,17,0.704,20,0.341,21,1.444,23,0.575,24,0.045,25,0.704,28,1.813,31,0.621,35,0.633,38,0.764,39,1.005,42,0.94,43,1.12,44,2.134,46,1.444,50,1.515,53,1.351,58,1.285,59,1.503,60,0.892,61,0.945,66,1.444,67,0.023,68,0.03,69,0.023,79,1.121,83,1.901,130,1.121,131,1.685,235,1.41,236,1.41,237,1.41,238,1.121,239,1.59,240,1.59,241,2.228,243,1.59,244,1.892,245,2.424,246,2.424,247,2.424,274,1.685,276,1.805,278,1.59,279,1.256,281,1.59,402,3.26,430,2.424,431,1.807,432,3.363]],["title/coverage.html",[433,3.214]],["body/coverage.html",[0,0.219,1,0.622,5,0.473,6,0.546,7,0.797,8,2.739,23,0.342,24,0.044,41,1.445,42,0.622,61,0.706,67,0.023,68,0.031,69,0.023,70,0.796,72,1.815,73,2.792,79,1.123,84,1.258,109,1.123,168,1.413,176,0.894,213,1.594,216,2.083,234,2.428,248,1.811,249,2.12,250,2.428,253,1.258,261,1.413,262,2.083,264,1.594,274,1.258,276,1.002,279,2.033,285,1.594,287,2.446,381,1.811,383,2.446,430,1.811,431,2.428,433,2.446,434,2.446,435,2.999,436,2.999,437,5.813,438,4.847,439,4.847,440,4.021,441,2.792,442,2.999,443,5.055,444,2.446,445,5.055,446,2.999,447,3.701,448,2.999,449,2.446,450,2.446,451,4.021,452,3.28,453,2.999,454,2.446,455,2.999,456,2.999]],["title/dependencies.html",[411,2.108,457,2.446]],["body/dependencies.html",[24,0.045,67,0.031,68,0.037,69,0.031,207,1.901,209,3.291,411,2.436,425,3.291,458,4.034,459,5.771,460,4.034,461,4.034,462,4.034,463,4.856,464,3.962,465,3.291,466,4.034,467,4.034,468,4.034,469,4.034,470,4.034,471,4.034,472,4.034,473,4.034,474,4.034,475,4.034,476,4.034]],["title/miscellaneous/enumerations.html",[477,1.152,478,2.848]],["body/miscellaneous/enumerations.html",[6,0.41,7,0.688,12,0.327,20,0.497,24,0.039,50,1.459,67,0.033,68,0.039,69,0.033,142,4.15,143,4.15,144,3.533,441,3.533,477,2.056,478,3.56,479,5.088,480,3.03]],["title/index.html",[20,0.279,481,1.698,482,1.698]],["body/index.html",[12,0.417,13,1.874,17,0.567,24,0.045,27,1.135,31,0.5,32,1.836,35,0.834,38,0.696,41,1.554,45,1.293,48,0.902,49,1.28,50,0.805,52,1.135,55,1.673,56,1.135,57,0.902,67,0.018,68,0.026,69,0.018,70,1.072,74,2.438,77,2.663,84,1.011,117,1.966,129,2.818,134,3.063,141,2.086,158,1.673,176,1.315,215,1.449,251,1.135,258,1.673,259,1.673,261,1.903,264,1.836,270,2.399,276,1.561,284,1.673,285,1.28,296,1.966,299,1.966,301,1.966,302,1.673,372,1.966,389,3.243,399,1.966,408,1.455,409,2.481,415,2.804,426,3.294,429,2.818,465,1.966,481,1.673,482,1.673,483,2.41,484,2.41,485,4.67,486,2.41,487,2.41,488,2.41,489,3.455,490,2.41,491,2.41,492,2.41,493,2.41,494,1.966,495,2.41,496,2.41,497,2.41,498,2.41,499,3.455,500,1.966,501,2.41,502,2.41,503,2.41,504,2.41,505,2.41,506,2.41,507,4.859,508,1.966,509,3.455,510,5.005,511,4.038,512,4.038,513,4.038,514,2.41,515,2.41,516,2.41,517,2.41,518,2.41,519,2.41,520,4.859,521,2.41,522,2.41,523,3.455,524,2.41,525,2.41,526,2.41,527,2.41,528,3.455,529,2.41,530,3.455,531,2.41,532,3.455,533,2.41,534,4.411,535,1.966,536,2.41,537,2.41,538,2.41,539,2.41,540,2.41,541,2.41,542,3.455,543,2.41,544,3.455,545,2.41,546,2.41,547,2.41,548,2.41,549,2.41,550,2.41,551,2.41,552,2.41,553,2.41,554,2.41,555,2.41,556,2.41,557,2.41]],["title/license.html",[481,1.698,482,1.698,558,1.995]],["body/license.html",[12,0.268,24,0.034,53,1.068,57,1.34,67,0.027,68,0.034,69,0.027,121,2.921,183,1.903,206,2.921,208,2.921,389,3.133,422,2.486,434,2.921,494,2.921,500,2.921,558,2.921,559,3.58,560,4.941,561,3.58,562,3.58,563,3.58,564,3.58,565,4.512,566,3.58,567,3.58,568,3.58,569,3.58,570,3.58,571,4.512,572,5.657,573,3.58,574,3.58,575,3.58,576,4.941,577,3.58,578,4.512,579,3.58,580,3.58,581,3.58,582,3.58,583,3.58,584,3.58,585,3.58,586,3.58,587,4.512,588,3.58,589,3.58,590,3.58,591,3.58,592,3.58,593,4.512,594,4.512,595,3.58,596,3.58,597,3.58,598,3.58,599,3.58,600,3.58,601,3.58,602,3.58,603,3.58,604,3.58,605,3.58,606,3.58,607,3.58,608,3.58,609,3.58,610,3.58,611,3.58,612,3.58,613,3.58,614,3.58,615,3.58,616,3.58,617,3.58,618,3.58,619,3.58]],["title/modules.html",[410,2.736]],["body/modules.html",[24,0.039,67,0.034,68,0.039,69,0.034,409,2.403,410,3.14,464,3.689,620,4.522,621,4.522,622,4.522]],["title/overview.html",[623,3.214]],["body/overview.html",[2,1.091,24,0.041,67,0.031,68,0.037,69,0.031,71,2.855,168,2.688,285,2.185,381,2.483,408,2.966,409,2.955,411,2.483,412,3.354,413,3.354,414,3.354,415,2.855,416,3.354,417,3.354,418,3.354,419,3.354,420,4.007,421,3.354,422,2.855,508,4.285,535,3.354,623,3.354,624,4.112]],["title/miscellaneous/typealiases.html",[477,1.152,625,3.491]],["body/miscellaneous/typealiases.html",[1,1.041,6,0.493,10,0.769,12,0.277,17,1.181,20,0.422,23,0.627,24,0.035,31,1.041,36,1.677,58,1.223,67,0.028,68,0.035,69,0.028,70,1.223,72,1.387,84,1.554,130,1.879,176,1.105,212,2.172,215,1.554,234,3.03,239,2.449,240,2.449,241,1.934,242,3.201,249,1.554,250,2.783,252,2.449,262,3.201,276,1.541,278,2.449,279,1.554,282,3.022,283,2.572,284,2.572,431,3.03,432,3.201,477,1.745,480,3.824,626,3.705,627,4.61]],["title/miscellaneous/variables.html",[477,1.152,628,2.848]],["body/miscellaneous/variables.html",[6,0.472,7,0.519,12,0.376,20,0.375,23,0.573,24,0.045,36,1.099,39,1.144,40,2.671,42,0.683,45,1.231,48,1.231,51,1.748,52,1.55,55,1.429,56,2.454,57,1.882,67,0.025,68,0.032,69,0.025,70,0.873,72,1.231,73,2.968,79,1.231,84,1.38,86,3.49,109,1.231,176,0.981,215,2.337,216,2.968,223,3.297,233,1.748,249,1.38,253,1.38,254,2.284,256,2.58,260,1.986,274,1.38,276,1.099,279,1.38,332,2.284,402,1.986,441,2.968,444,3.486,447,3.873,449,3.486,450,3.873,452,3.486,454,3.486,477,1.55,480,3.617,628,2.683,629,3.289,630,3.289,631,3.289,632,3.289]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":508,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":624,"title":{},"body":{"overview.html":{}}}],["100",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":522,"title":{},"body":{"index.html":{}}}],["2.5.4",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":562,"title":{},"body":{"license.html":{}}}],["3",{"_index":524,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":535,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":545,"title":{},"body":{"index.html":{}}}],["5.0.9",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["58/58",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":553,"title":{},"body":{"index.html":{}}}],["6.4.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":592,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":238,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":8,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":295,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessed",{"_index":547,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":309,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":330,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":12,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":379,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":84,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:105",{"_index":138,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:111",{"_index":127,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:165",{"_index":136,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:205",{"_index":202,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:257",{"_index":152,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:270",{"_index":156,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:283",{"_index":157,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:292",{"_index":181,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:299",{"_index":190,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:306",{"_index":185,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:315",{"_index":197,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:323",{"_index":177,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:332",{"_index":194,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:340",{"_index":173,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:347",{"_index":201,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:355",{"_index":178,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:365",{"_index":199,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:373",{"_index":192,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:380",{"_index":189,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:387",{"_index":163,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:395",{"_index":160,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:403",{"_index":187,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:410",{"_index":188,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:419",{"_index":164,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:426",{"_index":174,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:81",{"_index":145,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:85",{"_index":139,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:90",{"_index":146,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:94",{"_index":137,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:99",{"_index":140,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstractcomponentimpl",{"_index":1,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":61,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":42,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionbutton",{"_index":70,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":405,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":242,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":212,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":213,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":109,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionfactory.createbutton",{"_index":81,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":82,"title":{},"body":{"classes/ActionButton.html":{}}}],["actiongroup",{"_index":176,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":406,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":252,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":248,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":253,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":261,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(action",{"_index":353,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":308,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":168,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":264,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodule",{"_index":409,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":55,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":184,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionstate.destroyed",{"_index":186,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionstate.inactive",{"_index":191,"title":{},"body":{"classes/ActionButton.html":{}}}],["actiontoggle",{"_index":276,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":407,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":432,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":278,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":430,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":274,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":89,"title":{},"body":{"classes/ActionButton.html":{}}}],["active",{"_index":142,"title":{},"body":{"classes/ActionButton.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":540,"title":{},"body":{"index.html":{}}}],["add",{"_index":521,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":155,"title":{},"body":{"classes/ActionButton.html":{}}}],["always",{"_index":294,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":585,"title":{},"body":{"license.html":{}}}],["angular",{"_index":27,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["angular/animations",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":425,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":207,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["anyaction",{"_index":36,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":487,"title":{},"body":{"index.html":{}}}],["application",{"_index":503,"title":{},"body":{"index.html":{}}}],["approach",{"_index":390,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropriate",{"_index":518,"title":{},"body":{"index.html":{}}}],["arising",{"_index":617,"title":{},"body":{"license.html":{}}}],["array",{"_index":254,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assigned",{"_index":343,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associate",{"_index":527,"title":{},"body":{"index.html":{}}}],["associated",{"_index":573,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":291,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":608,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":336,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["available",{"_index":556,"title":{},"body":{"index.html":{}}}],["back",{"_index":498,"title":{},"body":{"index.html":{}}}],["based",{"_index":505,"title":{},"body":{"index.html":{}}}],["basic",{"_index":75,"title":{},"body":{"classes/ActionButton.html":{}}}],["between",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bind",{"_index":554,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":414,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["browse",{"_index":622,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":464,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":488,"title":{},"body":{"index.html":{}}}],["button",{"_index":76,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.component",{"_index":529,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":214,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":234,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":151,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":73,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:39",{"_index":122,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:44",{"_index":118,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:49",{"_index":111,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:87",{"_index":147,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":72,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":391,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":561,"title":{},"body":{"license.html":{}}}],["callback",{"_index":241,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":300,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":148,"title":{},"body":{"classes/ActionButton.html":{}}}],["case",{"_index":497,"title":{},"body":{"index.html":{}}}],["change",{"_index":134,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["change/update",{"_index":329,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":85,"title":{},"body":{"classes/ActionButton.html":{}}}],["charge",{"_index":500,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":552,"title":{},"body":{"index.html":{}}}],["checkbox.component",{"_index":543,"title":{},"body":{"index.html":{}}}],["checked",{"_index":402,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":54,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":256,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":611,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{"classes/ActionButton.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":71,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"overview.html":{}}}],["clean",{"_index":388,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":375,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["click",{"_index":150,"title":{},"body":{"classes/ActionButton.html":{}}}],["cluster_actionoutletmodule",{"_index":417,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":418,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":419,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":387,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["combination",{"_index":205,"title":{},"body":{"classes/ActionButton.html":{}}}],["coming",{"_index":237,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":514,"title":{},"body":{"index.html":{}}}],["comming",{"_index":63,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":424,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":328,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":290,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":159,"title":{},"body":{"classes/ActionButton.html":{}}}],["component",{"_index":13,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["component's",{"_index":325,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":363,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":312,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":351,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":17,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":591,"title":{},"body":{"license.html":{}}}],["connection",{"_index":618,"title":{},"body":{"license.html":{}}}],["const",{"_index":78,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["constructor",{"_index":86,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":108,"title":{},"body":{"classes/ActionButton.html":{}}}],["constructor(private",{"_index":372,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["constructor(viewcontainerref",{"_index":310,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":326,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":255,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["contract",{"_index":614,"title":{},"body":{"license.html":{}}}],["copies",{"_index":587,"title":{},"body":{"license.html":{}}}],["copy",{"_index":571,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":560,"title":{},"body":{"license.html":{}}}],["core",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":433,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":74,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["createbutton",{"_index":265,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":268,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":318,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":259,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["creategroup",{"_index":266,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":271,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":267,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":273,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":317,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["current",{"_index":153,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["custom",{"_index":117,"title":{},"body":{"classes/ActionButton.html":{},"index.html":{}}}],["damages",{"_index":612,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":90,"title":{},"body":{"classes/ActionButton.html":{}}}],["deal",{"_index":575,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":619,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":413,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":215,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default's",{"_index":536,"title":{},"body":{"index.html":{}}}],["defaultabstractoptions",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":216,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":284,"title":{},"body":{"interfaces/ActionOutlet.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":110,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["defines",{"_index":334,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":182,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["dependencies",{"_index":411,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":315,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":200,"title":{},"body":{"classes/ActionButton.html":{}}}],["deploy",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["derived",{"_index":11,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["descendant",{"_index":298,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":91,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["destroyed",{"_index":144,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":337,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":331,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinamically",{"_index":292,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":285,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":286,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":342,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disable",{"_index":92,"title":{},"body":{"classes/ActionButton.html":{}}}],["disabled",{"_index":52,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":583,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":434,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doen",{"_index":135,"title":{},"body":{"classes/ActionButton.html":{}}}],["dom",{"_index":170,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["dropdown",{"_index":260,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":465,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":141,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["each",{"_index":129,"title":{},"body":{"classes/ActionButton.html":{},"index.html":{}}}],["easy",{"_index":486,"title":{},"body":{"index.html":{}}}],["enable",{"_index":93,"title":{},"body":{"classes/ActionButton.html":{}}}],["enabled",{"_index":162,"title":{},"body":{"classes/ActionButton.html":{}}}],["end",{"_index":499,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":478,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":360,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":327,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["event",{"_index":53,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":77,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["examplebuttoncomponent",{"_index":528,"title":{},"body":{"index.html":{}}}],["examplecheckboxcomponent",{"_index":542,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":544,"title":{},"body":{"index.html":{}}}],["examplegroupcomponent",{"_index":530,"title":{},"body":{"index.html":{}}}],["examplemodule",{"_index":523,"title":{},"body":{"index.html":{}}}],["exampletogglecomponent",{"_index":532,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["exports",{"_index":416,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["exposed",{"_index":371,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":600,"title":{},"body":{"license.html":{}}}],["extend",{"_index":16,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":40,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":244,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["extends",{"_index":83,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["factory",{"_index":263,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":223,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":344,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":574,"title":{},"body":{"license.html":{}}}],["fire",{"_index":58,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":395,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["first",{"_index":246,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":605,"title":{},"body":{"license.html":{}}}],["fly",{"_index":293,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":121,"title":{},"body":{"classes/ActionButton.html":{},"license.html":{}}}],["forced",{"_index":166,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["free",{"_index":568,"title":{},"body":{"license.html":{}}}],["front",{"_index":502,"title":{},"body":{"index.html":{}}}],["function",{"_index":627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functional",{"_index":385,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["furnished",{"_index":590,"title":{},"body":{"license.html":{}}}],["getactionoutlet",{"_index":346,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype",{"_index":306,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":340,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":94,"title":{},"body":{"classes/ActionButton.html":{}}}],["geticon",{"_index":95,"title":{},"body":{"classes/ActionButton.html":{}}}],["getparent",{"_index":96,"title":{},"body":{"classes/ActionButton.html":{}}}],["getter",{"_index":348,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":481,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":97,"title":{},"body":{"classes/ActionButton.html":{}}}],["goal",{"_index":484,"title":{},"body":{"index.html":{}}}],["granted",{"_index":567,"title":{},"body":{"license.html":{}}}],["group",{"_index":251,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.component",{"_index":531,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":277,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":250,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":249,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["handled",{"_index":338,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["happens",{"_index":493,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":566,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":22,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["hide",{"_index":34,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["hide/show",{"_index":504,"title":{},"body":{"index.html":{}}}],["holders",{"_index":609,"title":{},"body":{"license.html":{}}}],["holding",{"_index":128,"title":{},"body":{"classes/ActionButton.html":{}}}],["hook",{"_index":374,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["hostbinding",{"_index":30,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["html",{"_index":352,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["icon",{"_index":48,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":130,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":14,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["implemented",{"_index":204,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{}}}],["implementing",{"_index":19,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":302,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["implied",{"_index":601,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["imports",{"_index":429,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["inactive",{"_index":143,"title":{},"body":{"classes/ActionButton.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":595,"title":{},"body":{"license.html":{}}}],["including",{"_index":578,"title":{},"body":{"license.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":126,"title":{},"body":{"classes/ActionButton.html":{}}}],["initial",{"_index":44,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":258,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["injectable",{"_index":381,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":382,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":316,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":172,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["injector.get(action.constructor",{"_index":380,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":26,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":307,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["install",{"_index":509,"title":{},"body":{"index.html":{}}}],["instance",{"_index":25,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":358,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instances",{"_index":546,"title":{},"body":{"index.html":{}}}],["instantiate",{"_index":113,"title":{},"body":{"classes/ActionButton.html":{}}}],["instead",{"_index":171,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"overview.html":{}}}],["internally",{"_index":349,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":314,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["isactive",{"_index":98,"title":{},"body":{"classes/ActionButton.html":{}}}],["isdestroyed",{"_index":99,"title":{},"body":{"classes/ActionButton.html":{}}}],["isdisabled",{"_index":100,"title":{},"body":{"classes/ActionButton.html":{}}}],["isenabled",{"_index":101,"title":{},"body":{"classes/ActionButton.html":{}}}],["ishidden",{"_index":102,"title":{},"body":{"classes/ActionButton.html":{}}}],["isinactive",{"_index":103,"title":{},"body":{"classes/ActionButton.html":{}}}],["isvisible",{"_index":104,"title":{},"body":{"classes/ActionButton.html":{}}}],["it's",{"_index":131,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["js",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":386,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":599,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":563,"title":{},"body":{"license.html":{}}}],["legend",{"_index":412,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["liability",{"_index":613,"title":{},"body":{"license.html":{}}}],["liable",{"_index":610,"title":{},"body":{"license.html":{}}}],["license",{"_index":558,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":579,"title":{},"body":{"license.html":{}}}],["limited",{"_index":602,"title":{},"body":{"license.html":{}}}],["line",{"_index":515,"title":{},"body":{"index.html":{}}}],["manually",{"_index":339,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["map",{"_index":210,"title":{},"body":{"classes/ActionButton.html":{}}}],["matching",{"_index":68,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":495,"title":{},"body":{"index.html":{}}}],["menus",{"_index":489,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":604,"title":{},"body":{"license.html":{}}}],["merge",{"_index":208,"title":{},"body":{"classes/ActionButton.html":{},"license.html":{}}}],["merging",{"_index":132,"title":{},"body":{"classes/ActionButton.html":{}}}],["metadata",{"_index":304,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":203,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["methods",{"_index":87,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["miscellaneous",{"_index":477,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":559,"title":{},"body":{"license.html":{}}}],["modify",{"_index":581,"title":{},"body":{"license.html":{}}}],["module",{"_index":408,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["module,but",{"_index":539,"title":{},"body":{"index.html":{}}}],["modules",{"_index":410,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":427,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["more",{"_index":65,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["natural",{"_index":496,"title":{},"body":{"index.html":{}}}],["never",{"_index":370,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["new",{"_index":79,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":240,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":510,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":483,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":426,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":373,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":549,"title":{},"body":{"index.html":{}}}],["nide",{"_index":179,"title":{},"body":{"classes/ActionButton.html":{}}}],["noninfringement",{"_index":607,"title":{},"body":{"license.html":{}}}],["notice",{"_index":593,"title":{},"body":{"license.html":{}}}],["notified",{"_index":492,"title":{},"body":{"index.html":{}}}],["notifies",{"_index":119,"title":{},"body":{"classes/ActionButton.html":{}}}],["notify",{"_index":195,"title":{},"body":{"classes/ActionButton.html":{}}}],["notifying",{"_index":123,"title":{},"body":{"classes/ActionButton.html":{}}}],["npm",{"_index":512,"title":{},"body":{"index.html":{}}}],["observable",{"_index":59,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observables",{"_index":133,"title":{},"body":{"classes/ActionButton.html":{}}}],["obtaining",{"_index":570,"title":{},"body":{"license.html":{}}}],["once",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":303,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":297,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["oninit",{"_index":548,"title":{},"body":{"index.html":{}}}],["optional",{"_index":43,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":39,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":32,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oservable",{"_index":235,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":564,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":616,"title":{},"body":{"license.html":{}}}],["out",{"_index":422,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":511,"title":{},"body":{"index.html":{}}}],["outlet.directive",{"_index":428,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":287,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:102",{"_index":313,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:137",{"_index":341,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":321,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:83",{"_index":347,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:91",{"_index":333,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":37,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":262,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":269,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":272,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":275,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":423,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":383,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":396,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":398,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":400,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/core",{"_index":520,"title":{},"body":{"index.html":{}}}],["over",{"_index":501,"title":{},"body":{"index.html":{}}}],["override",{"_index":270,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":64,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":623,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":457,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":219,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["parent",{"_index":175,"title":{},"body":{"classes/ActionButton.html":{}}}],["particular",{"_index":494,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":565,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":506,"title":{},"body":{"index.html":{}}}],["permit",{"_index":588,"title":{},"body":{"license.html":{}}}],["person",{"_index":569,"title":{},"body":{"license.html":{}}}],["persons",{"_index":589,"title":{},"body":{"license.html":{}}}],["pointing",{"_index":526,"title":{},"body":{"index.html":{}}}],["portions",{"_index":597,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":491,"title":{},"body":{"index.html":{}}}],["previously",{"_index":180,"title":{},"body":{"classes/ActionButton.html":{}}}],["prevously",{"_index":161,"title":{},"body":{"classes/ActionButton.html":{}}}],["private",{"_index":369,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["project",{"_index":519,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":480,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":345,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":21,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["property",{"_index":29,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["protected",{"_index":218,"title":{},"body":{"classes/ActionButton.html":{}}}],["provide",{"_index":485,"title":{},"body":{"index.html":{}}}],["provided",{"_index":57,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":403,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":415,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":323,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":112,"title":{},"body":{"classes/ActionButton.html":{}}}],["publish",{"_index":582,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":606,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":257,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":236,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":557,"title":{},"body":{"index.html":{}}}],["reference",{"_index":368,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":245,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":296,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendered",{"_index":324,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renderer",{"_index":555,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":289,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering.provide",{"_index":525,"title":{},"body":{"index.html":{}}}],["represent",{"_index":169,"title":{},"body":{"classes/ActionButton.html":{}}}],["reset",{"_index":421,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":319,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":320,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":577,"title":{},"body":{"license.html":{}}}],["result",{"_index":67,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":69,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":233,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":165,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["rights",{"_index":580,"title":{},"body":{"license.html":{}}}],["root",{"_index":404,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["runtime",{"_index":490,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":209,"title":{},"body":{"classes/ActionButton.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":211,"title":{},"body":{"classes/ActionButton.html":{}}}],["same",{"_index":538,"title":{},"body":{"index.html":{}}}],["selector",{"_index":305,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":586,"title":{},"body":{"license.html":{}}}],["service",{"_index":384,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":158,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["set(children",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":350,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["seticon",{"_index":105,"title":{},"body":{"classes/ActionButton.html":{}}}],["seticon('icon",{"_index":394,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":193,"title":{},"body":{"classes/ActionButton.html":{}}}],["setter",{"_index":322,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settings",{"_index":537,"title":{},"body":{"index.html":{}}}],["settitle",{"_index":106,"title":{},"body":{"classes/ActionButton.html":{}}}],["settitle('action",{"_index":393,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('example",{"_index":551,"title":{},"body":{"index.html":{}}}],["settitle(title",{"_index":196,"title":{},"body":{"classes/ActionButton.html":{}}}],["setvisibility",{"_index":107,"title":{},"body":{"classes/ActionButton.html":{}}}],["setvisibility(visibility",{"_index":198,"title":{},"body":{"classes/ActionButton.html":{}}}],["shall",{"_index":594,"title":{},"body":{"license.html":{}}}],["shared",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shere",{"_index":18,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":282,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":33,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["software",{"_index":572,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specific",{"_index":66,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["started",{"_index":482,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":50,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["statements",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":507,"title":{},"body":{"index.html":{}}}],["string",{"_index":47,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["structural",{"_index":288,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":206,"title":{},"body":{"classes/ActionButton.html":{},"license.html":{}}}],["sublicense",{"_index":584,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":247,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":60,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":239,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":120,"title":{},"body":{"classes/ActionButton.html":{}}}],["substantial",{"_index":596,"title":{},"body":{"license.html":{}}}],["super",{"_index":220,"title":{},"body":{"classes/ActionButton.html":{}}}],["support",{"_index":620,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":621,"title":{},"body":{"modules.html":{}}}],["table",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":301,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":80,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":62,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.action",{"_index":354,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":367,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":378,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":377,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":397,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":399,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggle",{"_index":401,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":376,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":392,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.changes",{"_index":224,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":364,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":355,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance.action",{"_index":366,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":229,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire",{"_index":221,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":231,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire.next",{"_index":232,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.getcomponenttype(this.action",{"_index":361,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":299,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggle",{"_index":550,"title":{},"body":{"index.html":{}}}],["this.handlelivecycle(merge",{"_index":225,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":222,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.icon$.pipe(map(icon",{"_index":227,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.injector",{"_index":362,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.options.callback",{"_index":230,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.title$.pipe(map(title",{"_index":226,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.viewcontainerref.clear",{"_index":356,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":365,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible$.pipe(map(visible",{"_index":228,"title":{},"body":{"classes/ActionButton.html":{}}}],["throw",{"_index":359,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":45,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":281,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.component",{"_index":533,"title":{},"body":{"index.html":{}}}],["toggle.model",{"_index":280,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["toggle.model.ts",{"_index":431,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.ts",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle/action",{"_index":279,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":517,"title":{},"body":{"index.html":{}}}],["tool.choose",{"_index":516,"title":{},"body":{"index.html":{}}}],["tort",{"_index":615,"title":{},"body":{"license.html":{}}}],["travis",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["trigger",{"_index":88,"title":{},"body":{"classes/ActionButton.html":{}}}],["triggered",{"_index":125,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":332,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":23,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":625,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":217,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["undefined",{"_index":357,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["underlying",{"_index":335,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":154,"title":{},"body":{"classes/ActionButton.html":{}}}],["use",{"_index":389,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":31,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["usevalue",{"_index":534,"title":{},"body":{"index.html":{}}}],["value",{"_index":56,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":628,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":167,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["view",{"_index":149,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["viewcontainerref",{"_index":311,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":49,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"index.html":{}}}],["visible",{"_index":51,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":243,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":603,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":598,"title":{},"body":{"license.html":{}}}],["way",{"_index":283,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":124,"title":{},"body":{"classes/ActionButton.html":{}}}],["whether",{"_index":183,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"license.html":{}}}],["wish",{"_index":541,"title":{},"body":{"index.html":{}}}],["without",{"_index":576,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":513,"title":{},"body":{"index.html":{}}}],["yes",{"_index":116,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["zone.js",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":420,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        hidden\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hidden property, that HostBinding should be used for, in order to show or hide action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to show or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to show or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to show or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\n * const button = new ActionButton({ title: 'Test' });\n *Or\n * const button = actionFactory.createButton({ title: 'Test' });\n *Or\n * const button = actionFactory.createButton().setTitle('Test');\n *\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:49\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:44\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:39\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions whenever button is triggered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:111\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:165\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:94\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:105\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:85\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:99\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:81\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:90\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:87\n                            \n                        \n\n\n                \n                    \n                            Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\n     * button.trigger();\n     *\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:257\n                            \n                        \n\n\n                \n                    \n                            Will activate all observables in current action,\nunless action is already destroyed\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:270\n                            \n                        \n\n\n                \n                    \n                            Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:283\n                            \n                        \n\n\n                \n                    \n                            Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisable()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:395\n                            \n                        \n\n\n                \n                    \n                            Will disable action, if prevously enabled\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \nenable()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:387\n                            \n                        \n\n\n                \n                    \n                            Will enable action, if prevously disabled\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getForcedComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetForcedComponent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:419\n                            \n                        \n\n\n                \n                    \n                            Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                            \n                                Returns :     Type\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIcon()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:340\n                            \n                        \n\n\n                \n                    \n                            Returns current action icon\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParent()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:426\n                            \n                        \n\n\n                \n                    \n                            Returns current parent of the action\n\n\n                            \n                                Returns :     ActionGroup\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:323\n                            \n                        \n\n\n                \n                    \n                            Returns current action title\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:355\n                            \n                        \n\n\n                \n                    \n                            Will nide the action, if previously visible\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:292\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action has state ActionState.Active\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDestroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDestroyed()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:306\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:403\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action is disabled\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEnabled()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:410\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action is enabled\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHidden\n                            \n                            \n                        \n                    \n                \n                \n                    \nisHidden()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:380\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action is hidden\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInactive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisInactive()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:299\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action has state ActionState.Inactive\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:373\n                            \n                        \n\n\n                \n                    \n                            Returns boolean defining whether action is visible\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIcon\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIcon(icon: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:332\n                            \n                        \n\n\n                \n                    \n                            Will set the new icon and notify all icon subscriptions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        icon\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The new action icon\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTitle(title: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:315\n                            \n                        \n\n\n                \n                    \n                            Will set the new title and notify all title subscriptions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The new action title\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVisibility(visibility: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:365\n                            \n                        \n\n\n                \n                    \n                            Will show or hide the action depending from the provided visibility boolean\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        visibility\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The new visibility\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \nshow()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:347\n                            \n                        \n\n\n                \n                    \n                            Will show the action, if previously hidden\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trigger()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in ActionAbstract:205\n                            \n                        \n\n\n                \n                    \n                            Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = { };\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n * ```typescript\n * const button = new ActionButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton().setTitle('Test');\n * ```\n */\nexport class ActionButton extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions whenever button is triggered\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `Subject`, used to notify subscribers on action trigger\n     */\n    protected fire: Subject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionButton`\n     *\n     * @param options Options for `ActionButton`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionButtonOptions = defaultButtonOptions,\n                component?: Type) {\n        super({ ...defaultButtonOptions, ...options }, component);\n\n        this.fire = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * button.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionButton\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionButton\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionGroupOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionGroup\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionGroup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionToggleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionToggle\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionToggle\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n *Template\n * \n *\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:102\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:91\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponentType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponentType(action: AnyAction, injector: Injector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:137\n                            \n                        \n\n\n                \n                    \n                            Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    AnyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Action to get Component for\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    Injector\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Injector from current directive instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:83\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :     AnyAction\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction) {\n        this.action = action;\n\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance.action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n *Can do\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n *\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionButton with default options and component\nExample:\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionButton\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionButton\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionGroup with default options and component\nExample:\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionGroupOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionGroup\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionGroup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionToggle with default options and component\nExample:\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionToggleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionToggle\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionToggle\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule, Type, ModuleWithProviders } from '@angular/core';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n  declarations: [ActionOutletDirective],\n  imports: [CommonModule],\n  exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.4.0\n        \n            travis-deploy-once : ^5.0.9\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. hide/show actions based on permissions).\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                        ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                        ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                        ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                        ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionAbstractOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
