var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionAbstractComponentImpl.html",[0,0.115,1,0.604]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.215,1,0.805,2,0.755,3,0.517,4,0.517,5,0.449,6,0.267,7,0.449,8,1.717,9,0.59,10,0.916,11,2.836,12,0.428,13,1.918,14,2.863,15,3.293,16,3.066,17,0.913,18,2.694,19,2.694,20,0.324,21,1.157,22,1.063,23,3.293,24,0.045,25,3.066,26,0.384,27,1.039,28,2.666,29,1.828,30,0.449,31,1.297,32,1.193,33,0.696,34,0.805,35,1.512,36,0.848,37,0.669,38,2.52,39,1.452,40,1.527,41,2.666,42,1.452,43,1.512,44,1.297,45,1.512,46,1.452,47,1.828,48,1.975,49,2.694,50,1.975,51,0.951,52,1.975,53,1.975,54,1.975,55,1.512,56,1.316,57,1.717,58,0.951,59,0.59,60,1.34,61,1.065,62,0.755,63,1.065,64,0.848,65,0.669,66,1.975,67,1.975,68,1.975,69,1.975,70,0.848,71,0.022,72,0.029,73,0.022]],["title/interfaces/ActionAbstractEvent.html",[0,0.115,65,0.685]],["body/interfaces/ActionAbstractEvent.html",[0,0.215,1,0.596,2,0.762,3,0.522,4,0.522,5,0.453,6,0.27,7,0.453,8,1.734,9,0.596,10,0.81,11,2.73,12,0.43,13,1.661,14,2.357,15,2.711,16,3.081,17,0.676,18,1.994,19,1.994,20,0.327,21,1.164,22,0.988,23,1.994,24,0.045,25,1.994,26,0.388,27,1.044,28,2.357,29,1.353,30,0.453,31,1.592,32,1.205,33,0.7,34,0.81,35,1.526,36,0.856,37,0.676,38,2.53,39,1.462,40,1.532,41,2.679,42,1.462,43,1.526,44,1.305,45,1.526,46,1.462,47,1.84,48,1.994,49,2.711,50,1.994,51,0.96,52,1.994,53,1.994,54,1.994,55,1.526,56,1.532,57,2.357,58,1.305,59,0.81,60,1.84,61,1.462,62,1.036,63,1.462,64,1.164,65,0.919,66,2.711,67,2.711,68,2.711,69,2.711,70,1.164,71,0.022,72,0.03,73,0.022]],["title/interfaces/ActionAbstractOptions.html",[0,0.115,37,0.685]],["body/interfaces/ActionAbstractOptions.html",[0,0.204,1,0.545,2,0.697,3,0.478,4,0.478,5,0.414,6,0.247,7,0.414,8,1.586,9,0.545,10,0.879,11,2.656,12,0.427,13,1.585,14,2.218,15,2.551,16,2.551,17,0.618,18,1.825,19,1.825,20,0.299,21,1.095,22,1.179,23,1.825,24,0.045,25,1.825,26,0.652,27,0.864,28,2.218,29,1.238,30,0.414,31,1.228,32,1.102,33,0.668,34,0.951,35,1.952,36,1.095,37,0.864,38,2.782,39,1.871,40,1.49,41,3.211,42,1.871,43,1.952,44,1.533,45,2.436,46,1.871,47,2.355,48,2.551,49,3.184,50,2.551,51,1.228,52,2.551,53,2.551,54,2.551,55,2.436,56,1.263,57,1.586,58,0.878,59,0.545,60,1.238,61,0.984,62,0.697,63,0.984,64,0.783,65,0.618,66,1.825,67,1.825,68,1.825,69,1.825,70,0.783,71,0.02,72,0.028,73,0.02]],["title/classes/ActionButton.html",[36,0.868,74,0.772]],["body/classes/ActionButton.html",[3,0.214,4,0.214,5,0.186,6,0.312,7,0.186,9,0.746,10,0.892,11,1.353,12,0.408,13,1.728,14,0.71,20,0.134,21,0.588,22,0.792,24,0.045,26,0.682,29,0.554,30,0.524,33,0.186,34,0.792,35,0.625,36,0.889,39,1.81,40,1.528,41,2.514,42,1.654,43,1.91,44,1.392,45,1.91,46,1.833,47,1.887,51,1.437,55,2.029,59,0.746,61,1.116,62,1.173,63,1.987,64,0.99,70,0.351,71,0.009,72,0.015,73,0.009,74,1.173,75,0.817,76,1.243,77,0.817,78,1.191,79,1.609,80,1.8,81,2.781,82,2.651,83,1.61,84,2.432,85,1.973,86,1.973,87,0.828,88,2.286,89,4.696,90,1.191,91,4.523,92,2.981,93,2.981,94,2.078,95,2.981,96,2.981,97,2.547,98,2.547,99,2.547,100,2.547,101,2.547,102,2.981,103,2.547,104,2.547,105,2.547,106,2.547,107,2.547,108,2.547,109,2.547,110,1.973,111,1.973,112,1.973,113,1.973,114,3.321,115,2.306,116,1.973,117,1.243,118,3.299,119,1.177,120,2.547,121,1.973,122,2.005,123,2.005,124,0.817,125,1.609,126,1.177,127,4.005,128,4.419,129,1.609,130,1.177,131,2.547,132,1.973,133,1.973,134,5.394,135,1.177,136,1.177,137,1.973,138,1.973,139,2.078,140,0.739,141,1.069,142,1.177,143,2.981,144,0.817,145,1.177,146,1.177,147,1.177,148,1.177,149,1.177,150,0.71,151,0.96,152,0.96,153,2.07,154,1.177,155,1.177,156,2.547,157,1.177,158,1.973,159,1.609,160,1.973,161,1.973,162,1.177,163,2.932,164,1.973,165,1.973,166,1.177,167,1.177,168,2.07,169,1.177,170,1.177,171,1.973,172,1.973,173,1.177,174,1.177,175,3.136,176,1.177,177,0.96,178,1.609,179,0.554,180,1.177,181,0.96,182,0.96,183,0.96,184,1.609,185,1.177,186,1.177,187,1.177,188,0.351,189,1.177,190,1.177,191,1.177,192,1.973,193,1.177,194,2.651,195,2.029,196,1.177,197,1.177,198,1.177,199,1.177,200,1.177,201,1.177,202,1.177,203,1.177,204,1.177,205,1.177,206,1.177,207,2.981,208,1.177,209,1.177,210,1.177,211,1.177,212,1.177,213,1.177,214,1.177,215,1.177,216,1.177,217,1.609,218,0.96,219,1.177,220,2.709,221,0.554,222,0.96,223,0.96,224,1.177,225,1.177,226,0.554,227,0.625,228,0.817,229,0.494,230,1.769,231,1.177,232,1.191,233,1.177,234,1.973,235,1.177,236,0.817,237,1.177,238,1.177,239,1.177,240,1.177,241,1.177,242,1.177,243,1.177,244,1.177,245,1.177,246,0.625]],["title/interfaces/ActionButtonEvent.html",[0,0.115,227,1.546]],["body/interfaces/ActionButtonEvent.html",[0,0.199,1,0.883,2,0.867,3,0.594,4,0.594,5,0.515,6,0.307,7,0.515,9,0.678,10,0.678,12,0.399,17,0.769,20,0.372,21,1.411,22,0.678,24,0.045,26,0.677,27,1.001,30,0.671,33,0.791,34,0.883,37,1.001,40,1.269,51,1.092,56,1.55,59,0.678,62,1.33,63,1.223,64,1.269,65,1.113,70,1.269,71,0.025,72,0.032,73,0.025,74,1.5,76,1.223,87,1.985,117,1.223,140,1.223,141,1.371,226,1.539,227,2.515,247,1.973,248,2.005,249,2.005,250,2.005,251,1.223,252,1.736,253,1.736,254,1.985,255,2.955,256,1.736,257,1.539,258,1.973,259,1.973,260,1.973]],["title/interfaces/ActionButtonOptions.html",[0,0.115,117,1.089]],["body/interfaces/ActionButtonOptions.html",[0,0.186,1,0.874,2,0.854,3,0.585,4,0.585,5,0.508,6,0.302,7,0.508,9,0.668,10,0.874,12,0.352,17,0.757,20,0.367,21,1.486,22,1.034,24,0.045,26,0.674,27,0.757,30,0.664,33,0.786,34,1.034,37,1.105,40,1.256,51,1.076,56,1.401,59,0.668,62,1.323,63,1.578,64,0.96,65,0.991,70,1.486,71,0.024,72,0.032,73,0.024,74,1.456,76,1.205,87,1.971,117,1.578,140,1.205,141,1.768,226,1.516,227,2.239,247,1.943,248,1.516,249,1.516,250,1.516,251,1.205,252,1.71,253,1.71,254,2.269,255,3.461,256,1.71,257,1.985,258,2.544,259,2.544,260,2.544]],["title/interfaces/ActionGroupEvent.html",[0,0.115,261,1.757]],["body/interfaces/ActionGroupEvent.html",[0,0.199,1,0.882,2,0.865,3,0.593,4,0.593,5,0.514,6,0.306,7,0.514,9,0.677,10,0.677,12,0.406,17,0.767,20,0.371,21,1.409,22,0.677,24,0.045,26,0.639,27,1,30,0.745,31,1.09,32,1.368,33,0.745,34,0.882,37,1,40,1.409,46,1.591,56,1.493,58,1.09,59,0.677,62,1.128,64,1.267,65,1.112,70,1.267,71,0.025,72,0.032,73,0.025,87,1.983,140,1.221,141,1.368,188,1.673,194,2.264,195,1.732,248,2.002,249,2.002,250,2.002,251,1.221,257,1.536,261,2.565,262,1.368,263,1.968,264,2.002,265,1.732,266,1.368,267,2.264,268,2.66,269,2.565,270,2.66,271,2.264,272,2.264,273,2.565]],["title/interfaces/ActionGroupOptions.html",[0,0.115,266,1.221]],["body/interfaces/ActionGroupOptions.html",[0,0.184,1,0.859,2,0.831,3,0.569,4,0.569,5,0.494,6,0.294,7,0.494,9,0.65,10,0.859,12,0.369,17,0.737,20,0.357,21,1.47,22,1.023,24,0.045,26,0.666,27,0.737,30,0.731,31,1.047,32,1.314,33,0.731,34,1.023,37,1.091,40,1.382,46,1.92,56,1.234,58,1.384,59,0.65,62,0.831,64,0.934,65,0.974,70,1.47,71,0.024,72,0.031,73,0.024,87,1.945,140,1.173,141,1.736,188,1.602,194,2.874,195,2.199,248,1.476,249,1.476,250,1.476,251,1.173,257,1.95,261,1.891,262,1.314,263,1.891,264,2.184,265,1.664,266,1.736,267,2.874,268,3.376,269,3.181,270,3.782,271,2.874,272,2.874,273,3.181]],["title/interfaces/ActionOutlet.html",[0,0.115,274,1.371]],["body/interfaces/ActionOutlet.html",[0,0.155,2,0.606,3,0.415,4,0.415,5,0.36,6,0.404,7,0.524,9,0.893,10,0.69,12,0.385,13,2.135,20,0.26,22,0.813,24,0.045,26,0.746,27,1.122,30,0.811,31,1.111,33,0.524,34,1.158,37,0.537,51,0.763,65,0.537,71,0.017,72,0.025,73,0.017,74,1.365,75,2.308,76,1.244,78,2.88,83,1.786,88,1.394,90,2.006,117,1.611,118,2.365,122,2.365,123,2.365,124,3.313,150,2.006,175,2.365,188,1.579,218,4.116,221,1.076,226,1.076,228,1.586,229,2.352,232,2.88,246,2.535,251,0.855,262,1.394,264,1.076,265,1.213,266,1.805,274,2.027,275,1.586,276,2.711,277,1.766,278,2.711,279,2.711,280,2.711,281,2.711,282,2.284,283,3.718,284,2.711,285,2.284,286,2.711,287,1.805,288,2.284,289,1.72,290,1.863,291,1.213,292,1.394,293,1.863,294,1.213,295,1.863,296,1.586,297,1.586]],["title/directives/ActionOutletDirective.html",[179,1.371,298,1.546]],["body/directives/ActionOutletDirective.html",[1,0.309,3,0.27,4,0.27,5,0.234,6,0.397,7,0.377,9,0.622,10,0.309,11,1.27,12,0.428,13,2.031,17,0.563,20,0.169,22,0.622,24,0.045,26,0.643,27,0.946,28,2.739,29,1.413,30,0.542,31,1.469,32,0.624,33,0.234,36,0.894,39,1.286,42,1.286,44,0.497,51,0.799,57,1.443,58,1.148,59,1.036,60,0.7,61,1.505,71,0.011,72,0.018,73,0.011,74,1.121,80,1.443,81,2.385,82,1.66,83,1.409,88,1.003,90,1.443,94,1.213,115,2.792,118,2.427,122,1.81,123,1.81,144,2.082,150,2.273,153,1.66,159,2.802,163,1.95,168,2.385,175,1.81,177,1.95,178,3.585,179,1.126,181,1.95,183,4.244,184,3.448,188,1.26,195,1.27,221,0.7,229,0.624,232,2.074,236,2.082,246,2,251,0.557,254,1.003,256,1.27,264,1.126,269,1.443,274,2.071,276,1.95,289,0.799,294,1.27,298,2.246,299,1.487,300,1.213,301,2.391,302,2.391,303,2.391,304,2.391,305,3.764,306,2.391,307,2.391,308,2.999,309,3.7,310,3.28,311,2.391,312,1.95,313,1.95,314,1.95,315,2.391,316,1.66,317,2.999,318,1.487,319,2.391,320,2.391,321,2.391,322,2.999,323,2.391,324,1.487,325,4.226,326,4.395,327,1.487,328,2.391,329,2.391,330,2.391,331,2.391,332,2.391,333,2.391,334,2.391,335,2.391,336,2.999,337,2.446,338,3.435,339,2.999,340,3.435,341,2.999,342,2.999,343,2.999,344,2.999,345,2.999,346,1.66,347,1.487,348,2.391,349,2.391,350,2.391,351,2.391,352,2.391,353,2.391,354,2.391,355,1.487,356,3.764,357,3.435,358,2.391,359,2.391,360,1.487,361,1.487,362,2.391,363,2.999,364,1.487,365,2.999,366,1.487,367,3.435,368,2.391,369,4.226,370,2.391,371,1.487,372,1.487,373,1.487,374,1.487,375,1.487,376,1.487,377,1.487,378,1.487,379,1.487,380,1.487,381,1.487,382,3.764,383,1.487,384,1.487,385,2.391,386,1.487,387,1.487,388,1.487,389,1.487,390,1.487,391,1.487]],["title/injectables/ActionOutletFactory.html",[277,1.546,392,1.757]],["body/injectables/ActionOutletFactory.html",[3,0.33,4,0.33,5,0.287,6,0.36,9,0.797,12,0.362,13,2.1,20,0.207,22,0.709,24,0.045,26,0.698,27,1.031,30,0.743,32,0.763,33,0.287,34,1.119,36,0.542,39,1.764,42,1.437,51,1.142,58,0.936,71,0.014,72,0.021,73,0.014,74,1.333,76,1.049,78,2.845,80,2.845,81,3.428,82,3.428,83,1.881,84,2.285,90,1.691,117,1.437,118,2.063,122,2.063,123,2.063,124,3.042,175,2.063,182,2.285,188,1.442,217,2.788,221,0.857,226,0.857,228,1.263,229,2.263,232,2.645,246,2.569,254,1.175,262,1.175,264,1.61,265,0.966,266,1.611,273,1.691,274,1.32,277,2.04,278,2.788,279,2.788,280,2.788,281,2.285,283,3.541,284,2.285,286,2.285,287,1.611,289,1.616,290,1.483,291,0.966,292,1.175,293,1.483,294,1.816,296,1.945,310,2.285,313,2.285,316,1.263,337,2.285,346,2.666,392,1.691,393,1.818,394,1.483,395,2.801,396,2.801,397,2.285,398,2.801,399,2.801,400,2.801,401,1.945,402,2.801,403,3.839,404,2.801,405,2.801,406,2.801,407,2.801,408,1.818,409,2.801,410,1.818,411,2.285,412,1.818,413,2.801,414,1.691,415,1.818,416,1.818,417,1.818,418,1.818,419,1.818]],["title/modules/ActionOutletModule.html",[420,1.757,421,1.546]],["body/modules/ActionOutletModule.html",[3,0.694,4,0.694,5,0.602,6,0.358,12,0.286,24,0.044,30,0.802,33,0.602,36,1.138,71,0.029,72,0.036,73,0.029,179,2.737,221,1.799,420,2.305,421,2.986,422,2.651,423,2.305,424,3.115,425,4.149,426,3.115,427,2.651,428,4.149,429,3.115,430,3.115,431,3.115,432,3.831,433,3.115,434,2.651,435,3.818,436,3.831,437,4.696,438,3.115,439,3.818,440,3.115]],["title/interfaces/ActionToggleEvent.html",[0,0.115,441,1.757]],["body/interfaces/ActionToggleEvent.html",[0,0.194,1,0.846,2,0.813,3,0.557,4,0.557,5,0.483,6,0.288,7,0.483,9,0.636,10,0.636,12,0.406,17,0.721,20,0.349,21,1.367,22,0.846,24,0.045,26,0.688,27,0.959,30,0.643,33,0.771,34,0.846,37,0.959,38,1.627,40,1.457,44,1.532,46,1.83,56,1.518,59,0.636,62,1.297,63,1.147,64,1.216,65,1.079,70,1.216,71,0.023,72,0.031,73,0.023,83,1.527,87,1.923,140,1.147,141,1.285,248,1.921,249,1.921,250,1.921,251,1.147,252,1.627,253,1.627,254,1.923,256,1.627,257,1.443,258,1.849,259,1.849,260,1.849,287,1.285,289,1.87,291,1.627,292,1.285,294,1.627,414,3.277,441,2.768,442,1.849,443,2.832]],["title/interfaces/ActionToggleOptions.html",[0,0.115,287,1.221]],["body/interfaces/ActionToggleOptions.html",[0,0.18,1,0.836,2,0.798,3,0.547,4,0.547,5,0.474,6,0.282,7,0.474,9,0.624,10,0.836,12,0.363,17,0.708,20,0.343,21,1.447,22,1.122,24,0.045,26,0.684,27,0.708,30,0.635,33,0.765,34,1.007,37,1.069,38,2.141,40,1.447,44,1.519,46,1.817,56,1.355,59,0.624,62,1.288,63,1.508,64,0.897,65,0.948,70,1.447,71,0.023,72,0.031,73,0.023,83,1.126,87,1.906,140,1.126,141,1.69,248,1.417,249,1.417,250,1.417,251,1.126,252,1.598,253,1.598,254,2.231,256,1.598,257,1.898,258,2.433,259,2.433,260,2.433,287,1.69,289,1.807,291,1.598,292,1.262,294,1.598,414,3.263,441,2.433,442,1.816,443,3.37]],["title/coverage.html",[444,3.214]],["body/coverage.html",[0,0.22,1,0.625,5,0.475,6,0.546,7,0.798,8,2.746,24,0.044,26,0.407,36,1.448,37,0.709,65,0.709,71,0.023,72,0.031,73,0.023,74,0.8,76,1.818,77,2.802,83,1.128,88,1.264,117,1.128,179,1.42,188,0.899,227,1.602,230,2.093,247,2.436,261,1.82,262,2.124,263,2.436,266,1.264,274,1.42,275,2.093,277,1.602,287,1.264,289,1.007,292,2.037,298,1.602,300,2.459,392,1.82,394,2.459,441,1.82,442,2.436,444,2.459,445,2.459,446,3.014,447,3.014,448,5.816,449,5.063,450,3.014,451,2.802,452,3.014,453,5.063,454,2.459,455,5.063,456,3.014,457,4.548,458,3.71,459,3.014,460,2.459,461,2.459,462,3.014,463,4.034,464,3.291,465,3.014,466,2.459,467,3.014,468,3.014]],["title/dependencies.html",[423,2.108,469,2.446]],["body/dependencies.html",[24,0.045,71,0.031,72,0.037,73,0.031,221,1.894,223,3.28,423,2.427,438,3.28,470,4.021,471,5.729,472,4.021,473,4.847,474,4.021,475,4.021,476,4.021,477,4.847,478,3.954,479,3.28,480,4.021,481,4.021,482,4.021,483,4.021,484,4.021,485,4.021,486,4.021,487,4.021,488,4.021,489,4.021]],["title/miscellaneous/enumerations.html",[490,1.152,491,2.848]],["body/miscellaneous/enumerations.html",[6,0.41,7,0.689,12,0.327,20,0.498,24,0.039,44,1.46,71,0.033,72,0.039,73,0.033,151,4.153,152,4.153,153,3.535,451,3.535,490,2.058,491,3.563,492,5.09,493,3.033]],["title/index.html",[20,0.279,494,1.698,495,1.698]],["body/index.html",[12,0.417,13,1.872,17,0.565,24,0.045,29,1.132,30,0.834,33,0.695,36,1.553,39,1.291,42,0.9,43,1.277,44,0.803,47,1.132,58,1.672,59,0.499,60,1.132,61,0.9,71,0.018,72,0.026,73,0.018,74,1.07,78,2.434,79,1.96,80,2.66,88,1.008,125,1.96,139,2.812,144,3.059,150,2.082,168,1.669,188,1.314,229,1.446,264,1.132,271,1.669,272,1.669,274,1.9,277,1.832,283,2.394,289,1.559,297,1.669,298,1.277,309,1.96,312,1.96,314,1.96,316,1.669,397,2.812,401,3.239,411,1.96,420,1.451,421,2.479,427,2.8,436,3.289,440,2.812,479,1.96,494,1.669,495,1.669,496,2.403,497,2.403,498,4.664,499,2.403,500,2.403,501,2.403,502,3.448,503,2.403,504,2.403,505,2.403,506,2.403,507,1.96,508,2.403,509,2.403,510,2.403,511,2.403,512,3.448,513,1.96,514,2.403,515,2.403,516,2.403,517,2.403,518,2.403,519,2.403,520,3.448,521,2.812,522,3.448,523,2.403,524,4.855,525,3.448,526,5.001,527,4.032,528,4.032,529,4.032,530,2.403,531,2.403,532,2.403,533,2.403,534,2.403,535,2.403,536,4.855,537,2.403,538,3.448,539,2.403,540,2.403,541,2.403,542,2.403,543,3.448,544,2.403,545,3.448,546,2.403,547,3.448,548,2.403,549,4.405,550,1.96,551,2.403,552,2.403,553,2.403,554,2.403,555,2.403,556,2.403,557,3.448,558,2.403,559,3.448,560,2.403,561,2.403,562,2.403,563,2.403,564,2.403,565,2.403,566,2.403,567,2.403,568,2.403,569,2.403,570,2.403,571,2.403,572,2.403,573,2.403]],["title/license.html",[494,1.698,495,1.698,574,1.995]],["body/license.html",[12,0.269,24,0.034,56,1.071,61,1.345,71,0.027,72,0.034,73,0.027,129,2.93,195,1.909,220,2.93,222,2.93,401,3.14,434,2.494,445,2.93,507,2.93,513,2.93,574,2.93,575,3.592,576,4.948,577,3.592,578,3.592,579,3.592,580,3.592,581,4.522,582,3.592,583,3.592,584,3.592,585,3.592,586,3.592,587,4.522,588,5.661,589,3.592,590,3.592,591,3.592,592,4.948,593,3.592,594,4.522,595,3.592,596,3.592,597,3.592,598,3.592,599,3.592,600,3.592,601,3.592,602,3.592,603,4.522,604,3.592,605,3.592,606,3.592,607,3.592,608,3.592,609,4.522,610,4.522,611,3.592,612,3.592,613,3.592,614,3.592,615,3.592,616,3.592,617,3.592,618,3.592,619,3.592,620,3.592,621,3.592,622,3.592,623,3.592,624,3.592,625,3.592,626,3.592,627,3.592,628,3.592,629,3.592,630,3.592,631,3.592,632,3.592,633,3.592,634,3.592,635,3.592]],["title/modules.html",[422,2.736]],["body/modules.html",[24,0.039,71,0.034,72,0.039,73,0.034,421,2.404,422,3.142,478,3.691,636,4.524,637,4.524,638,4.524]],["title/overview.html",[639,3.214]],["body/overview.html",[2,1.093,24,0.041,71,0.031,72,0.037,73,0.031,75,2.86,179,2.689,298,2.189,392,2.487,420,2.969,421,2.957,423,2.487,424,3.36,425,3.36,426,3.36,427,2.86,428,3.36,429,3.36,430,3.36,431,3.36,432,4.011,433,3.36,434,2.86,521,4.288,550,3.36,639,3.36,640,4.119]],["title/miscellaneous/typealiases.html",[490,1.152,641,3.491]],["body/miscellaneous/typealiases.html",[1,1.043,6,0.493,10,0.771,12,0.278,17,1.182,20,0.423,24,0.035,26,0.745,31,1.68,59,1.043,62,1.225,71,0.028,72,0.035,73,0.028,74,1.225,76,1.391,88,1.559,140,1.881,188,1.108,226,2.176,229,1.559,247,3.034,252,2.454,253,2.454,254,1.937,255,3.207,262,1.559,263,2.788,265,2.454,275,3.207,289,1.544,291,2.454,292,1.559,295,3.031,296,2.58,297,2.58,442,3.034,443,3.207,490,1.75,493,3.826,642,3.715,643,4.618]],["title/miscellaneous/variables.html",[490,1.152,644,2.848]],["body/miscellaneous/variables.html",[6,0.472,7,0.519,12,0.376,20,0.375,24,0.045,26,0.679,31,1.099,34,1.144,35,2.671,39,1.231,42,1.231,45,1.747,47,1.549,55,1.747,58,1.428,60,2.454,61,1.881,71,0.025,72,0.032,73,0.025,74,0.873,76,1.231,77,2.967,83,1.231,88,1.38,115,3.49,117,1.231,188,0.98,229,2.337,230,2.967,236,3.296,246,1.747,262,1.38,266,1.38,267,2.283,269,2.58,273,1.985,287,1.38,289,1.099,292,1.38,346,2.283,414,1.985,451,2.967,454,3.486,458,3.872,460,3.486,461,3.872,464,3.486,466,3.486,490,1.549,493,3.617,644,2.683,645,3.288,646,3.288,647,3.288,648,3.288,649,3.288]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.9.1",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":521,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":640,"title":{},"body":{"overview.html":{}}}],["100",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":522,"title":{},"body":{"index.html":{}}}],["2.0.8",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":578,"title":{},"body":{"license.html":{}}}],["3",{"_index":539,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["34/34",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["37/37",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":550,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":560,"title":{},"body":{"index.html":{}}}],["5.0.11",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":569,"title":{},"body":{"index.html":{}}}],["6.5.4",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["60/60",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["8.2.14",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["_action",{"_index":23,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["above",{"_index":608,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":251,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":8,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":308,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessed",{"_index":562,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":323,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":344,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":12,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":390,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":88,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:104",{"_index":155,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:108",{"_index":146,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:113",{"_index":149,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:117",{"_index":135,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:123",{"_index":147,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:129",{"_index":136,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:224",{"_index":216,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:276",{"_index":162,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:289",{"_index":166,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:302",{"_index":167,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:311",{"_index":193,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:318",{"_index":202,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:325",{"_index":197,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:334",{"_index":211,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:342",{"_index":189,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:351",{"_index":206,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:359",{"_index":174,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:368",{"_index":209,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:376",{"_index":185,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:383",{"_index":215,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:391",{"_index":190,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:401",{"_index":213,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:409",{"_index":204,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:416",{"_index":201,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:423",{"_index":173,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:431",{"_index":170,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:439",{"_index":199,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:446",{"_index":200,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:455",{"_index":176,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:462",{"_index":186,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:95",{"_index":154,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstract:99",{"_index":148,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionabstractcomponentimpl",{"_index":1,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":65,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":37,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionbutton",{"_index":74,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":417,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":255,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":226,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":227,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":117,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionfactory.createbutton",{"_index":85,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":86,"title":{},"body":{"classes/ActionButton.html":{}}}],["actiongroup",{"_index":188,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":418,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":265,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":261,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":266,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":274,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(action",{"_index":366,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":322,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":179,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":277,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodule",{"_index":421,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":58,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":196,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionstate.destroyed",{"_index":198,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionstate.inactive",{"_index":203,"title":{},"body":{"classes/ActionButton.html":{}}}],["actiontoggle",{"_index":289,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":419,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":443,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":291,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":441,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":287,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":92,"title":{},"body":{"classes/ActionButton.html":{}}}],["active",{"_index":151,"title":{},"body":{"classes/ActionButton.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":555,"title":{},"body":{"index.html":{}}}],["add",{"_index":537,"title":{},"body":{"index.html":{}}}],["added",{"_index":50,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["advanced",{"_index":523,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":165,"title":{},"body":{"classes/ActionButton.html":{}}}],["always",{"_index":307,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":601,"title":{},"body":{"license.html":{}}}],["angular",{"_index":29,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["angular/animations",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":438,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":221,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["anyaction",{"_index":31,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":500,"title":{},"body":{"index.html":{}}}],["application",{"_index":516,"title":{},"body":{"index.html":{}}}],["approach",{"_index":402,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropriate",{"_index":534,"title":{},"body":{"index.html":{}}}],["aria",{"_index":48,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["aria/#aria",{"_index":54,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["arialabel",{"_index":55,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":633,"title":{},"body":{"license.html":{}}}],["array",{"_index":267,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assigned",{"_index":357,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associate",{"_index":542,"title":{},"body":{"index.html":{}}}],["associated",{"_index":589,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":304,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":624,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":350,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["available",{"_index":572,"title":{},"body":{"index.html":{}}}],["back",{"_index":511,"title":{},"body":{"index.html":{}}}],["based",{"_index":518,"title":{},"body":{"index.html":{}}}],["basic",{"_index":79,"title":{},"body":{"classes/ActionButton.html":{},"index.html":{}}}],["between",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bind",{"_index":570,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":426,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["browse",{"_index":638,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":478,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":501,"title":{},"body":{"index.html":{}}}],["button",{"_index":51,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.component",{"_index":544,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":228,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":247,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":161,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":77,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:39",{"_index":130,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:44",{"_index":126,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:49",{"_index":119,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:87",{"_index":157,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":76,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":403,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":577,"title":{},"body":{"license.html":{}}}],["callback",{"_index":254,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":313,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":158,"title":{},"body":{"classes/ActionButton.html":{}}}],["case",{"_index":510,"title":{},"body":{"index.html":{}}}],["change",{"_index":144,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["change/update",{"_index":343,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":89,"title":{},"body":{"classes/ActionButton.html":{}}}],["charge",{"_index":513,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":568,"title":{},"body":{"index.html":{}}}],["checkbox.component",{"_index":558,"title":{},"body":{"index.html":{}}}],["checked",{"_index":414,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":57,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":269,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":627,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/ActionButton.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":75,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"overview.html":{}}}],["clean",{"_index":400,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":387,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["click",{"_index":160,"title":{},"body":{"classes/ActionButton.html":{}}}],["cluster_actionoutletmodule",{"_index":429,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":430,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":431,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":399,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["combination",{"_index":219,"title":{},"body":{"classes/ActionButton.html":{}}}],["coming",{"_index":250,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":530,"title":{},"body":{"index.html":{}}}],["comming",{"_index":67,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":437,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":342,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":303,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":169,"title":{},"body":{"classes/ActionButton.html":{}}}],["component",{"_index":13,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["component's",{"_index":339,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":376,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":326,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":365,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":17,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":607,"title":{},"body":{"license.html":{}}}],["connection",{"_index":634,"title":{},"body":{"license.html":{}}}],["const",{"_index":82,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":116,"title":{},"body":{"classes/ActionButton.html":{}}}],["constructor(private",{"_index":564,"title":{},"body":{"index.html":{}}}],["constructor(viewcontainerref",{"_index":324,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":340,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":268,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["contract",{"_index":630,"title":{},"body":{"license.html":{}}}],["copies",{"_index":603,"title":{},"body":{"license.html":{}}}],["copy",{"_index":587,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":576,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":444,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":78,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["createbutton",{"_index":278,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":281,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":332,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":272,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["creategroup",{"_index":279,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":284,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":280,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":286,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":331,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["current",{"_index":163,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["custom",{"_index":125,"title":{},"body":{"classes/ActionButton.html":{},"index.html":{}}}],["damages",{"_index":628,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":93,"title":{},"body":{"classes/ActionButton.html":{}}}],["deal",{"_index":591,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":635,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":425,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":229,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default's",{"_index":551,"title":{},"body":{"index.html":{}}}],["defaultabstractoptions",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":230,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":297,"title":{},"body":{"interfaces/ActionOutlet.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":118,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["defines",{"_index":348,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":194,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["demo",{"_index":520,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":423,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":329,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":214,"title":{},"body":{"classes/ActionButton.html":{}}}],["deploy",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["derived",{"_index":11,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["descendant",{"_index":311,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":94,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["destroyed",{"_index":153,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":351,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":345,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinamically",{"_index":305,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":298,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":299,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":356,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disable",{"_index":95,"title":{},"body":{"classes/ActionButton.html":{}}}],["disabled",{"_index":47,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":599,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":445,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doen",{"_index":145,"title":{},"body":{"classes/ActionButton.html":{}}}],["dom",{"_index":181,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["dropdown",{"_index":273,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":479,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["each",{"_index":139,"title":{},"body":{"classes/ActionButton.html":{},"index.html":{}}}],["easy",{"_index":499,"title":{},"body":{"index.html":{}}}],["element",{"_index":52,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["enable",{"_index":96,"title":{},"body":{"classes/ActionButton.html":{}}}],["enabled",{"_index":172,"title":{},"body":{"classes/ActionButton.html":{}}}],["end",{"_index":512,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":491,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":373,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":341,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["event",{"_index":56,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":80,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["examplebuttoncomponent",{"_index":543,"title":{},"body":{"index.html":{}}}],["examplecheckboxcomponent",{"_index":557,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":559,"title":{},"body":{"index.html":{}}}],["examplegroupcomponent",{"_index":545,"title":{},"body":{"index.html":{}}}],["examplemodule",{"_index":538,"title":{},"body":{"index.html":{}}}],["exampletogglecomponent",{"_index":547,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["exports",{"_index":428,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["exposed",{"_index":384,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":616,"title":{},"body":{"license.html":{}}}],["extend",{"_index":16,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":35,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":257,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["extends",{"_index":87,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["factory",{"_index":276,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":236,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":358,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":590,"title":{},"body":{"license.html":{}}}],["fire",{"_index":62,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":407,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["first",{"_index":259,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":621,"title":{},"body":{"license.html":{}}}],["fly",{"_index":306,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":129,"title":{},"body":{"classes/ActionButton.html":{},"license.html":{}}}],["forced",{"_index":177,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["free",{"_index":584,"title":{},"body":{"license.html":{}}}],["front",{"_index":515,"title":{},"body":{"index.html":{}}}],["function",{"_index":643,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functional",{"_index":396,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["furnished",{"_index":606,"title":{},"body":{"license.html":{}}}],["getactionoutlet",{"_index":360,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getarialabel",{"_index":97,"title":{},"body":{"classes/ActionButton.html":{}}}],["getcomponenttype",{"_index":320,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":354,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":98,"title":{},"body":{"classes/ActionButton.html":{}}}],["geticon",{"_index":99,"title":{},"body":{"classes/ActionButton.html":{}}}],["getparent",{"_index":100,"title":{},"body":{"classes/ActionButton.html":{}}}],["getter",{"_index":362,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":494,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":101,"title":{},"body":{"classes/ActionButton.html":{}}}],["goal",{"_index":497,"title":{},"body":{"index.html":{}}}],["granted",{"_index":583,"title":{},"body":{"license.html":{}}}],["group",{"_index":264,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.component",{"_index":546,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":290,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":263,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":262,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hammerjs",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["handled",{"_index":352,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["happens",{"_index":506,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":582,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":156,"title":{},"body":{"classes/ActionButton.html":{}}}],["hide",{"_index":102,"title":{},"body":{"classes/ActionButton.html":{}}}],["hide/show",{"_index":517,"title":{},"body":{"index.html":{}}}],["holders",{"_index":625,"title":{},"body":{"license.html":{}}}],["holding",{"_index":138,"title":{},"body":{"classes/ActionButton.html":{}}}],["hook",{"_index":386,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["html",{"_index":315,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["https://www.w3.org/tr/wai",{"_index":53,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["icon",{"_index":42,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":140,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":14,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["implemented",{"_index":218,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{}}}],["implementing",{"_index":19,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":316,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["implied",{"_index":617,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["imports",{"_index":440,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["inactive",{"_index":152,"title":{},"body":{"classes/ActionButton.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":611,"title":{},"body":{"license.html":{}}}],["including",{"_index":594,"title":{},"body":{"license.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":134,"title":{},"body":{"classes/ActionButton.html":{}}}],["initial",{"_index":38,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":271,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["injectable",{"_index":392,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":393,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":330,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":183,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["injector.get(action.constructor",{"_index":391,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":28,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":321,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["install",{"_index":525,"title":{},"body":{"index.html":{}}}],["instance",{"_index":27,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":371,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instances",{"_index":561,"title":{},"body":{"index.html":{}}}],["instantiate",{"_index":121,"title":{},"body":{"classes/ActionButton.html":{}}}],["instead",{"_index":182,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"overview.html":{}}}],["internally",{"_index":363,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":328,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["isactive",{"_index":103,"title":{},"body":{"classes/ActionButton.html":{}}}],["isdestroyed",{"_index":104,"title":{},"body":{"classes/ActionButton.html":{}}}],["isdisabled",{"_index":105,"title":{},"body":{"classes/ActionButton.html":{}}}],["isenabled",{"_index":106,"title":{},"body":{"classes/ActionButton.html":{}}}],["ishidden",{"_index":107,"title":{},"body":{"classes/ActionButton.html":{}}}],["isinactive",{"_index":108,"title":{},"body":{"classes/ActionButton.html":{}}}],["isvisible",{"_index":109,"title":{},"body":{"classes/ActionButton.html":{}}}],["it's",{"_index":141,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["keep",{"_index":398,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":615,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":579,"title":{},"body":{"license.html":{}}}],["label",{"_index":49,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["legend",{"_index":424,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["liability",{"_index":629,"title":{},"body":{"license.html":{}}}],["liable",{"_index":626,"title":{},"body":{"license.html":{}}}],["license",{"_index":574,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":595,"title":{},"body":{"license.html":{}}}],["limited",{"_index":618,"title":{},"body":{"license.html":{}}}],["line",{"_index":531,"title":{},"body":{"index.html":{}}}],["manually",{"_index":353,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["map",{"_index":224,"title":{},"body":{"classes/ActionButton.html":{}}}],["matching",{"_index":72,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":508,"title":{},"body":{"index.html":{}}}],["menus",{"_index":502,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":620,"title":{},"body":{"license.html":{}}}],["merge",{"_index":222,"title":{},"body":{"classes/ActionButton.html":{},"license.html":{}}}],["merging",{"_index":142,"title":{},"body":{"classes/ActionButton.html":{}}}],["metadata",{"_index":318,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":217,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["methods",{"_index":90,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["miscellaneous",{"_index":490,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":575,"title":{},"body":{"license.html":{}}}],["modify",{"_index":597,"title":{},"body":{"license.html":{}}}],["module",{"_index":420,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["module,but",{"_index":554,"title":{},"body":{"index.html":{}}}],["modules",{"_index":422,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["more",{"_index":69,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":123,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["natural",{"_index":509,"title":{},"body":{"index.html":{}}}],["never",{"_index":383,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["new",{"_index":83,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":253,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":526,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":496,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":436,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":385,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":565,"title":{},"body":{"index.html":{}}}],["nide",{"_index":191,"title":{},"body":{"classes/ActionButton.html":{}}}],["noninfringement",{"_index":623,"title":{},"body":{"license.html":{}}}],["notice",{"_index":609,"title":{},"body":{"license.html":{}}}],["notified",{"_index":505,"title":{},"body":{"index.html":{}}}],["notifies",{"_index":127,"title":{},"body":{"classes/ActionButton.html":{}}}],["notify",{"_index":207,"title":{},"body":{"classes/ActionButton.html":{}}}],["notifying",{"_index":131,"title":{},"body":{"classes/ActionButton.html":{}}}],["npm",{"_index":528,"title":{},"body":{"index.html":{}}}],["null",{"_index":25,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["observable",{"_index":63,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observables",{"_index":143,"title":{},"body":{"classes/ActionButton.html":{}}}],["obtaining",{"_index":586,"title":{},"body":{"license.html":{}}}],["once",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":317,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":310,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["oninit",{"_index":563,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":34,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":397,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oservable",{"_index":248,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":580,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":632,"title":{},"body":{"license.html":{}}}],["out",{"_index":434,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":527,"title":{},"body":{"index.html":{}}}],["outlet.directive",{"_index":439,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":300,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:106",{"_index":327,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:143",{"_index":355,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":335,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:87",{"_index":361,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:95",{"_index":347,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":32,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":275,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":282,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":285,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":288,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":435,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":394,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":408,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":410,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":412,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/core",{"_index":536,"title":{},"body":{"index.html":{}}}],["over",{"_index":514,"title":{},"body":{"index.html":{}}}],["override",{"_index":283,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":68,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":639,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":469,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":232,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["parameters",{"_index":122,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["parent",{"_index":187,"title":{},"body":{"classes/ActionButton.html":{}}}],["particular",{"_index":507,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":581,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":519,"title":{},"body":{"index.html":{}}}],["permit",{"_index":604,"title":{},"body":{"license.html":{}}}],["person",{"_index":585,"title":{},"body":{"license.html":{}}}],["persons",{"_index":605,"title":{},"body":{"license.html":{}}}],["pointing",{"_index":541,"title":{},"body":{"index.html":{}}}],["portions",{"_index":613,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":504,"title":{},"body":{"index.html":{}}}],["previously",{"_index":192,"title":{},"body":{"classes/ActionButton.html":{}}}],["prevously",{"_index":171,"title":{},"body":{"classes/ActionButton.html":{}}}],["private",{"_index":382,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["project",{"_index":535,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":359,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":21,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["property",{"_index":137,"title":{},"body":{"classes/ActionButton.html":{}}}],["protected",{"_index":231,"title":{},"body":{"classes/ActionButton.html":{}}}],["provide",{"_index":498,"title":{},"body":{"index.html":{}}}],["provided",{"_index":61,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":415,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":427,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":337,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":120,"title":{},"body":{"classes/ActionButton.html":{}}}],["publish",{"_index":598,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":622,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":270,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":249,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":573,"title":{},"body":{"index.html":{}}}],["reference",{"_index":381,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":258,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":309,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendered",{"_index":338,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renderer",{"_index":571,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":302,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering.provide",{"_index":540,"title":{},"body":{"index.html":{}}}],["represent",{"_index":180,"title":{},"body":{"classes/ActionButton.html":{}}}],["required",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":433,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":333,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":334,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":593,"title":{},"body":{"license.html":{}}}],["result",{"_index":71,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":73,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":246,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":175,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["rights",{"_index":596,"title":{},"body":{"license.html":{}}}],["root",{"_index":416,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["runtime",{"_index":503,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":223,"title":{},"body":{"classes/ActionButton.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":225,"title":{},"body":{"classes/ActionButton.html":{}}}],["same",{"_index":553,"title":{},"body":{"index.html":{}}}],["selector",{"_index":319,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":602,"title":{},"body":{"license.html":{}}}],["service",{"_index":395,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":168,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["set(children",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":364,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["setarialabel",{"_index":110,"title":{},"body":{"classes/ActionButton.html":{}}}],["setarialabel(arialabel",{"_index":205,"title":{},"body":{"classes/ActionButton.html":{}}}],["seticon",{"_index":111,"title":{},"body":{"classes/ActionButton.html":{}}}],["seticon('icon",{"_index":406,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":208,"title":{},"body":{"classes/ActionButton.html":{}}}],["setter",{"_index":336,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settings",{"_index":552,"title":{},"body":{"index.html":{}}}],["settitle",{"_index":112,"title":{},"body":{"classes/ActionButton.html":{}}}],["settitle('action",{"_index":405,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('example",{"_index":567,"title":{},"body":{"index.html":{}}}],["settitle(title",{"_index":210,"title":{},"body":{"classes/ActionButton.html":{}}}],["setvisibility",{"_index":113,"title":{},"body":{"classes/ActionButton.html":{}}}],["setvisibility(visibility",{"_index":212,"title":{},"body":{"classes/ActionButton.html":{}}}],["shall",{"_index":610,"title":{},"body":{"license.html":{}}}],["shared",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shere",{"_index":18,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":295,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":114,"title":{},"body":{"classes/ActionButton.html":{}}}],["software",{"_index":588,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specific",{"_index":70,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["started",{"_index":495,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":44,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["statements",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":524,"title":{},"body":{"index.html":{}}}],["string",{"_index":41,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{}}}],["structural",{"_index":301,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":220,"title":{},"body":{"classes/ActionButton.html":{},"license.html":{}}}],["sublicense",{"_index":600,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":260,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":64,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":252,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":128,"title":{},"body":{"classes/ActionButton.html":{}}}],["substantial",{"_index":612,"title":{},"body":{"license.html":{}}}],["super",{"_index":233,"title":{},"body":{"classes/ActionButton.html":{}}}],["support",{"_index":636,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":637,"title":{},"body":{"modules.html":{}}}],["table",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":314,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":84,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":66,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.action",{"_index":369,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":380,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":370,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":389,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":409,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":411,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggle",{"_index":413,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":388,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":404,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.changes",{"_index":237,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":377,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":367,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance._action",{"_index":379,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":242,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire",{"_index":234,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":244,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire.next",{"_index":245,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.getcomponenttype(this.action",{"_index":374,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":312,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggle",{"_index":566,"title":{},"body":{"index.html":{}}}],["this.handlelivecycle(merge",{"_index":238,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":235,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.icon$.pipe(map(icon",{"_index":240,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.injector",{"_index":375,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.options.callback",{"_index":243,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.title$.pipe(map(title",{"_index":239,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.viewcontainerref.clear",{"_index":368,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":378,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible$.pipe(map(visible",{"_index":241,"title":{},"body":{"classes/ActionButton.html":{}}}],["throw",{"_index":372,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":39,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":294,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.component",{"_index":548,"title":{},"body":{"index.html":{}}}],["toggle.model",{"_index":293,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["toggle.model.ts",{"_index":442,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.ts",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle/action",{"_index":292,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":533,"title":{},"body":{"index.html":{}}}],["tool.choose",{"_index":532,"title":{},"body":{"index.html":{}}}],["tort",{"_index":631,"title":{},"body":{"license.html":{}}}],["travis",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["trigger",{"_index":91,"title":{},"body":{"classes/ActionButton.html":{}}}],["triggered",{"_index":133,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":346,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":26,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":641,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":81,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["undefined",{"_index":184,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["underlying",{"_index":349,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":164,"title":{},"body":{"classes/ActionButton.html":{}}}],["use",{"_index":401,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":59,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["usevalue",{"_index":549,"title":{},"body":{"index.html":{}}}],["value",{"_index":60,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":644,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":178,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["view",{"_index":159,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{}}}],["viewcontainerref",{"_index":325,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":43,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"index.html":{}}}],["visible",{"_index":45,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":256,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":619,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":614,"title":{},"body":{"license.html":{}}}],["way",{"_index":296,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":132,"title":{},"body":{"classes/ActionButton.html":{}}}],["whether",{"_index":195,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"license.html":{}}}],["wish",{"_index":556,"title":{},"body":{"index.html":{}}}],["without",{"_index":592,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":529,"title":{},"body":{"index.html":{}}}],["yes",{"_index":124,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["zone.js",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":432,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _action\n                                    \n                                \n                                \n                                    \n                                        _action:     Action | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n    /**\n     * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n     */\n    readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n    /**\n     * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n     */\n    readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ariaLabel\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n    /**\n     * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n     */\n    readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\n```typescript\n\nconst button = new ActionButton({ title: 'Test' });\n\n\nOr\n```typescript\n\nconst button = actionFactory.createButton({ title: 'Test' });\n\n\nOr\n```typescript\n\nconst button = actionFactory.createButton().setTitle('Test');\n```\n\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:49\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:44\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:39\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions whenever button is triggered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ariaLabel$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:117\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscribers when the ariaLabel changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:129\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:108\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:123\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:113\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:95\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:104\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-button/action-button.ts:87\n                \n            \n\n\n            \n                \n                    Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\ntypescript\n     * button.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:276\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:289\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:302\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:431\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:423\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAriaLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:359\n\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:455\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:376\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:462\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:342\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:391\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:311\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:325\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:439\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:446\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:416\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:318\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:409\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAriaLabel\n                        \n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:351\n\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:368\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:334\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:401\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:383\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:224\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = { };\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n * ```typescript\n * const button = new ActionButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton().setTitle('Test');\n * ```\n */\nexport class ActionButton extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions whenever button is triggered\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `Subject`, used to notify subscribers on action trigger\n     */\n    protected fire: Subject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionButton`\n     *\n     * @param options Options for `ActionButton`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionButtonOptions = defaultButtonOptions,\n                component?: Type) {\n        super({ ...defaultButtonOptions, ...options }, component);\n\n        this.fire = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * button.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n```typescript\n\nthis.group = new ActionGroup({\nchildren: [\nnew ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n})\n]\n});\n\n\nTemplate\n```html\n\n\n```\n\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:106\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:95\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentType(action: AnyAction, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.directive.ts:143\n                \n            \n\n\n            \n                \n                    Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                AnyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action to get Component for\n\n                                    \n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Injector from current directive instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:87\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :         AnyAction | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction | undefined) {\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action) {\n            this.action.destroy();\n        }\n\n        this.action = action;\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance._action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction | undefined {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef?: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action?: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(\n        private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector\n    ) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\n```typescript\n\nconst buttonAction = new ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n});\n\n\nCan do\n```typescript\n\nconst buttonAction = this.actionOutletFactory.createButton()\n.setTitle('Action Title')\n.setIcon('icon')\n.fire$.subscribe(callbackMethod);\n```\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionButton with default options and component\nExample:\ntypescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionGroup with default options and component\nExample:\ntypescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionToggle with default options and component\nExample:\ntypescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n    declarations: [ActionOutletDirective],\n    imports: [CommonModule],\n    exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (60/60)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.4\n        \n            travis-deploy-once : ^5.0.11\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. hide/show actions based on permissions).\nDEMO 1 Basic\n\nDEMO 2 Advanced\n\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                            ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Required\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    ariaLabel: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
